/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JGiftCard.java
 *
 * Created on 28-jun-2012, 13:05:41
 */
package com.comerzzia.jpos.gui.giftcard;

import com.comerzzia.jpos.entity.db.Cliente;
import com.comerzzia.jpos.gui.IVista;
import com.comerzzia.jpos.gui.JPrincipal;
import com.comerzzia.jpos.gui.components.JPanelImagenFondo;
import com.comerzzia.jpos.gui.reservaciones.JReservacionesCliente;
import com.comerzzia.jpos.gui.reservaciones.JReservacionesPagosV;
import com.comerzzia.jpos.gui.validation.IViewerValidationFormError;
import com.comerzzia.jpos.gui.validation.ValidadorDecimal;
import com.comerzzia.jpos.gui.validation.ValidadorObligatoriedad;
import com.comerzzia.jpos.gui.validation.ValidationFormException;
import com.comerzzia.jpos.persistencia.giftcard.GiftCardBean;
import com.comerzzia.jpos.persistencia.mediospagos.MedioPagoBean;
import com.comerzzia.jpos.persistencia.mediospagos.VencimientoBean;
import com.comerzzia.jpos.servicios.giftcard.GiftCardException;
import com.comerzzia.jpos.servicios.giftcard.GiftCardNotFoundException;
import com.comerzzia.jpos.servicios.giftcard.ServicioGiftCard;
import com.comerzzia.jpos.servicios.login.Sesion;
import com.comerzzia.jpos.servicios.mediospago.MediosPago;
import com.comerzzia.jpos.servicios.core.permisos.Operaciones;
import com.comerzzia.jpos.servicios.core.permisos.SinPermisosException;
import com.comerzzia.jpos.servicios.tramas.ParserTramaException;
import com.comerzzia.jpos.servicios.tramas.TramaTarjetaGiftCard;
import com.comerzzia.jpos.servicios.core.variables.Variables;
import com.comerzzia.jpos.servicios.giftcard.GiftCardAnuladaException;
import com.comerzzia.jpos.servicios.mediospago.tarjetas.TarjetaCredito;
import es.mpsistemas.util.log.Logger;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;

/**
 *
 * @author MGRI
 */
public class JGiftCard extends JPanelImagenFondo implements IVista, IViewerValidationFormError {

    private static Logger log = Logger.getMLogger(JGiftCard.class);
    private static int ESTADO_INICIAL = 0;
    private static int ESTADO_TARJETA_NUEVA_LEIDA = 1;
    private static int ESTADO_TARJETA_LEIDA = 2;
    // Variables
    private JPrincipal ventana_padre = null;
    private TramaTarjetaGiftCard tramaTarjetaGiftCard = null;
    private GiftCardBean tarjetaGiftCard = null;
    private int estado;
    private boolean estaEnPasoRecarga = false;
    private Cliente cliente; // cliente seleccionado en la pantalla de clientes
    

    /** Creates new form JGiftCard */
    public JGiftCard() {
        initComponents();
    }

    public JGiftCard(JPrincipal ventana_padre) {
        super();
        this.ventana_padre = ventana_padre;

        try {
            String prefijo = Variables.getVariable(Variables.POS_UI_SKIN);
            URL myurl = this.getClass().getResource("/skin/" + prefijo + "/" + prefijo + "_reservas_canastillabbsh.png");

            this.setImagenFondo((Image) ImageIO.read(new File(myurl.getPath())));
        }
        catch (IOException ex) {
        }
        initComponents();

        URL iconurl;

        iconurl = this.getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/iconoTransparente.gif");
        ImageIcon icon = new ImageIcon(iconurl);

        // Lectura de Tarjeta
        v_lectura_tarjeta.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        v_lectura_tarjeta.setResizable(false);
        v_lectura_tarjeta.setIconImage(icon.getImage());
        v_lectura_tarjeta.setLocationRelativeTo(null);
        p_lectura_tarjeta.setVentana_padre(ventana_padre);
        p_lectura_tarjeta.setContenedor(v_lectura_tarjeta);
        
        // Eventos
        registrarEventoLeerTarjeta();
        addFuntionKeysBotonesMenu();

        b_carga.setNextFocusableComponent(t_carga);
        // validadores
        t_carga.addValidador(new ValidadorDecimal(new BigDecimal(1000000),BigDecimal.ONE,2), null);
        t_carga.addValidador(new ValidadorObligatoriedad(), this);
        
        //Visibilidad
        ocultarCampos();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        v_lectura_tarjeta = new javax.swing.JDialog();
        p_lectura_tarjeta = new com.comerzzia.jpos.gui.JLecturaTarjeta();
        v_pagos = new javax.swing.JDialog();
        p_pagos = new com.comerzzia.jpos.gui.reservaciones.JReservacionesPagosV();
        l_texto_inicio = new javax.swing.JLabel();
        p_saldo = new javax.swing.JPanel();
        l_saldo = new javax.swing.JLabel();
        l_texto_saldo1 = new javax.swing.JLabel();
        l_texto_dolar_saldo1 = new javax.swing.JLabel();
        b_volver = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_carga = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        lb_error = new javax.swing.JLabel();
        l_estado_tarjeta = new javax.swing.JLabel();
        p_carga = new javax.swing.JPanel();
        l_texto_saldo2 = new javax.swing.JLabel();
        t_carga = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        l_texto_dolar_saldo = new javax.swing.JLabel();
        b_lectura_manual = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        l_introducir_gift = new javax.swing.JLabel();
        t_introducir_gift = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();

        v_lectura_tarjeta.setAlwaysOnTop(true);
        v_lectura_tarjeta.setMinimumSize(new java.awt.Dimension(354, 100));
        v_lectura_tarjeta.setModal(true);
        v_lectura_tarjeta.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        v_lectura_tarjeta.addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                v_lectura_tarjetaWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        javax.swing.GroupLayout v_lectura_tarjetaLayout = new javax.swing.GroupLayout(v_lectura_tarjeta.getContentPane());
        v_lectura_tarjeta.getContentPane().setLayout(v_lectura_tarjetaLayout);
        v_lectura_tarjetaLayout.setHorizontalGroup(
            v_lectura_tarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, v_lectura_tarjetaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(p_lectura_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        v_lectura_tarjetaLayout.setVerticalGroup(
            v_lectura_tarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(v_lectura_tarjetaLayout.createSequentialGroup()
                .addComponent(p_lectura_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(176, Short.MAX_VALUE))
        );

        v_pagos.setAlwaysOnTop(true);
        v_pagos.setMinimumSize(new java.awt.Dimension(1024, 660));
        v_pagos.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        v_pagos.setLocationRelativeTo(null);
        v_pagos.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                v_pagosWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout v_pagosLayout = new javax.swing.GroupLayout(v_pagos.getContentPane());
        v_pagos.getContentPane().setLayout(v_pagosLayout);
        v_pagosLayout.setHorizontalGroup(
            v_pagosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(v_pagosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(p_pagos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        v_pagosLayout.setVerticalGroup(
            v_pagosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, v_pagosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(p_pagos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1024, 734));
        setMinimumSize(new java.awt.Dimension(1024, 734));
        setPreferredSize(new java.awt.Dimension(1024, 734));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        l_texto_inicio.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        l_texto_inicio.setText("Pase una tarjeta Giftcard por el lector para consultar su saldo o realizar una gesti√≥n");
        l_texto_inicio.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        l_texto_inicio.setFocusable(false);
        add(l_texto_inicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 161, 764, -1));

        p_saldo.setOpaque(false);

        l_saldo.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        l_saldo.setForeground(new java.awt.Color(0, 0, 204));
        l_saldo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        l_saldo.setText("0");
        l_saldo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        l_saldo.setFocusable(false);

        l_texto_saldo1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        l_texto_saldo1.setText("Saldo:");
        l_texto_saldo1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        l_texto_saldo1.setFocusable(false);

        l_texto_dolar_saldo1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        l_texto_dolar_saldo1.setForeground(new java.awt.Color(0, 0, 204));
        l_texto_dolar_saldo1.setText("$");
        l_texto_dolar_saldo1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        l_texto_dolar_saldo1.setFocusable(false);

        javax.swing.GroupLayout p_saldoLayout = new javax.swing.GroupLayout(p_saldo);
        p_saldo.setLayout(p_saldoLayout);
        p_saldoLayout.setHorizontalGroup(
            p_saldoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_saldoLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(l_texto_saldo1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_texto_dolar_saldo1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_saldo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );
        p_saldoLayout.setVerticalGroup(
            p_saldoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_saldoLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(p_saldoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(l_saldo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_texto_dolar_saldo1)
                    .addComponent(l_texto_saldo1))
                .addGap(22, 22, 22))
        );

        add(p_saldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, -1, -1));

        b_volver.setText("<html><center>Volver<br/>F2</center></html>");
        b_volver.setActionCommand("<html><center> Cancelar <br>F2</center></html>");
        b_volver.setAlignmentY(0.0F);
        b_volver.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b_volver.setMargin(new java.awt.Insets(2, 0, 2, 0));
        b_volver.setMaximumSize(new java.awt.Dimension(76, 48));
        b_volver.setMinimumSize(new java.awt.Dimension(76, 48));
        b_volver.setNextFocusableComponent(b_lectura_manual);
        b_volver.setPreferredSize(new java.awt.Dimension(114, 48));
        b_volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_volverActionPerformed(evt);
            }
        });
        add(b_volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 634, -1, 56));

        b_carga.setEnabled(false);
        b_carga.setMargin(new java.awt.Insets(2, 0, 2, 0));
        b_carga.setMaximumSize(new java.awt.Dimension(76, 48));
        b_carga.setMinimumSize(new java.awt.Dimension(76, 48));
        b_carga.setNextFocusableComponent(b_lectura_manual);
        b_carga.setPreferredSize(new java.awt.Dimension(76, 48));
        b_carga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cargaActionPerformed(evt);
            }
        });
        add(b_carga, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 634, 108, 56));

        lb_error.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lb_error.setForeground(new java.awt.Color(255, 51, 0));
        add(lb_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 585, 20));

        l_estado_tarjeta.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        l_estado_tarjeta.setForeground(new java.awt.Color(0, 0, 204));
        l_estado_tarjeta.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        l_estado_tarjeta.setFocusable(false);
        add(l_estado_tarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 392, 33));

        p_carga.setOpaque(false);

        l_texto_saldo2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        l_texto_saldo2.setLabelFor(t_carga);
        l_texto_saldo2.setText("Carga:");
        l_texto_saldo2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        l_texto_saldo2.setFocusable(false);

        t_carga.setText("jTextFieldForm1");
        t_carga.setNextFocusableComponent(b_volver);

        l_texto_dolar_saldo.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        l_texto_dolar_saldo.setText("$");
        l_texto_dolar_saldo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        l_texto_dolar_saldo.setFocusable(false);

        javax.swing.GroupLayout p_cargaLayout = new javax.swing.GroupLayout(p_carga);
        p_carga.setLayout(p_cargaLayout);
        p_cargaLayout.setHorizontalGroup(
            p_cargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_cargaLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(l_texto_saldo2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_texto_dolar_saldo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(t_carga, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
        p_cargaLayout.setVerticalGroup(
            p_cargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_cargaLayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(p_cargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(t_carga, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_texto_dolar_saldo)
                    .addComponent(l_texto_saldo2))
                .addGap(22, 22, 22))
        );

        add(p_carga, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 470, -1, -1));

        b_lectura_manual.setLabel("<html><center>Lectura<br>Manual<br>F8</center></html>");
        b_lectura_manual.setMargin(new java.awt.Insets(2, 0, 2, 0));
        b_lectura_manual.setMaximumSize(new java.awt.Dimension(76, 48));
        b_lectura_manual.setMinimumSize(new java.awt.Dimension(76, 48));
        b_lectura_manual.setNextFocusableComponent(b_carga);
        b_lectura_manual.setPreferredSize(new java.awt.Dimension(76, 48));
        b_lectura_manual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_lectura_manualActionPerformed(evt);
            }
        });
        add(b_lectura_manual, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 634, 108, 56));

        l_introducir_gift.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        l_introducir_gift.setLabelFor(t_introducir_gift);
        l_introducir_gift.setText("N¬∫ GiftCard:");
        l_introducir_gift.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        l_introducir_gift.setFocusable(false);
        add(l_introducir_gift, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 110, -1));

        t_introducir_gift.setNextFocusableComponent(b_volver);
        t_introducir_gift.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_introducir_giftKeyPressed(evt);
            }
        });
        add(t_introducir_gift, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 210, 330, 35));
    }// </editor-fold>//GEN-END:initComponents

    private void b_volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_volverActionPerformed
        accionVolver();
}//GEN-LAST:event_b_volverActionPerformed

    private void b_cargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cargaActionPerformed
        accionCargar();
}//GEN-LAST:event_b_cargaActionPerformed

    private void v_lectura_tarjetaWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_v_lectura_tarjetaWindowGainedFocus
        p_lectura_tarjeta.iniciaFoco();
}//GEN-LAST:event_v_lectura_tarjetaWindowGainedFocus

    private void v_pagosWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_v_pagosWindowOpened
        p_pagos.iniciaFoco();
}//GEN-LAST:event_v_pagosWindowOpened

    private void b_lectura_manualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_lectura_manualActionPerformed
        accionLecturaManual();
    }//GEN-LAST:event_b_lectura_manualActionPerformed

    private void t_introducir_giftKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_introducir_giftKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                if(t_introducir_gift.getText().length() == 16){
                    eventoLecturaTarjetaGiftCard(t_introducir_gift.getText());
                }else{
                     lb_error.setText("La longitud de la tarjeta debe ser de 16 d√≠gitos");
                }
                
            }
            catch (ParserTramaException ex) {
                log.debug("Error parseando la trama de la tarjeta");
                lb_error.setText("El n√∫mero de tarjeta no es v√°lido");
            }
        }
    }//GEN-LAST:event_t_introducir_giftKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_carga;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_lectura_manual;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_volver;
    private javax.swing.JLabel l_estado_tarjeta;
    private javax.swing.JLabel l_introducir_gift;
    private javax.swing.JLabel l_saldo;
    private javax.swing.JLabel l_texto_dolar_saldo;
    private javax.swing.JLabel l_texto_dolar_saldo1;
    private javax.swing.JLabel l_texto_inicio;
    private javax.swing.JLabel l_texto_saldo1;
    private javax.swing.JLabel l_texto_saldo2;
    private javax.swing.JLabel lb_error;
    private javax.swing.JPanel p_carga;
    private com.comerzzia.jpos.gui.JLecturaTarjeta p_lectura_tarjeta;
    private com.comerzzia.jpos.gui.reservaciones.JReservacionesPagosV p_pagos;
    private javax.swing.JPanel p_saldo;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_carga;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_introducir_gift;
    private javax.swing.JDialog v_lectura_tarjeta;
    private javax.swing.JDialog v_pagos;
    // End of variables declaration//GEN-END:variables

    @Override
    public void iniciaVista() {
        l_texto_inicio.setText("Pase la tarjeta Giftcard por el lector para consultar su saldo o realizar una gesti√≥n");
        resetearFormulario();
        iniciaFoco();
        ocultarCampos();
    }

    @Override
    public void iniciaFoco() {
        b_volver.requestFocus();
    }

    private void accionLeerTarjetaGiftCard() {
        if (JPrincipal.getVistaActualS().equals(JPrincipal.VISTA_GIFTCARD)) {
            if (Sesion.getDatosConfiguracion().isModoDesarrollo()) {
                // Hacemos aparecer el input de introducci√≥n de bandas de la tarjeta
                //v_lectura_tarjeta.setSize(400, 400);
                v_lectura_tarjeta.setMinimumSize(new Dimension(550, 330));
                p_lectura_tarjeta.setMinimumSize(new Dimension(520, 310));
            }
            p_lectura_tarjeta.iniciaVista();
            v_lectura_tarjeta.setVisible(true);
            try{
                if (p_lectura_tarjeta.getBine() != null && !p_lectura_tarjeta.getBine().isEmpty()) {
                    ocultarCampos();
                    eventoLecturaTarjetaGiftCard(p_lectura_tarjeta.getBine());
                }
            } catch (ParserTramaException e) {
                log.debug("Error parseando la trama de la tarjeta");
                lb_error.setText("Error leyendo la banda de la tarjeta");                
            }
        }
    }
    public Action listenerTarjeta = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent act) {
            accionLeerTarjetaGiftCard();
        }
    };

    public void registrarEventoLeerTarjeta() {
        KeyStroke keyEnter = KeyStroke.getKeyStroke(KeyEvent.VK_5, InputEvent.SHIFT_DOWN_MASK); //% es SHIFT + 5
        addHotKey(keyEnter, "LecturaTarjetaGiftCard", listenerTarjeta);
    }

    private void eventoLecturaTarjetaGiftCard(String tarjetaLeida) throws ParserTramaException {

        // Ocultar datos de tarjeta leida previamente            
        resetearFormulario();

        // LEER LA TARJETA
        //Buscamos los bines por si es GiftCard de Sukasa
        MedioPagoBean medPag = TarjetaCredito.getBINMedioPagoBanda(tarjetaLeida);
        TramaTarjetaGiftCard tident;
        if(medPag != null && medPag.isGiftCard()){        
            tident = new TramaTarjetaGiftCard(tarjetaLeida, medPag.getCodMedioPago());
        } else {
            tident = new TramaTarjetaGiftCard(tarjetaLeida);
        }
        accionLecturaTarjeta(tident);
         
    }

    private void accionLecturaTarjeta(TramaTarjetaGiftCard tident) {
        try {
            log.debug("accionLecturaTarjeta()");
            lb_error.setText("");
            this.tramaTarjetaGiftCard = tident;
            tarjetaGiftCard = ServicioGiftCard.consultar(tident.getIdGiftCard());
            log.debug("Se ha encontrado la Gift Card registrada en BD.");
            this.estado = JGiftCard.ESTADO_TARJETA_LEIDA;
            t_introducir_gift.setText(tident.getIdGiftCard());
            t_introducir_gift.setVisible(true);
            t_introducir_gift.setEditable(false);
            l_saldo.setText(tarjetaGiftCard.getSaldo().toString());
            p_saldo.setVisible(true);
            b_carga.setText("<html><center> Recargar <br>F9</center></html>");
            b_carga.setEnabled(true);
            b_carga.requestFocus();
        }
        catch (GiftCardNotFoundException e) {            
            log.debug("No se ha encontrado la Gift Card registrada en BD. Nueva Gift Card");
            this.estado = JGiftCard.ESTADO_TARJETA_NUEVA_LEIDA;
            //l_saldo.setText("0");
            //p_saldo.setVisible(true);
            t_introducir_gift.setText(tident.getIdGiftCard());
            t_introducir_gift.setVisible(true);
            t_introducir_gift.setEditable(false);
            l_estado_tarjeta.setText("Tarjeta no Activa");
            b_carga.setText("<html><center> Activar <br>F9</center></html>");
            b_carga.setEnabled(true);
            b_carga.requestFocus();     
        }
        catch (GiftCardAnuladaException e) {            
            log.debug("La GiftCard registrada en BD no est√° activa. Activando GiftCard");
            this.estado = JGiftCard.ESTADO_TARJETA_NUEVA_LEIDA;
            //l_saldo.setText("0");
            //p_saldo.setVisible(true);
            l_estado_tarjeta.setText("Tarjeta no Activa");
            b_carga.setText("<html><center> Activar <br>F9</center></html>");
            b_carga.setEnabled(true);
            b_carga.requestFocus();     
        }        
        catch (GiftCardException e) {
            log.debug("Ocurri√≥ un error en la lectura en base de datos de la GiftCard", e);
            this.estado = JGiftCard.ESTADO_INICIAL;
            resetearFormulario();
            lb_error.setText("Error consultando Gift Card");
        }
        catch (Exception e) {
            log.debug("Ocurri√≥ un error en la lectura en base de datos de la GiftCard", e);
            this.estado = JGiftCard.ESTADO_INICIAL;
            resetearFormulario();
            lb_error.setText("Error consultando Gift Card");
        }
    }

    private void resetearFormulario() {
        
        estaEnPasoRecarga = false;
        b_carga.setText("");
        b_carga.setEnabled(false);
        cliente = null;
        
        this.tramaTarjetaGiftCard = null;
        this.tarjetaGiftCard = null;
        lb_error.setText("");
        p_saldo.setVisible(false);
        p_carga.setVisible(false);
        l_estado_tarjeta.setText("");
        t_carga.setText("");
        t_carga.setEnabled(false);
        b_volver.requestFocus();
        t_carga.setValidacionHabilitada(false);
        
    }

    private void accionCargar() {
        
        try { 
            // Comprobamos que la tarjeta es de un descuento que podemos recargar
            if (this.tarjetaGiftCard !=null || this.tramaTarjetaGiftCard!=null){
                VencimientoBean venEfectiSocio = MediosPago.getInstancia().getPagoEfectivo().getVencimientoDefault();
                String codigoMedioPago;
                if (this.tarjetaGiftCard !=null){
                    codigoMedioPago = tarjetaGiftCard.getCodMedioPago();
                } else{
                    codigoMedioPago = tramaTarjetaGiftCard.getCodMedioPago();
                }
                MedioPagoBean medioPagotGiftCard= MediosPago.getInstancia().getMedioPago(codigoMedioPago);                
                
                if (medioPagotGiftCard == null){                    
                    log.error("Medio de pago no encontrado: "+ codigoMedioPago);
                    throw new GiftCardException("No se encontr√≥ el medio de pago asociado a la tarjeta ");
                }
                
                VencimientoBean venTarjeta = medioPagotGiftCard.getVencimientoDefault();              
                                
                /*
                if (venTarjeta.getDescuentoNoAfiliados().compareTo(venEfectiSocio.getDescuentoAfiliados())>0){
                    throw new GiftCardException("No es posible recargar esta tarjeta en el Terminal de Venta");
                }
                 *  // TODO: GIFTCARD: Con nuevos medios de pago: calcular descuentos GIFTCARD
                 */
                
            }
            String autorizador = ventana_padre.compruebaAutorizacion(Operaciones.CARGAR_GIFTCARD);
        
        if (b_carga.isEnabled()){
            log.debug("AccionCargar()");
            
            // Preguntamos El saldo a Cargar
            if (!estaEnPasoRecarga){
                ventana_padre.irReservacionesClienteView(JReservacionesCliente.OPERACIONRESERVAPAGOGIFTCARD);
                // Se vuelve de la llamada en el metodo setCliente()
            }
            else{
                log.debug("Accedemos a pago de la recarga");
                try{
                    t_carga.validar();
                    BigDecimal importe = new BigDecimal(t_carga.getText());
                    
                    crearVentanaPagos(importe, importe, autorizador);
                }
                 catch(Exception e){
                     log.error("Error pagando GiftCard: "+e.getMessage(),e);                     
                }
            }             
        }
        } 
        catch(SinPermisosException e){
            log.debug("No se tiene permisos para realizar la operaci√≥n sobre la Gift Card");
            ventana_padre.crearError("No tiene permisos para realizar la operaci√≥n");
        }
        catch(GiftCardException e){
             log.debug(e.getMessage());
             ventana_padre.crearError(e.getMessage());
             
        }
        catch(Exception e){
             log.debug("Se produjo un error al realizar la operaci√≥n",e);
             ventana_padre.crearError("Se produjo un error al realizar la operaci√≥n");
             
        }
    }
    
    
    private void accionVolver() {
        ventana_padre.showView(JPrincipal.VISTA_INICIO);         
    }

    @Override
    public void addError(ValidationFormException e) {
        lb_error.setText(e.getMessage());
    }

    @Override
    public void clearError() {
        lb_error.setText("");
    }
    
    
    // ACCIONES
    
  private void addFuntionKeysBotonesMenu() {

        KeyStroke f2 = KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0);
        Action listenerf2 = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                accionVolver();
            }
            
        };
        addHotKey(f2, "IdentClientF2", listenerf2);

        KeyStroke f9 = KeyStroke.getKeyStroke(KeyEvent.VK_F9, 0);
        Action listenerf9 = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                accionCargar();
            }
        };
        addHotKey(f9, "IdentClientF9", listenerf9);

        KeyStroke f8 = KeyStroke.getKeyStroke(KeyEvent.VK_F8, 0);
        Action listenerf8 = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                accionLecturaManual();
            }
        };
        addHotKey(f8, "IdentClientF8", listenerf8);       

    }
    
    
    // PAGOS
    //crearVentanaPagos(reservacion.getArticuloSeleccionado().getPrecioTotal(), reservacion.getArticuloSeleccionado().getPrecioTotal());
    
    public void crearVentanaPagos(BigDecimal importeMinimo, BigDecimal importeMaximo, String autorizador) {
        log.debug("creci√≥n de la ventana de pagos");
        v_pagos.getContentPane().removeAll();

        p_pagos = new JReservacionesPagosV(ventana_padre,importeMaximo,cliente,importeMaximo,tramaTarjetaGiftCard,tarjetaGiftCard,autorizador);
        javax.swing.GroupLayout v_pagosLayout = new javax.swing.GroupLayout(v_pagos.getContentPane());
        v_pagos.getContentPane().setLayout(v_pagosLayout);
        v_pagosLayout.setHorizontalGroup(
                v_pagosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(v_pagosLayout.createSequentialGroup().addContainerGap().addComponent(p_pagos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        v_pagosLayout.setVerticalGroup(
                v_pagosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, v_pagosLayout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(p_pagos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));
        p_pagos.setContenedor(v_pagos);
        v_pagos.getContentPane().add(p_pagos);
        v_pagos.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        v_pagos.requestFocus();
        p_pagos.iniciaVista();
        v_pagos.setVisible(true);
        p_pagos.isCancelado();        
    }

    
    public void setCliente(Cliente cliente) {
        log.debug("setCliente() establecemos el cliente ");
        this.cliente = cliente;
        estaEnPasoRecarga=true;
        if (cliente !=null){
            t_carga.setValidacionHabilitada(true);
            p_carga.setVisible(true);
            t_carga.requestFocus();
            b_carga.setText("<html><center> Realizar Carga <br>F9</center></html>");
            t_carga.setEnabled(true);
            b_lectura_manual.setNextFocusableComponent(b_carga);
        }
    }

    private void accionLecturaManual() {
        try {
            String autorizador = ventana_padre.compruebaAutorizacion(Operaciones.LECTURA_GIFTCARD, "<html>La tarjeta requiere autorizaci√≥n<br> para su lectura manual</html>");
            l_introducir_gift.setVisible(true);
            t_introducir_gift.setVisible(true);
            t_introducir_gift.setText("");
            t_introducir_gift.setEditable(true);
            // Ocultar datos de trajeta leida previamente            
            resetearFormulario();         
            t_introducir_gift.requestFocus();
        }
        catch (SinPermisosException ex) {
            log.debug("No se tiene permisos para realizar la lectura manual de la Gift Card");
            ventana_padre.crearError("No tiene permisos para realizar la operaci√≥n");
        }
    }
    
    private void ocultarCampos() {
       /* t_introducir_gift.setVisible(false);
        l_introducir_gift.setVisible(false);
        t_introducir_gift.setText("");*/
    }
}
