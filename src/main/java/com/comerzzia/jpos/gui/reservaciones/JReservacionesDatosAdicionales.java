/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JReservacionesDatosAdicionales.java
 *
 * Created on 12-mar-2012, 18:17:08
 */
package com.comerzzia.jpos.gui.reservaciones;

import com.comerzzia.jpos.entity.db.Cliente;
import com.comerzzia.jpos.entity.db.Vendedor;
import com.comerzzia.jpos.gui.IVista;
import com.comerzzia.jpos.gui.JPrincipal;
import com.comerzzia.jpos.gui.components.JPanelImagenFondo;
import com.comerzzia.jpos.gui.validation.IValidableForm;
import com.comerzzia.jpos.gui.validation.IViewerValidationFormError;
import com.comerzzia.jpos.gui.validation.ValidadorFecha;
import com.comerzzia.jpos.gui.validation.ValidadorHora;
import com.comerzzia.jpos.gui.validation.ValidadorObligatoriedad;
import com.comerzzia.jpos.gui.validation.ValidadorTelefono;
import com.comerzzia.jpos.gui.validation.ValidadorTexto;
import com.comerzzia.jpos.gui.validation.ValidationFormException;
import com.comerzzia.jpos.persistencia.reservaciones.reservatipos.ReservaTiposBean;
import com.comerzzia.jpos.servicios.tickets.TicketException;
import com.comerzzia.jpos.servicios.login.Sesion;
import com.comerzzia.jpos.servicios.core.permisos.Operaciones;
import com.comerzzia.jpos.servicios.core.permisos.SinPermisosException;
import com.comerzzia.jpos.servicios.core.variables.Variables;
import com.comerzzia.util.imagenes.Imagenes;
import es.mpsistemas.util.fechas.Fecha;
import es.mpsistemas.util.log.Logger;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.KeyStroke;


    // Variables declaration - do not modify

    // Variables declaration - do not modify
/**
 *
 * @author MGRI
 */
public class JReservacionesDatosAdicionales extends JPanelImagenFondo implements IVista, IViewerValidationFormError {

    private static final Logger log = Logger.getMLogger(JReservacionesDatosAdicionales.class);
    
    private static final Byte CLIENTESELECCIONADO = 0;
    Cliente clienteConsultado; //cliente consultado sobre el que se realizan la accion
    Vendedor vendedor;
    ReservaTiposBean tipoReserva;
    private List<IValidableForm> formularioCliente;
    
    JPrincipal ventana_padre = null;
    // tipo de reserva.

    
    
    /** Creates new form JReservacionesDatosAdicionales */
    public JReservacionesDatosAdicionales() {
        initComponents();
    }
    
    public JReservacionesDatosAdicionales(JPrincipal ventana_padre, Cliente clienteConsultado,Vendedor vendedor, ReservaTiposBean tipoReserva ) {
        
        this.ventana_padre = ventana_padre;
        this.clienteConsultado = clienteConsultado;
        this.vendedor = vendedor;
        this.tipoReserva = tipoReserva;
        
        // PANTALLA DE FONDO
        try {
            String prefijo = Variables.getVariable(Variables.POS_UI_SKIN);
            URL myurl = this.getClass().getResource("/skin/" + prefijo + "/" + prefijo + "_reserva_datos_adicionales.png");

            this.setImagenFondo((Image) ImageIO.read(new File(myurl.getPath())));
        }
        catch (IOException ex) {
        }
        
        initComponents();
        
        Imagenes.cambiarImagenPublicidad(jLabel30);
        this.lb_cliente.setText(clienteConsultado.getNombre() + " " + clienteConsultado.getApellido());
        this.lb_nombre_reserva.setText(tipoReserva.getDesTipo()+"_"+clienteConsultado.getNombre().replaceAll(" ", "_") + "_" + clienteConsultado.getApellido().replaceAll(" ", "_"));
        this.lb_tipo_reservacion.setText(tipoReserva.getDesTipo());
        
        addFunctionKeys();
        iniciaFoco();
        inicializaValidacion();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu_navegacion = new javax.swing.JPanel();
        b_m_editar_cliente = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_m_facturar_otro_cliente = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_m_consumidor_final = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_m_informacion_extra = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_m_confirmar_cliente = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_m_menu_principal = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_m_seleccionar_cliente = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        t_direccion_evento = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_fecha_evento = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_hora_evento = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_telefono_organizadora = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_apellidos_organizadora = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_nombre_organizadora = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        jLabel4 = new javax.swing.JLabel();
        lb_tipo_reservacion = new javax.swing.JLabel();
        lb_nombre_reserva = new javax.swing.JLabel();
        lb_cliente = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();

        menu_navegacion.setBackground(new java.awt.Color(255, 255, 255));
        menu_navegacion.setOpaque(false);
        menu_navegacion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        b_m_editar_cliente.setEnabled(false);
        b_m_editar_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_m_editar_clienteActionPerformed(evt);
            }
        });
        menu_navegacion.add(b_m_editar_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 7, 85, 85));

        b_m_facturar_otro_cliente.setEnabled(false);
        b_m_facturar_otro_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_m_facturar_otro_clienteActionPerformed(evt);
            }
        });
        menu_navegacion.add(b_m_facturar_otro_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 7, 85, 85));

        b_m_consumidor_final.setAlignmentX(1.0F);
        b_m_consumidor_final.setEnabled(false);
        b_m_consumidor_final.setMargin(new java.awt.Insets(0, -5, 0, 0));
        b_m_consumidor_final.setMinimumSize(new java.awt.Dimension(90, 87));
        b_m_consumidor_final.setPreferredSize(new java.awt.Dimension(90, 87));
        b_m_consumidor_final.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_m_consumidor_finalActionPerformed(evt);
            }
        });
        menu_navegacion.add(b_m_consumidor_final, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 7, 85, 85));

        b_m_informacion_extra.setEnabled(false);
        b_m_informacion_extra.setMargin(new java.awt.Insets(0, -3, 0, 0));
        b_m_informacion_extra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_m_informacion_extraActionPerformed(evt);
            }
        });
        menu_navegacion.add(b_m_informacion_extra, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 7, 85, 85));

        b_m_confirmar_cliente.setEnabled(false);
        b_m_confirmar_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_m_confirmar_clienteActionPerformed(evt);
            }
        });
        menu_navegacion.add(b_m_confirmar_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 7, 85, 85));

        b_m_menu_principal.setText("<html><center>Menú Principal <br/>F12</center></html>");
        b_m_menu_principal.setNextFocusableComponent(t_nombre_organizadora);
        b_m_menu_principal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_m_menu_principalActionPerformed(evt);
            }
        });
        menu_navegacion.add(b_m_menu_principal, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 7, 85, 85));

        b_m_seleccionar_cliente.setText("<html><center>Reservar <br/> F2</center></html>");
        b_m_seleccionar_cliente.setActionCommand("Identificar Cliente F3");
        b_m_seleccionar_cliente.setMargin(new java.awt.Insets(0, -3, 0, 0));
        b_m_seleccionar_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_m_seleccionar_clienteActionPerformed(evt);
            }
        });
        menu_navegacion.add(b_m_seleccionar_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 7, 85, 85));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Reservación :");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Nombre de Reserva :");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Para el Cliente :");

        jLabel5.setDisplayedMnemonic('n');
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setLabelFor(t_nombre_organizadora);
        jLabel5.setText("Nombres de la organizadora :");

        jLabel6.setDisplayedMnemonic('a');
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setLabelFor(t_apellidos_organizadora);
        jLabel6.setText("Apellidos de la organizadora :");

        jLabel7.setDisplayedMnemonic('t');
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setLabelFor(t_telefono_organizadora);
        jLabel7.setText("Teléfono de la organizadora :");

        jLabel8.setDisplayedMnemonic('d');
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setLabelFor(t_direccion_evento);
        jLabel8.setText("Dirección del evento :");

        jLabel9.setDisplayedMnemonic('f');
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setLabelFor(t_fecha_evento);
        jLabel9.setText("Fecha del Evento :");

        jLabel10.setDisplayedMnemonic('h');
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setLabelFor(t_hora_evento);
        jLabel10.setText("Hora del evento:");

        t_direccion_evento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_direccion_eventoActionPerformed(evt);
            }
        });

        t_apellidos_organizadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_apellidos_organizadoraActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 18));
        jLabel4.setText("Datos de la Reserva:");

        lb_tipo_reservacion.setFont(lb_tipo_reservacion.getFont().deriveFont(lb_tipo_reservacion.getFont().getStyle() | java.awt.Font.BOLD, lb_tipo_reservacion.getFont().getSize()+2));
        lb_tipo_reservacion.setForeground(new java.awt.Color(0, 102, 255));
        lb_tipo_reservacion.setText("reserva");

        lb_nombre_reserva.setFont(lb_nombre_reserva.getFont().deriveFont(lb_nombre_reserva.getFont().getStyle() | java.awt.Font.BOLD, lb_nombre_reserva.getFont().getSize()+2));
        lb_nombre_reserva.setForeground(new java.awt.Color(0, 102, 255));
        lb_nombre_reserva.setText("nombre");

        lb_cliente.setFont(lb_cliente.getFont().deriveFont(lb_cliente.getFont().getStyle() | java.awt.Font.BOLD, lb_cliente.getFont().getSize()+2));
        lb_cliente.setForeground(new java.awt.Color(0, 102, 255));
        lb_cliente.setText("cliente");

        jLabel30.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(t_apellidos_organizadora, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(t_direccion_evento, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(t_fecha_evento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(t_hora_evento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(t_telefono_organizadora, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lb_tipo_reservacion, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                                            .addComponent(t_nombre_organizadora, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lb_cliente, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                                            .addComponent(lb_nombre_reserva, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(menu_navegacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_tipo_reservacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_nombre_reserva, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(t_nombre_organizadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(t_apellidos_organizadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(t_telefono_organizadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(t_direccion_evento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(t_fecha_evento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(t_hora_evento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(menu_navegacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(542, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_m_editar_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_m_editar_clienteActionPerformed
        
}//GEN-LAST:event_b_m_editar_clienteActionPerformed

    private void b_m_facturar_otro_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_m_facturar_otro_clienteActionPerformed
       
}//GEN-LAST:event_b_m_facturar_otro_clienteActionPerformed

    private void b_m_consumidor_finalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_m_consumidor_finalActionPerformed
        log.info("");

}//GEN-LAST:event_b_m_consumidor_finalActionPerformed

    private void b_m_informacion_extraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_m_informacion_extraActionPerformed
        
        
    }//GEN-LAST:event_b_m_informacion_extraActionPerformed

    private void b_m_confirmar_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_m_confirmar_clienteActionPerformed
        
}//GEN-LAST:event_b_m_confirmar_clienteActionPerformed

    private void b_m_menu_principalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_m_menu_principalActionPerformed
       accionMenu();
}//GEN-LAST:event_b_m_menu_principalActionPerformed

        @Override
    public void iniciaVista() {
        iniciaFoco();
    }

    @Override
    public void iniciaFoco() {
        t_nombre_organizadora.requestFocus();
    }


    private void b_m_seleccionar_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_m_seleccionar_clienteActionPerformed
        
        accionReservar();

}//GEN-LAST:event_b_m_seleccionar_clienteActionPerformed

    private void t_apellidos_organizadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_apellidos_organizadoraActionPerformed
        
    }//GEN-LAST:event_t_apellidos_organizadoraActionPerformed

    private void t_direccion_eventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_direccion_eventoActionPerformed
        
    }//GEN-LAST:event_t_direccion_eventoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_m_confirmar_cliente;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_m_consumidor_final;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_m_editar_cliente;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_m_facturar_otro_cliente;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_m_informacion_extra;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_m_menu_principal;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_m_seleccionar_cliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lb_cliente;
    private javax.swing.JLabel lb_nombre_reserva;
    private javax.swing.JLabel lb_tipo_reservacion;
    private javax.swing.JPanel menu_navegacion;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_apellidos_organizadora;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_direccion_evento;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_fecha_evento;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_hora_evento;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_nombre_organizadora;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_telefono_organizadora;
    // End of variables declaration//GEN-END:variables

        private void iniciaNuevaVenta(Cliente cliente, Byte tipo) {
        if (!Sesion.getCajaActual().isCajaParcialAbierta()) {// || !Sesion.getCajaActual().isCajaParcialAbierta()) { //para que entre
            ventana_padre.crearAdvertencia(Variables.getVariable(Variables.MENSAJE_AVISO_CAJA_CERRADA));
            //ventana_padre.showView("movimientos");
            try {
                ventana_padre.compruebaAutorizacion(Operaciones.GESTIONAR_CAJA);
                ventana_padre.addCierreCajaView();
                ventana_padre.showView("cierre_caja");
            } catch (SinPermisosException e) {
                log.debug("Cajero sin permisos para realizar la operación");
                //ventana_padre.crearSinPermisos("No tiene permisos para realizar la operación");
            } catch (Exception e) {
                ventana_padre.crearError(null);
            }
        } else {
            try {
                String strFechaEvento = t_fecha_evento.getText()+" "+t_hora_evento.getText();
                Fecha fechaEvento = new Fecha(strFechaEvento, "dd-MMM-yyyy HH:mm");
                Sesion.iniciaNuevaReserva(cliente, tipoReserva, t_nombre_organizadora.getText(), t_apellidos_organizadora.getText(), t_telefono_organizadora.getText(), t_direccion_evento.getText(), fechaEvento);
                Sesion.getTicketReservacion().setVendedor((Vendedor) vendedor);

                 if (tipo == CLIENTESELECCIONADO) {
                    Sesion.getTicketReservacion().setFacturacionCliente();
                    if (Sesion.getCajaActual().limiteDeRetiro()) {
                        ventana_padre.crearAdvertencia(Variables.getVariable(Variables.MENSAJE_AVISO_RETIRO));
                    }
                    this.ventana_padre.addReservacionesVentaView();
                    this.ventana_padre.showView("reservaciones-venta");
                 }
            } catch (TicketException e) {
                ventana_padre.crearError(e.getMessage());
            }
        }
    }

    private void inicializaValidacion() {
        
        // Crear formulario de cliente
        log.info("Crear formulario cliente");
        formularioCliente = new LinkedList();
        formularioCliente.add(t_nombre_organizadora);
        formularioCliente.add(t_apellidos_organizadora);
        formularioCliente.add(t_telefono_organizadora);
        formularioCliente.add(t_direccion_evento);
        formularioCliente.add(t_fecha_evento);
        formularioCliente.add(t_hora_evento);
        
        // Inicializar Validación
        t_nombre_organizadora.setReformatea(true);
        t_nombre_organizadora.setFormatearTexto(true);
        t_nombre_organizadora.addValidador(new ValidadorObligatoriedad(), this);
        t_nombre_organizadora.addValidador(new ValidadorTexto(100), this);
        
        t_apellidos_organizadora.setReformatea(true);
        t_apellidos_organizadora.setFormatearTexto(true);
        t_apellidos_organizadora.addValidador(new ValidadorObligatoriedad(), this);
        t_apellidos_organizadora.addValidador(new ValidadorTexto(100), this);
        
        t_telefono_organizadora.addValidador(new ValidadorObligatoriedad(), this);
        ValidadorTelefono validadorTelefono = new ValidadorTelefono();
        validadorTelefono.esHTML = false;
        t_telefono_organizadora.addValidador(validadorTelefono, this);
        
        t_direccion_evento.setReformatea(true);
        t_direccion_evento.addValidador(new ValidadorObligatoriedad(), this);
        t_direccion_evento.addValidador(new ValidadorTexto(400), this);
        
        t_fecha_evento.addValidador(new ValidadorObligatoriedad(), this);
        Fecha fechaMax = new Fecha();
        fechaMax.sumaAños(2);
        Fecha fechaMin = new Fecha();
        fechaMin.sumaDias(-1);
        t_fecha_evento.addValidador(new ValidadorFecha(fechaMin.getDate(), fechaMax.getDate()), this); 
        
        t_hora_evento.addValidador(new ValidadorObligatoriedad(), this);
        t_hora_evento.addValidador(new ValidadorHora(), this);
        
    }
    
    
    
     private void validarFormulario() throws ValidationFormException {
        try {
            // Validamos primero el formulario porque la validación de fecha puede cambiar el valor del componente
            for (IValidableForm elem : formularioCliente) {
                //elem.requestFocus();
                elem.validar();
            }
        }
      catch (ValidationFormException e) {
            throw e;
        }
        catch (Exception e) {
            log.error("Error en la validación del formulario", e);
            throw new ValidationFormException("No se pudo validar el formulario");
            
        }
      }

    private void addFunctionKeys() {
        KeyStroke f2 = KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0);
        Action listenerf2 = new AbstractAction() {
            public void actionPerformed(ActionEvent ae) {
                accionReservar();
            }
        };
        addHotKey(f2, "IdentClientF2", listenerf2);
        
        KeyStroke f12 = KeyStroke.getKeyStroke(KeyEvent.VK_F12, 0);
        Action listenerf12 = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                accionMenu();
            }
        };
        addHotKey(f12, "IdentClientF12", listenerf12);
    }
     
    @Override
    public void addError(ValidationFormException e) {
        ventana_padre.crearError(e.getMessage());
    }

    @Override
    public void clearError() {
        
    }

    private void accionReservar() {
               log.info("RESERVAR CON DATOS INGRESADOS");
        
            log.info("cliente consultado :" + clienteConsultado.getCodcli());            
               
                    try {    
                        validarFormulario();
                        if (clienteConsultado != null && clienteConsultado.getIdentificacion() != null) {
                            iniciaNuevaVenta(clienteConsultado, CLIENTESELECCIONADO);
                        }                                            
                    
                    }
                    catch (ValidationFormException ex){
                        log.debug("Excepción al validar campo en el formulario");
                    }                    
                    catch (Exception ex) {
                        log.error("Excepcion no controlada", ex);
                    }  
    }

    private void accionMenu() {
        if(b_m_menu_principal.isEnabled()){
           log.info("MENÚ PRINCIPAL");            
           this.ventana_padre.mostrarMenu("reservaciones-cliente", "NUEVA_RESERVACION");
       }
    }



}