/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JReservacionesLiquidacionParcial.java
 *
 * Created on 28-sep-2011, 13:18:52
 */
package com.comerzzia.jpos.gui.reservaciones;

import com.comerzzia.jpos.gui.IVista;
import com.comerzzia.jpos.gui.components.JVentanaDialogo;
import com.comerzzia.jpos.gui.reservaciones.modelos.MostrarReservacionesCellRenderer;
import com.comerzzia.jpos.gui.reservaciones.modelos.MostrarReservacionesTableModel;
import com.comerzzia.jpos.persistencia.reservaciones.reservaarticulo.ReservaArticuloBean;
import com.comerzzia.util.numeros.bigdecimal.Numero;
import es.mpsistemas.util.log.Logger;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Admin
 */
public class JReservacionesLiquidacionParcial extends JVentanaDialogo implements IVista {

    private static final Logger log = Logger.getMLogger(JReservacionesLiquidacionParcial.class);
    private JDialog contenedor;
    private List<ReservaArticuloBean> articulosSeleccionados;
    private List<ReservaArticuloBean> articulosNoComprados;
    private BigDecimal totalAbonado;
    private BigDecimal seleccionados;
    private BigDecimal restante;
    private boolean cancelado = false;
    private BigDecimal descuento;

    /** Creates new form JReservacionesLiquidacionParcial */
    public JReservacionesLiquidacionParcial() {
        initComponents();

    }

    public JReservacionesLiquidacionParcial(List<ReservaArticuloBean> articulosNoComprados, BigDecimal totalAbonado) {
        this.totalAbonado = totalAbonado;
        seleccionados = Numero.redondear(BigDecimal.ZERO);
        restante = Numero.redondear(totalAbonado);
        initComponents();
        articulosSeleccionados = new LinkedList<ReservaArticuloBean>();
        this.articulosNoComprados = articulosNoComprados;
        tb_articulos.setDefaultRenderer(Object.class, new MostrarReservacionesCellRenderer());
        refrescarTabla();
        t_total_abonado.setText(Numero.redondear(totalAbonado).toString());
        t_restante_abonos.setText(restante.toString());
        t_articulos_seleccionados.setText(seleccionados.toString());
        registraEventoEnterBoton();
        registrarEventoBloqueoAplicacion();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb_articulos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        b_ok = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_cancelar = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        jLabel2 = new javax.swing.JLabel();
        t_total_abonado = new javax.swing.JTextField();
        t_articulos_seleccionados = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        t_restante_abonos = new javax.swing.JTextField();
        lb_error = new javax.swing.JLabel();

        tb_articulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_articulos.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tb_articulos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tb_articulosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tb_articulos);

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD, 18));
        jLabel1.setText("Remate Parcial");

        b_ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/aceptar.png"))); // NOI18N
        b_ok.setMnemonic('a');
        b_ok.setText("Aceptar");
        b_ok.setFont(b_ok.getFont().deriveFont((float)15));
        b_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_okActionPerformed(evt);
            }
        });

        b_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/cancelar.png"))); // NOI18N
        b_cancelar.setText("Cancelar");
        b_cancelar.setFont(b_cancelar.getFont().deriveFont((float)15));
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        jLabel2.setText("Total abonos: ");

        t_total_abonado.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        t_total_abonado.setEnabled(false);

        t_articulos_seleccionados.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        t_articulos_seleccionados.setEnabled(false);

        jLabel3.setText("Total art√≠culos seleccionados: ");

        jLabel4.setText("Abonos disponibles:");

        t_restante_abonos.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        t_restante_abonos.setEnabled(false);

        lb_error.setForeground(new java.awt.Color(255, 0, 51));
        lb_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(434, Short.MAX_VALUE)
                .addComponent(b_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lb_error, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(t_total_abonado, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(t_articulos_seleccionados, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(t_restante_abonos, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(310, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb_error, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(t_total_abonado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(t_articulos_seleccionados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(t_restante_abonos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void b_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_okActionPerformed
    log.info("Acci√≥n Aceptar");
    for (ReservaArticuloBean reserva : articulosSeleccionados) {
        reserva.setComprado(false);
    }
    contenedor.setVisible(false);

}//GEN-LAST:event_b_okActionPerformed

private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
    log.info("Acci√≥n Cancelar");
    for (ReservaArticuloBean reserva : articulosSeleccionados) {
        reserva.setComprado(false);
    }
    cancelado = true;
    contenedor.setVisible(false);
}//GEN-LAST:event_b_cancelarActionPerformed

private void tb_articulosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_articulosKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        ReservaArticuloBean articulo = articulosNoComprados.get(tb_articulos.getSelectedRow());
        if (!articulo.getComprado()) {
            articulo.setDescuento(descuento);
            if (restante.compareTo(articulo.getPrecioTotal()) >= 0) {
                articulosSeleccionados.add(articulo);
                articulo.setComprado(true);
                seleccionados = seleccionados.add(articulo.getPrecioTotal());
                restante = totalAbonado.subtract(seleccionados);
                t_articulos_seleccionados.setText(Numero.redondear(seleccionados).toString());
                t_restante_abonos.setText(Numero.redondear(restante).toString());
                refrescarTabla();
                log.debug("Art√≠culo marcado como comprado.");
                lb_error.setText("");
            }
            else {
                articulo.setDescuento(null);
                log.debug("No tiene suficientes abonos disponibles para pagar ese art√≠culo.");
                lb_error.setText("No tiene suficientes abonos disponibles para pagar ese art√≠culo.");
            }
        }
        else {
            articulosSeleccionados.remove(articulo);
            restante = restante.add(articulo.getPrecioTotal());
            seleccionados = seleccionados.subtract(articulo.getPrecioTotal());
            t_articulos_seleccionados.setText(Numero.redondear(seleccionados).toString());
            t_restante_abonos.setText(Numero.redondear(restante).toString());
            articulo.setDescuento(null);
            articulo.setComprado(false);
            refrescarTabla();
            log.debug("Art√≠culo marcado como no comprado.");
            lb_error.setText("");

        }
        
    }
    else if (evt.getKeyCode() == KeyEvent.VK_TAB && evt.isShiftDown()) {
        tb_articulos.transferFocusBackward();
    }
    else if (evt.getKeyCode() == KeyEvent.VK_TAB) {
        tb_articulos.transferFocus();
    }
}//GEN-LAST:event_tb_articulosKeyPressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_cancelar;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_ok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_error;
    private javax.swing.JTextField t_articulos_seleccionados;
    private javax.swing.JTextField t_restante_abonos;
    private javax.swing.JTextField t_total_abonado;
    private javax.swing.JTable tb_articulos;
    // End of variables declaration//GEN-END:variables

    public List<ReservaArticuloBean> getArticulosSeleccionados() {
        return articulosSeleccionados;
    }

    public JDialog getContenedor() {
        return contenedor;
    }

    public void setContenedor(JDialog contenedor) {
        this.contenedor = contenedor;
    }

    private void refrescarTabla() {
        if (articulosSeleccionados.isEmpty()) {
            b_ok.setEnabled(false);
        }
        else {
            b_ok.setEnabled(true);
        }
        MostrarReservacionesTableModel modelo = new MostrarReservacionesTableModel(articulosNoComprados);
        tb_articulos.setModel(modelo);
        if (tb_articulos.getRowCount() >= 0) {
            ListSelectionModel selectionModel = tb_articulos.getSelectionModel();
            selectionModel.setSelectionInterval(0, 0);
            tb_articulos.requestFocus();
        }
        else {
            b_cancelar.requestFocus();
        }
    }

    @Override
    public void iniciaVista() {
        tb_articulos.requestFocus();
    }

    @Override
    public void accionAceptar() {
    }

    @Override
    public void limpiarFormulario() {
    }

    public boolean isCancelado() {
        return cancelado;
    }

    public void setCancelado(boolean cancelado) {
        this.cancelado = cancelado;
    }

    @Override
    public void accionCancelar() {
        b_cancelarActionPerformed(null);
    }

    
    
    @Override
    public void iniciaFoco() {
        log.info("Iniciando Foco");
        tb_articulos.requestFocus();
    }

    @Override
    public void accionLeerTarjetaVD() {
    }

    public BigDecimal getDescuento() {
        return descuento;
    }

    public void setDescuento(BigDecimal descuento) {
        this.descuento = descuento;
    }
    
    
}
