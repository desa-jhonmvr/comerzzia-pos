/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JSeleccionarInvitadoPlan.java
 *
 * Created on 17-oct-2012, 16:04:35
 */
package com.comerzzia.jpos.gui.reservaciones.plannovios;

import com.comerzzia.jpos.entity.db.InvitadoPlanNovio;
import com.comerzzia.jpos.entity.services.reservaciones.plannovio.PlanNovioMostrar;
import com.comerzzia.jpos.gui.IVista;
import com.comerzzia.jpos.gui.JPrincipal;
import com.comerzzia.jpos.gui.components.JVentanaDialogo;
import com.comerzzia.jpos.gui.reservaciones.plannovios.modelos.SeleccionarInvitadoPlanCellRenderer;
import com.comerzzia.jpos.gui.reservaciones.plannovios.modelos.SeleccionarInvitadoPlanTableModel;
import com.comerzzia.jpos.servicios.reservaciones.plannovio.PlanNovioException;
import es.mpsistemas.util.log.Logger;
import java.awt.event.ActionEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.net.URL;
import java.util.LinkedList;
import java.util.logging.Level;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;

/**
 *
 * @author MGRI
 */
public class JSeleccionarInvitadoPlan extends JVentanaDialogo implements IVista {

    public static final int MODO_SELECCION = 0; //Selección del invitado en compra
    public static final int MODO_CREACION = 1; // Creación del Invitado
    public static final int MODO_MODIFICACION = 2; // Modificación del Invitado
    private PlanNovioMostrar manejador = null;
    private static final Logger log = Logger.getMLogger(JSeleccionarInvitadoPlan.class);
    private JPrincipal ventana_padre;
    //private JDialog contenedor;
    private int modo;

    /** Creates new form JSeleccionarInvitadoPlan */
    public JSeleccionarInvitadoPlan() {
        initComponents();
    }

    public JSeleccionarInvitadoPlan(int modo) {

        // El modo parametro de entrada no equivale al modo que es parámetro de la ventan
        initComponents();
        if (PlanNovioMostrar.getIstance() != null) {
            manejador = PlanNovioMostrar.getIstance();

            URL myurl = this.getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/iconoTransparente.gif");
            ImageIcon icon = new ImageIcon(myurl);
            v_anadir_invitado.setIconImage(icon.getImage());
            b_anadirInvitado.setVisible(true);
            v_anadir_invitado.setLocationRelativeTo(null);
            p_anadir_invitado.setContenedor(v_anadir_invitado);

            SeleccionarInvitadoPlanTableModel modelo = new SeleccionarInvitadoPlanTableModel(new LinkedList<InvitadoPlanNovio>());
            tb_invitados.setDefaultRenderer(Object.class, new SeleccionarInvitadoPlanCellRenderer());
            tb_invitados.setModel(modelo);

            crearAccionFocoTabla(this, tb_invitados, KeyEvent.VK_T, InputEvent.CTRL_MASK);
            addFunctionKeys();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        v_anadir_invitado = new javax.swing.JDialog();
        p_anadir_invitado = new com.comerzzia.jpos.gui.reservaciones.plannovios.JAnadirInvitado(this);
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_invitados = new javax.swing.JTable();
        b_cancelar5 = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_ok = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_anadirInvitado = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_importar = new com.comerzzia.jpos.gui.components.form.JButtonForm();

        v_anadir_invitado.setAlwaysOnTop(true);
        v_anadir_invitado.setMinimumSize(new java.awt.Dimension(430, 350));
        v_anadir_invitado.setModal(true);
        v_anadir_invitado.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);

        javax.swing.GroupLayout v_anadir_invitadoLayout = new javax.swing.GroupLayout(v_anadir_invitado.getContentPane());
        v_anadir_invitado.getContentPane().setLayout(v_anadir_invitadoLayout);
        v_anadir_invitadoLayout.setHorizontalGroup(
            v_anadir_invitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(v_anadir_invitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(v_anadir_invitadoLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(p_anadir_invitado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        v_anadir_invitadoLayout.setVerticalGroup(
            v_anadir_invitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(v_anadir_invitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(v_anadir_invitadoLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(p_anadir_invitado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD, 18));
        jLabel1.setText("Lista de Invitados");

        tb_invitados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_invitados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tb_invitadosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tb_invitados);

        b_cancelar5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/cancelar.png"))); // NOI18N
        b_cancelar5.setText("Cancelar");
        b_cancelar5.setFont(b_cancelar5.getFont().deriveFont((float)15));
        b_cancelar5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelar5ActionPerformed(evt);
            }
        });

        b_ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/aceptar.png"))); // NOI18N
        b_ok.setMnemonic('a');
        b_ok.setText("Aceptar");
        b_ok.setFont(b_ok.getFont().deriveFont((float)15));
        b_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_okActionPerformed(evt);
            }
        });

        b_anadirInvitado.setMnemonic('n');
        b_anadirInvitado.setText("Añadir Invitado");
        b_anadirInvitado.setActionCommand("");
        b_anadirInvitado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_anadirInvitadoActionPerformed(evt);
            }
        });

        b_importar.setMnemonic('i');
        b_importar.setText("Importar");
        b_importar.setActionCommand("");
        b_importar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_importarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b_anadirInvitado, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_importar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(b_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_cancelar5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_cancelar5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_anadirInvitado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_importar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tb_invitadosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_invitadosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            accionSeleccionar();
        }
        else if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            if (b_anadirInvitado.isEnabled()) {
                b_anadirInvitado.requestFocus();
            }
            else {
                b_cancelar5.requestFocus();
            }
        }
}//GEN-LAST:event_tb_invitadosKeyPressed

    private void b_cancelar5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelar5ActionPerformed
        log.info("Accion Cancelar");
        contenedor.setVisible(false);
}//GEN-LAST:event_b_cancelar5ActionPerformed

    private void b_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_okActionPerformed
        log.info("Accion Aceptar");
        try {
            if (modo == MODO_SELECCION) {
                manejador.setInvitadoSeleccionado(tb_invitados.getSelectedRow());
            }
            contenedor.setVisible(false);
        }
        catch (IndexOutOfBoundsException e) {
            log.debug("Se ha de seleccionar un invitado para aceptar");
            ventana_padre.crearAdvertencia("Debe seleccionar un invitado para aceptar. ");
        }
        catch (Exception e) {
            log.error("b_okActionPerformed() -" + e.getMessage(), e);
            ventana_padre.crearError(null);
        }
}//GEN-LAST:event_b_okActionPerformed

    private void b_anadirInvitadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_anadirInvitadoActionPerformed
        accionAnadirInvitado();
}//GEN-LAST:event_b_anadirInvitadoActionPerformed

    private void b_importarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_importarActionPerformed
        if (modo != MODO_SELECCION) {
            accionImportarInvitados();
        }
        else {
            accionAbonosPropios();
        }
    }//GEN-LAST:event_b_importarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_anadirInvitado;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_cancelar5;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_importar;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_ok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.comerzzia.jpos.gui.reservaciones.plannovios.JAnadirInvitado p_anadir_invitado;
    private javax.swing.JTable tb_invitados;
    private javax.swing.JDialog v_anadir_invitado;
    // End of variables declaration//GEN-END:variables

    private void addFunctionKeys() {
        addHotKey(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "EnterBotones", listenerEnter);

        KeyStroke ctrlMenos = KeyStroke.getKeyStroke(KeyEvent.VK_SUBTRACT, InputEvent.CTRL_DOWN_MASK);
        Action listenerCtrlMenos = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                try {
                    int lineaSelecionada = tb_invitados.getSelectedRow();
                    if (lineaSelecionada >= 0) {
                        if (!manejador.isModoLiquidado()) {
                            manejador.accionEliminaInvitado(lineaSelecionada);
                        }
                    }
                    refrescaTabla();
                }
                catch (PlanNovioException e) {
                    JPrincipal.getInstance().crearError(e.getMessage());
                }
                catch (Exception e) {
                    log.debug("EliminarInvitado - " + e.getMessage(), e);
                    JPrincipal.getInstance().crearError("No se pudo eliminar el invitado");
                }
            }
        };
        addHotKey(ctrlMenos, "VentasCtrlMenos", listenerCtrlMenos);


    }

    @Override
    public void iniciaVista() {
        try {

            log.info("Inicia Vista");

            if (manejador.isModoLiquidado() || manejador.isModoCaducado()) {
                b_importar.setText("Importar");
                b_importar.setEnabled(false);
                b_importar.setFocusable(false);
                b_anadirInvitado.setEnabled(false);
                b_anadirInvitado.setFocusable(false);
            }
            else if (modo == MODO_SELECCION) {
                b_importar.setText("Retirar Artículos");
                b_importar.setEnabled(true);
                b_importar.setFocusable(true);
                b_anadirInvitado.setEnabled(true);
                b_anadirInvitado.setFocusable(true);
            }
            else {
                b_importar.setText("Importar");
                b_importar.setEnabled(true);
                b_importar.setFocusable(true);
                b_anadirInvitado.setEnabled(true);
                b_anadirInvitado.setFocusable(true);
            }
            if(manejador.getPertenecePlanTienda()){
                    b_anadirInvitado.setEnabled(true);
                    b_anadirInvitado.setFocusable(true);
                    b_importar.setEnabled(true);
                    b_importar.setFocusable(true);
            }
            else{
                b_anadirInvitado.setEnabled(true);
                b_anadirInvitado.setFocusable(true);
                b_importar.setEnabled(true);
                b_importar.setFocusable(true);
            }
            //b_importar.setText("Importar");     
            if(!manejador.getPertenecePlanTienda()){
                b_anadirInvitado.setEnabled(true);
                b_anadirInvitado.setFocusable(true);
                b_importar.setEnabled(false);
                b_importar.setFocusable(false);                
            }
            
            manejador.refrescaInvitados();
            refrescaTabla();

            if (!manejador.getListaInvitados().isEmpty()) {
                if (tb_invitados.getRowCount() >= 0) {
                    ListSelectionModel selectionModel = tb_invitados.getSelectionModel();
                    selectionModel.setSelectionInterval(0, 0);
                    tb_invitados.requestFocus();
                }
                tb_invitados.requestFocus();
            }
            else if (!manejador.isModoLiquidado() && !manejador.isModoCaducado()) {
                b_anadirInvitado.requestFocus();
                // quitamos la selección de la tabla
                eliminaSeleccionTabla();
            }
            else {
                b_cancelar5.requestFocus();
                eliminaSeleccionTabla();

            }

            //MOD: Foco en Añadir Invitados Por defecto en caso de edicion
            if (modo != MODO_SELECCION && !manejador.isModoLiquidado()) {
                b_anadirInvitado.requestFocus();
                eliminaSeleccionTabla();
            }
        }
        catch (PlanNovioException e) {
            log.error("iniciaVista() -Error iniciando pantalla de invitados");
            JPrincipal.getInstance().crearError("Error iniciando pantalla de invitados");
        }
        catch (Exception e) {
            log.error("iniciaVista() :"+e.getMessage(),e);
            JPrincipal.getInstance().crearError("Error iniciando pantalla de invitados");
        }

    }

    public JPrincipal getVentana_padre() {
        return ventana_padre;
    }

    private void refrescaTabla() {
        log.info("Refresca Tabla");
        SeleccionarInvitadoPlanTableModel modelo = new SeleccionarInvitadoPlanTableModel(manejador.getListaInvitados());
        tb_invitados.setDefaultRenderer(Object.class, new SeleccionarInvitadoPlanCellRenderer());
        tb_invitados.setModel(modelo);
    }

    @Override
    public void iniciaFoco() {
        log.info("Iniciando Foco");
        b_cancelar5.requestFocus();
    }

    @Override
    public void accionAceptar() {
    }

    @Override
    public void limpiarFormulario() {
    }

    @Override
    public void cerrarVentana() {
        limpiarFormulario();
        getContenedor().setVisible(false);
    }

    private void accionAnadirInvitado() {
        if (b_anadirInvitado.isEnabled()) {
            p_anadir_invitado.setModo(MODO_CREACION);
            p_anadir_invitado.iniciaVista();
            v_anadir_invitado.setVisible(true);
            refrescaTabla();
        }
    }

    @Override
    public void accionLeerTarjetaVD() {
    }

    public int getModo() {
        return modo;
    }

    public void setModo(int modo) {
        this.modo = modo;
    }

    private void accionSeleccionar() {
        if (modo == MODO_SELECCION) {
            b_okActionPerformed(null);
        }
        else {
            // Mostramos los datos del invitado en la pantalla de  JAnadirInvitado
            manejador.setInvitadoGestionado(tb_invitados.getSelectedRow());
            p_anadir_invitado.setModo(MODO_MODIFICACION);
            p_anadir_invitado.iniciaVista();
            v_anadir_invitado.setVisible(true);
            refrescaTabla();
        }
    }

    private void accionImportarInvitados() {
        if (b_importar.isEnabled()) {
            try {
                //manejador.accionImportarInvitados();
                abrirArchivo();
                refrescaTabla();
            }
           /* catch (PlanNovioException e) {
                JPrincipal.getInstance().crearError(e.getMessage());
            }*/
            catch (Exception e) {
                log.error("b_importarActionPerformed() -" + e.getMessage(), e);
                JPrincipal.getInstance().crearError(e.getMessage());
            }
        }
    }

    private String abrirArchivo() throws PlanNovioException {
        String texto = "";
        JFileChooser file = new JFileChooser();
        file.showOpenDialog(this);
        /**
         * abrimos el archivo seleccionado
         */
        File archivoInvitados;
        if (file.getSelectedFile() != null) {
            archivoInvitados = file.getSelectedFile();
            if (!archivoInvitados.getName().equals("")) {
                try {
                    manejador.accionImportarInvitados(archivoInvitados);
                    refrescaTabla();
                } catch (PlanNovioException ex) {
                    java.util.logging.Logger.getLogger(JSeleccionarInvitadoPlan.class.getName()).log(Level.SEVERE, null, ex);
                    throw ex;
                }
            }
        } else {
            //JOptionPane.showMessageDialog(rootPane, "No se ha seleccionado un Jar");
        }
        return texto;//El texto se almacena en el JTextArea
    }
    
    private void accionAbonosPropios() {
        try {
            this.cerrarVentana();
            this.manejador.accionPantallaPlanComprarConAbonos();
        }
        catch (Exception e) {
            log.error("accionAbonosPropios()() -" + e.getMessage(), e);
            JPrincipal.getInstance().crearError(null);
        }
    }

    private void eliminaSeleccionTabla() {
        ListSelectionModel selectionModel = tb_invitados.getSelectionModel();
        selectionModel.clearSelection();
    }
}
