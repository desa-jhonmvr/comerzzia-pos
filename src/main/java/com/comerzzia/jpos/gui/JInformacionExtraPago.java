/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JArticulos.java
 *
 * Created on 07-jul-2011, 9:33:44
 */
package com.comerzzia.jpos.gui;

//import com.comerzzia.jpos.entity.Articulos;
import com.comerzzia.jpos.gui.components.JPanelImagenFondo;
import com.comerzzia.jpos.gui.validation.ValidationFormException;
import com.comerzzia.jpos.servicios.pagos.Pago;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JLabel;
import com.comerzzia.jpos.gui.components.form.JTextFieldForm;
import com.comerzzia.jpos.gui.reservaciones.JReservacionesPagosV;
import com.comerzzia.jpos.gui.validation.IValidableForm;
import com.comerzzia.jpos.gui.validation.IViewerValidationFormError;
import com.comerzzia.jpos.gui.validation.ValidadorObligatoriedad;
import com.comerzzia.jpos.gui.validation.ValidadorTexto;
import com.comerzzia.jpos.persistencia.mediospagos.MedioPagoBean;
import es.mpsistemas.util.log.Logger;
import java.awt.Color;
import java.awt.Component;
import java.util.LinkedList;
import java.util.List;
import javax.swing.KeyStroke;

/**
 *
 * @author MGRI
 */
public class JInformacionExtraPago extends JPanelImagenFondo implements IVista, KeyListener, IViewerValidationFormError {

    private static final Logger log = Logger.getMLogger(JInformacionExtraPago.class);
    private JPanelImagenFondo ventana_padre = null;
    private JDialog contenedor = null;
    private Pago pago = null;
    private int numeroInfo = 0;

    public JInformacionExtraPago() {
        super();
        initComponents();
        super.registraEventoEnterBoton();

    }

    private void inicia() {
        boolean editando = false;
        if (ventana_padre instanceof JReservacionesPagosV) {
            editando = ((JReservacionesPagosV) ventana_padre).isEditando();
        }
        if (!editando) {
            creaInfoExtra1();
            creaInfoExtra2();
            creaInfoExtra3();
        }
        t_informacion_extra1.addKeyListener(this);
        t_informacion_extra2.addKeyListener(this);
        t_informacion_extra3.addKeyListener(this);

        addFunctionKeys();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lb_error = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        b_aceptar = new com.comerzzia.jpos.gui.components.form.JButtonForm();

        setMaximumSize(new java.awt.Dimension(355, 185));
        setMinimumSize(new java.awt.Dimension(355, 125));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel1.setText("Información adicional");
        jLabel1.setFocusable(false);
        add(jLabel1);

        lb_error.setForeground(new java.awt.Color(255, 102, 102));
        add(lb_error);

        jPanel1.setMaximumSize(new java.awt.Dimension(366, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(366, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(366, 100));
        add(jPanel1);

        b_aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/aceptar.png"))); // NOI18N
        b_aceptar.setMnemonic(java.util.ResourceBundle.getBundle("atajosTeclado").getString("tpv.busquedaArticulos.aceptar").charAt(0));
        b_aceptar.setText("Aceptar");
        b_aceptar.setFont(new java.awt.Font("Tahoma", 0, 18));
        b_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_aceptarActionPerformed(evt);
            }
        });
        add(b_aceptar);
    }// </editor-fold>//GEN-END:initComponents

private void b_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_aceptarActionPerformed

    try {
        validar();

        MedioPagoBean mp = pago.getMedioPagoActivo();
        if (mp.isTieneInfoExtra1()) {
            pago.setInformacionExtra1(t_informacion_extra1.getText());
            jPanel1.remove(jLabel2);
            jPanel1.remove(t_informacion_extra1);
        }
        if (mp.isTieneInfoExtra2()) {
            pago.setInformacionExtra2(t_informacion_extra2.getText());
            jPanel1.remove(jLabel3);
            jPanel1.remove(t_informacion_extra2);
        }

        if (mp.isTieneInfoExtra3()) {
            pago.setInformacionExtra3(t_informacion_extra3.getText());
            jPanel1.remove(jLabel4);
            jPanel1.remove(t_informacion_extra3);
        }

        contenedor.setVisible(false);

    }
    catch (ValidationFormException e) {
        log.debug(e.getMessage());

    }

}//GEN-LAST:event_b_aceptarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_aceptar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lb_error;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_informacion_extra1;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_informacion_extra2;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_informacion_extra3;
    private List<IValidableForm> formulario;

    @Override
    public void iniciaVista() {
        inicia();
        formulario = new LinkedList<IValidableForm>();
        MedioPagoBean mpago = pago.getMedioPagoActivo();
        if (mpago.isTieneInfoExtra1()) {
            numeroInfo++;
            jLabel2.setText(mpago.getInfoExtra1());
            t_informacion_extra1.setText(pago.getInformacionExtra1());
            if (mpago.isTieneInfoExtra3()) {
                t_informacion_extra3.requestFocus();
            }
            else if (mpago.isTieneInfoExtra2()) {
                t_informacion_extra2.requestFocus();
            }
            else {
                t_informacion_extra1.requestFocus();
            }
            formulario.add(t_informacion_extra1);
        }
        else {
            jPanel1.remove(jLabel2);
            jPanel1.remove(t_informacion_extra1);
        }
        if (mpago.isTieneInfoExtra2()) {
            numeroInfo++;
            jLabel3.setText(mpago.getInfoExtra2());
            t_informacion_extra2.setText(pago.getInformacionExtra2());
            if (mpago.isTieneInfoExtra3()) {
                t_informacion_extra3.requestFocus();
            }
            else {
                t_informacion_extra2.requestFocus();
            }
            formulario.add(t_informacion_extra2);
        }
        else {
            jPanel1.remove(jLabel3);
            jPanel1.remove(t_informacion_extra2);
        }
        if (mpago.isTieneInfoExtra3()) {
            numeroInfo++;
            jLabel4.setText(mpago.getInfoExtra3());
            t_informacion_extra3.setText(pago.getInformacionExtra3());
            t_informacion_extra3.requestFocus();
            formulario.add(t_informacion_extra3);
        }
        else {
            jPanel1.remove(jLabel4);
            jPanel1.remove(t_informacion_extra3);
        }
        //Modificación para hacer los campos requeridos
        // 
        for (IValidableForm ivf : formulario) {
            ivf.addValidador(new ValidadorObligatoriedad(), this);
        }


        if (numeroInfo == 1) {
            jPanel1.setPreferredSize(new Dimension(365, 34));
            jPanel1.setMinimumSize(new Dimension(365, 34));
            jPanel1.setMaximumSize(new Dimension(365, 34));
            this.setPreferredSize(new Dimension(400, 125));
            contenedor.setPreferredSize(new Dimension(470, 135));
            contenedor.setMinimumSize(new Dimension(470, 135));
            contenedor.setMaximumSize(new Dimension(470, 135));
            contenedor.setLocationRelativeTo(null);
        }
        if (numeroInfo == 2) {
            jPanel1.setPreferredSize(new Dimension(365, 67));
            jPanel1.setMinimumSize(new Dimension(365, 67));
            jPanel1.setMaximumSize(new Dimension(365, 67));
            this.setPreferredSize(new Dimension(400, 145));
            contenedor.setPreferredSize(new Dimension(470, 180));
            contenedor.setMinimumSize(new Dimension(470, 180));
            contenedor.setMaximumSize(new Dimension(470, 180));
            contenedor.setLocationRelativeTo(null);
        }
        if (numeroInfo == 3) {
            jPanel1.setPreferredSize(new Dimension(365, 100));
            jPanel1.setMinimumSize(new Dimension(365, 100));
            jPanel1.setMaximumSize(new Dimension(365, 100));
            this.setPreferredSize(new Dimension(400, 185));
            contenedor.setPreferredSize(new Dimension(470, 220));
            contenedor.setMinimumSize(new Dimension(470, 220));
            contenedor.setMaximumSize(new Dimension(470, 220));
            contenedor.setLocationRelativeTo(null);
        }
        numeroInfo = 0;



    }

    @Override
    public void keyTyped(KeyEvent ke) {

        if ((t_informacion_extra1.hasFocus() || t_informacion_extra2.hasFocus() || t_informacion_extra3.hasFocus()) && ke.getKeyChar() == '\n') {
        }
    }

    @Override
    public void keyPressed(KeyEvent ke) {
    }

    @Override
    public void keyReleased(KeyEvent ke) {
    }

    @Override
    protected void addHotKey(KeyStroke keyStroke, String inputActionKey, Action listener) {
        ActionMap actionMap = this.getActionMap();
        InputMap inputMap = this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(keyStroke, inputActionKey);
        actionMap.put(inputActionKey, listener);
    }

    private void addFunctionKeys() {
        KeyStroke esc = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        Action listeneresc = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                //b_cancelarActionPerformed(ae);
            }
        };
        addHotKey(esc, "IdentClientesc", listeneresc);


    }

    public JPanelImagenFondo getVentana_padre() {
        return ventana_padre;
    }

    public JDialog getContenedor() {
        return contenedor;
    }

    public void setContenedor(JDialog contenedor) {
        this.contenedor = contenedor;
    }

    public void modificaContenido(JReservacionesPagosV ventana_padre, Pago p) {
        this.ventana_padre = ventana_padre;
        this.pago = p;
        iniciaVista();
    }

    private void creaInfoExtra1() {
        jLabel2 = new JLabel();
        jLabel2.setDisplayedMnemonic(java.util.ResourceBundle.getBundle("atajosTeclado").getString("tpv.busquedaArticulos.descripcion").charAt(0));
        jLabel2.setLabelFor(t_informacion_extra1);
        jLabel2.setText("JLabel2");
        jLabel2.setMaximumSize(new java.awt.Dimension(100, 16));
        jLabel2.setMinimumSize(new java.awt.Dimension(100, 16));
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanel1.add(jLabel2);

        t_informacion_extra1 = new JTextFieldForm();
        t_informacion_extra1.setMinimumSize(new java.awt.Dimension(250, 25));
        t_informacion_extra1.setPreferredSize(new java.awt.Dimension(250, 25));
        jPanel1.add(t_informacion_extra1);




    }

    private void creaInfoExtra2() {
        jLabel3 = new JLabel();
        jLabel3.setDisplayedMnemonic(java.util.ResourceBundle.getBundle("atajosTeclado").getString("tpv.busquedaArticulos.proveedor").charAt(0));
        jLabel3.setLabelFor(t_informacion_extra2);
        jLabel3.setText("JLabel3");
        jLabel3.setMaximumSize(new java.awt.Dimension(100, 16));
        jLabel3.setMinimumSize(new java.awt.Dimension(100, 16));
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanel1.add(jLabel3);

        t_informacion_extra2 = new JTextFieldForm();
        t_informacion_extra2.setMinimumSize(new java.awt.Dimension(250, 25));
        t_informacion_extra2.setPreferredSize(new java.awt.Dimension(250, 25));
        jPanel1.add(t_informacion_extra2);
    }

    private void creaInfoExtra3() {
        jLabel4 = new JLabel();
        jLabel4.setDisplayedMnemonic(java.util.ResourceBundle.getBundle("atajosTeclado").getString("tpv.busquedaArticulos.marca").charAt(0));
        jLabel4.setLabelFor(t_informacion_extra2);
        jLabel4.setText("JLabel4");
        jLabel4.setMaximumSize(new java.awt.Dimension(100, 16));
        jLabel4.setMinimumSize(new java.awt.Dimension(100, 16));
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanel1.add(jLabel4);

        t_informacion_extra3 = new JTextFieldForm();
        t_informacion_extra3.setMinimumSize(new java.awt.Dimension(250, 25));
        t_informacion_extra3.setPreferredSize(new java.awt.Dimension(250, 25));
        jPanel1.add(t_informacion_extra3);
    }

    public void eliminarCampos() {
        try {
            jPanel1.remove(jLabel2);
            jPanel1.remove(jLabel3);
            jPanel1.remove(jLabel4);
            jPanel1.remove(t_informacion_extra1);
            jPanel1.remove(t_informacion_extra2);
            jPanel1.remove(t_informacion_extra3);
        }
        catch (Exception e) {
            log.debug("No existen componentes a eliminar.");
        }

    }

    @Override
    public void iniciaFoco() {
        MedioPagoBean mp = pago.getMedioPagoActivo();

        t_informacion_extra1.addValidador(new ValidadorTexto(50), this);
        t_informacion_extra2.addValidador(new ValidadorTexto(50), this);
        t_informacion_extra3.addValidador(new ValidadorTexto(50), this);

        t_informacion_extra1.setValidacionHabilitada(false);
        t_informacion_extra2.setValidacionHabilitada(false);
        t_informacion_extra3.setValidacionHabilitada(false);

        lb_error.setText("");

        if (mp.isTieneInfoExtra1()) {
            t_informacion_extra1.requestFocus();
            t_informacion_extra1.setValidacionHabilitada(true);
        }
        else {
            b_aceptar.requestFocus();
        }
        if (mp.isTieneInfoExtra2()) {
            t_informacion_extra2.setValidacionHabilitada(true);
        }
        if (mp.isTieneInfoExtra3()) {
            t_informacion_extra3.setValidacionHabilitada(true);
        }

        /* Modificación para poner el color en blanco */
        t_informacion_extra2.setBackground(Color.white);
        t_informacion_extra3.setBackground(Color.white);

        log.info("Iniciando Foco");

    }

    @Override
    public void addError(ValidationFormException e) {
        lb_error.setText(e.getMessage());
    }

    @Override
    public void clearError() {
        lb_error.setText("");
    }

    private void validar() throws ValidationFormException {
        for (IValidableForm ivf : formulario) {
            ivf.validar();
        }
    }
}
