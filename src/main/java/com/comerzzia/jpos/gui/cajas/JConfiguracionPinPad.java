/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JConfirmacion.java
 *
 * Created on 29-agosto-2011, 10:34:11
 */
package com.comerzzia.jpos.gui.cajas;

import com.comerzzia.jpos.gui.components.JVentanaDialogo;
import com.comerzzia.jpos.gui.validation.IValidableForm;
import com.comerzzia.jpos.gui.validation.IViewerValidationFormError;
import com.comerzzia.jpos.gui.validation.ValidadorIP;
import com.comerzzia.jpos.gui.validation.ValidationFormException;
import es.mpsistemas.util.log.Logger;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.LinkedList;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 * Clase para tratar los errores de la aplicación. Puede contener la lógica para registrar diferentes actividades que el cliente desee monitorizar
 * @author MGRI
 */
public class JConfiguracionPinPad extends JVentanaDialogo implements IViewerValidationFormError{
    
    private static final Logger log = Logger.getMLogger(JConfiguracionPinPad.class);
    private List<IValidableForm> formularioConfiguracion;
    
    private String ip;
    private String mascara;
    private String gateway;
    private boolean aceptar;

    /** Creates new form JConfirmacion */
    public JConfiguracionPinPad() {
        super();
        initComponents();
        addFunctionKeys();
        creaFormularioConf();
        registraEventoEnterBoton();
    }


    public void iniciaVista(){
        ip="";
        mascara="";
        gateway="";
        t_ip.setText("");
        t_mascara.setText("");
        t_gateway.setText("");
        lb_error.setText("");
        lb_rutaini.setText(System.getProperties().getProperty("user.dir") + File.separator + "ini" + File.separator + "UC-CAJA.ini");
        aceptar=false;
        t_ip.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b_ok = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_cancelar = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lb_rutaini = new javax.swing.JLabel();
        t_ip = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_gateway = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_mascara = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        lb_error = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(466, 300));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        b_ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/aceptar.png"))); // NOI18N
        b_ok.setMnemonic('a');
        b_ok.setText("Aceptar");
        b_ok.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18));
        b_ok.setNextFocusableComponent(b_cancelar);
        b_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_okActionPerformed(evt);
            }
        });

        b_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/cancelar.png"))); // NOI18N
        b_cancelar.setMnemonic('C');
        b_cancelar.setText("Cancelar");
        b_cancelar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18));
        b_cancelar.setNextFocusableComponent(t_ip);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel1.setText("Configuración PinPad:");

        jLabel2.setDisplayedMnemonic('D');
        jLabel2.setLabelFor(t_ip);
        jLabel2.setText("Dirección IP:");

        jLabel3.setDisplayedMnemonic('M');
        jLabel3.setLabelFor(t_mascara);
        jLabel3.setText("Máscara");

        jLabel4.setDisplayedMnemonic('G');
        jLabel4.setLabelFor(t_gateway);
        jLabel4.setText("Gateway");
        jLabel4.setNextFocusableComponent(b_ok);

        lb_rutaini.setForeground(new java.awt.Color(0, 51, 204));

        t_ip.setFont(new java.awt.Font("Comic Sans MS", 0, 14));
        t_ip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_ipActionPerformed(evt);
            }
        });

        t_gateway.setFont(new java.awt.Font("Comic Sans MS", 0, 14));
        t_gateway.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_gatewayActionPerformed(evt);
            }
        });

        t_mascara.setFont(new java.awt.Font("Comic Sans MS", 0, 14));
        t_mascara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_mascaraActionPerformed(evt);
            }
        });

        lb_error.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(t_ip, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_gateway, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_mascara, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lb_rutaini, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lb_error, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(b_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(t_ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(t_mascara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(t_gateway, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_rutaini, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lb_error, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(b_ok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
    }//GEN-LAST:event_formKeyTyped

    private void b_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_okActionPerformed
        accionAceptar();
}//GEN-LAST:event_b_okActionPerformed

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        accionCancelar();
}//GEN-LAST:event_b_cancelarActionPerformed

    private void t_ipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_ipActionPerformed

    }//GEN-LAST:event_t_ipActionPerformed

    private void t_gatewayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_gatewayActionPerformed

    }//GEN-LAST:event_t_gatewayActionPerformed

    private void t_mascaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_mascaraActionPerformed

    }//GEN-LAST:event_t_mascaraActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_cancelar;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_ok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lb_error;
    private javax.swing.JLabel lb_rutaini;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_gateway;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_ip;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_mascara;
    // End of variables declaration//GEN-END:variables

    @Override
    protected void addHotKey(KeyStroke keyStroke, String inputActionKey, Action listener) {
        ActionMap actionMap = this.getActionMap();
        InputMap inputMap = this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(keyStroke, inputActionKey);
        actionMap.put(inputActionKey, listener);
    }

    private void addFunctionKeys() {
        KeyStroke esc = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        Action listeneresc = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                accionCancelar();
            }
        };
        addHotKey(esc, "IdentClientesc", listeneresc);
    }

    /** Accion de aceptar
     */
    @Override
    public void accionAceptar() {
        try{
            if(!validarFormulario()){
                return;
            }
            ip = t_ip.getText();
            mascara = t_mascara.getText();
            gateway = t_gateway.getText();
            aceptar = true;
            cerrarVentana();
        } catch(ValidationFormException e){
            addError(e);
        }
    }

    /** Accion de cancelar
     */
    @Override
    public void accionCancelar() {
        aceptar = false;
        cerrarVentana();
    }

    private boolean validarFormulario() throws ValidationFormException {
        boolean valido = true;
        boolean mensaje = false;
        for (IValidableForm e : formularioConfiguracion) {
            try {
                e.validar();
            }
            catch (ValidationFormException ex) {
                log.debug("Excepción de validación de formulario: " + ex.getMessage());
                throw ex;
            }
        }  
        return valido;
    }
    
    private void creaFormularioConf() {
        formularioConfiguracion = new LinkedList();
        formularioConfiguracion.add(t_ip);
        formularioConfiguracion.add(t_mascara);
        formularioConfiguracion.add(t_gateway);
        t_ip.addValidador(new ValidadorIP(), this);
        t_mascara.addValidador(new ValidadorIP(), this);
        t_gateway.addValidador(new ValidadorIP(), this);
    }

    @Override
    public void addError(ValidationFormException e) {
        lb_error.setText(e.getMessage());
    }

    @Override
    public void clearError() {
        lb_error.setText("");
    }

    public String getIp() {
        return ip;
    }

    public String getMascara() {
        return mascara;
    }

    public String getGateway() {
        return gateway;
    }
    
    public boolean isAceptar(){
        return aceptar;
    }

    @Override
    public void limpiarFormulario() {
        desactivarValidacion();
        t_ip.setText("");
        t_mascara.setText("");
        t_gateway.setText("");
        lb_error.setText("");
        t_ip.requestFocus();
        activarValidacion();
    }

    @Override
    public void accionLeerTarjetaVD() {
    }
    
    private void activarValidacion() {
        for (IValidableForm e : formularioConfiguracion) {
            e.setValidacionHabilitada(true);
        }
    }

    private void desactivarValidacion() {
        for (IValidableForm e : formularioConfiguracion) {
            e.setValidacionHabilitada(false);
        }
    }
}
