/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JGarantia.java
 *
 * Created on 10-dic-2012, 11:49:36
 */
package com.comerzzia.jpos.gui.garantia;

import com.comerzzia.jpos.entity.db.Articulos;
import com.comerzzia.jpos.entity.db.GarantiaExtendidaReg;
import com.comerzzia.jpos.gui.JPrincipal;
import com.comerzzia.jpos.servicios.tickets.componentes.LineaTicket;
import com.comerzzia.jpos.servicios.tickets.componentes.TicketOrigen;
import com.comerzzia.jpos.gui.components.JVentanaDialogo;
import com.comerzzia.jpos.gui.validation.IViewerValidationFormError;
import com.comerzzia.jpos.gui.validation.ValidadorEntero;
import com.comerzzia.jpos.gui.validation.ValidadorTexto;
import com.comerzzia.jpos.gui.validation.ValidationFormException;
import com.comerzzia.jpos.servicios.articulos.ArticulosServices;
import com.comerzzia.jpos.servicios.garantia.GarantiaException;
import com.comerzzia.jpos.servicios.garantia.GarantiaExtendidaServices;
import com.comerzzia.jpos.servicios.login.Sesion;
import com.comerzzia.jpos.servicios.tickets.TicketService;
import com.comerzzia.jpos.servicios.tickets.TicketException;
import com.comerzzia.util.numeros.bigdecimal.Numero;
import es.mpsistemas.util.fechas.Fecha;
import es.mpsistemas.util.log.Logger;
import es.mpsistemas.util.xml.XMLDocument;
import es.mpsistemas.util.xml.XMLDocumentException;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.NoResultException;

/**
 *
 * @author MGRI
 */
public class JGarantia extends JVentanaDialogo implements IViewerValidationFormError {

    private static final Logger log = Logger.getMLogger(JGarantia.class);
    private static TicketOrigen ticketOrigen = null;
    private static Articulos articuloReferencia = null;
    private static LineaTicket lineaReferencia = null;
    public static int MODO_GARANTIA = 0;
    public static int MODO_KIT = 1;
    private static int modo;

    public static Articulos getArticuloReferencia() {
        return articuloReferencia;
    }

    public static LineaTicket getLineaReferencia() {
        return lineaReferencia;
    }

    public static int getModo() {
        return modo;
    }

    public static void setModo(int aModo) {
        modo = aModo;
    }

    /** Creates new form JGarantia */
    public JGarantia() {
        initComponents();
        registraEventoEnterBoton();
        registraValidadores();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        t_local = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_caja = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_factura = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_fecha = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        t_marca = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        jLabel9 = new javax.swing.JLabel();
        t_item = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        b_cancelar = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_ok = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        lb_error = new javax.swing.JLabel();

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel1.setText("DATOS DEL PRODUCTO QUE REQUIERE GARANTíA");

        jLabel2.setText("Datos de Factura");

        jLabel3.setDisplayedMnemonic('l');
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setLabelFor(t_local);
        jLabel3.setText("Local");

        jLabel4.setDisplayedMnemonic('c');
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setLabelFor(t_caja);
        jLabel4.setText("Caja");

        jLabel5.setDisplayedMnemonic('f');
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setLabelFor(t_factura);
        jLabel5.setText("Factura");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Fecha");

        t_local.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_localFocusLost(evt);
            }
        });
        t_local.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_localKeyTyped(evt);
            }
        });

        t_caja.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_cajaFocusLost(evt);
            }
        });

        t_factura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_facturaFocusLost(evt);
            }
        });

        t_fecha.setEditable(false);
        t_fecha.setFocusable(false);

        jLabel7.setText("Datos del Artículo");

        jLabel8.setDisplayedMnemonic('m');
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setLabelFor(t_marca);
        jLabel8.setText("Marca");

        jLabel9.setDisplayedMnemonic('i');
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setLabelFor(t_item);
        jLabel9.setText("Item");

        b_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/cancelar.png"))); // NOI18N
        b_cancelar.setText("Cancelar");
        b_cancelar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18));
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        b_ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/aceptar.png"))); // NOI18N
        b_ok.setMnemonic('a');
        b_ok.setText("Aceptar");
        b_ok.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18));
        b_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_okActionPerformed(evt);
            }
        });

        lb_error.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                        .addGap(226, 226, 226))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(t_local, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(t_caja, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(t_factura, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(t_item, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(t_marca, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)))
                .addContainerGap(121, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(b_ok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_error, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(t_local, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(t_caja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(t_factura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(t_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(t_marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(t_item, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb_error, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_ok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        accionCancelar();
}//GEN-LAST:event_b_cancelarActionPerformed

    private void b_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_okActionPerformed
        accionAceptar();
}//GEN-LAST:event_b_okActionPerformed

    private void t_localKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_localKeyTyped
    }//GEN-LAST:event_t_localKeyTyped

    private void t_localFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_localFocusLost
        accionBuscarTicket();
    }//GEN-LAST:event_t_localFocusLost

    private void t_cajaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_cajaFocusLost
        accionBuscarTicket();
    }//GEN-LAST:event_t_cajaFocusLost

    private void t_facturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_facturaFocusLost
        accionBuscarTicket();
    }//GEN-LAST:event_t_facturaFocusLost
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_cancelar;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_ok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lb_error;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_caja;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_factura;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_fecha;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_item;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_local;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_marca;
    // End of variables declaration//GEN-END:variables

    @Override
    public void accionAceptar() {
        try {
            validarFormulario();
            if (ticketOrigen == null) {
                addError(new ValidationFormException("Debe consultar una factura válida "));
                return;
            }
            // comprobamos si el artículo está en la factura original

            String codart = Numero.completaconCeros(t_marca.getText(), 4) + "." + Numero.completaconCeros(t_item.getText(), 4);
            List<LineaTicket> lineasOriginales = new ArrayList<LineaTicket>();
            int cantOrigen = ticketOrigen.getContains(codart, lineasOriginales);
            if (cantOrigen <= 0) {
                addError(new ValidationFormException("El artículo no se encuentra en la factura indicada"));
                return;
            }
            // Mirar si el artículo esta en el sistema
            Articulos artGE = ArticulosServices.getInstance().getArticuloCod(codart);
            if (artGE == null) {
                addError(new ValidationFormException("El artículo no se encuentra registrado en el sistema"));
                return;
            }
            //Verificar el tiempo para la garantia
            if (modo == MODO_GARANTIA) {
                Fecha fechaMaxGarantia = new Fecha(ticketOrigen.getFecha().getDate());
                fechaMaxGarantia.sumaMeses(artGE.getGarantiaOriginal());
                if (fechaMaxGarantia.antes(new Fecha()) || fechaMaxGarantia.equalsFecha(new Fecha())){
                    addError(new ValidationFormException("La fecha de factura ya no permite la compra de garantía."));
                    iniciaVista();
                    return;
                }
            }
            // Mirar si el artículo tiene garantia extendida
            if (modo == MODO_GARANTIA && !artGE.isGarantiaExtendida()) {
                addError(new ValidationFormException("El artículo indicado no tiene garantía extendida"));
                return;
            }
            if (modo == MODO_KIT && !artGE.isKitInstalacion()) {
                addError(new ValidationFormException("El artículo indicado no tiene kit de instalación"));
                return;
            }
            lineaReferencia = null;

            if (modo == MODO_GARANTIA) {
                int numGarantias = GarantiaExtendidaServices.getNumeroGarantiasVendidas(ticketOrigen.getUid_ticket(), codart);
                numGarantias += Sesion.getTicket().getLineas().getNumGarantiasExtendidas();
                if (numGarantias >= cantOrigen) {
                    contenedor.setVisible(false);
                    JPrincipal.getInstance().crearError("Ya se vendió una garantía extendida para el artículo indicado anteriormente.");
                    return;
                }
            }
            lineaReferencia = lineasOriginales.get(0);
            articuloReferencia = artGE;
            lineaReferencia.setArticulo(artGE);
            contenedor.setVisible(false);
        }
        catch (ValidationFormException ex) {
            addError(ex);
        }
        catch (GarantiaException e) {
            contenedor.setVisible(false);
            JPrincipal.getInstance().crearError(e.getMessage());
        }

    }

    @Override
    public void limpiarFormulario() {
        t_caja.setText("");
        t_factura.setText("");
        t_fecha.setText("");
        t_item.setText("");
        t_local.setText("");
        t_marca.setText("");
        ticketOrigen = null;
        articuloReferencia = null;
        lineaReferencia = null;
    }

    @Override
    public void accionLeerTarjetaVD() {
    }

    private void registraValidadores() {
        t_local.addValidador(new ValidadorTexto(3, true), this);
        t_local.addValidador(new ValidadorEntero(0, 999), this); // 3 digitos
        t_caja.addValidador(new ValidadorTexto(3, true), this);
        t_caja.addValidador(new ValidadorEntero(0, 999), this); // 3 digitos
        t_factura.addValidador(new ValidadorTexto(9, true), this);
        t_factura.addValidador(new ValidadorEntero(0, 99999999), this); //
    }

    @Override
    public void addError(ValidationFormException e) {
        lb_error.setText(e.getMessage());
    }

    @Override
    public void clearError() {
        lb_error.setText("");
    }

    public void iniciaVista() {
        if (modo == MODO_KIT) {
            jLabel1.setText("DATOS DEL PRODUCTO CON KIT INSTALACIÓN");
        }
        else if (modo == MODO_GARANTIA) {
            jLabel1.setText("DATOS DEL PRODUCTO QUE REQUIERE GARANTíA");
        }
        limpiarFormulario();
        t_local.requestFocus();
    }

    private boolean puedeRealizarseBusqueda() {
        boolean res = false;
        if (!t_local.getText().isEmpty() && !t_caja.getText().isEmpty() && !t_factura.getText().isEmpty()) {
            // comprobamos si se trata de un ticket ya buscado
            if (ticketOrigen == null || !t_caja.getText().equals(ticketOrigen.getCodcaja()) || !t_local.getText().equals(ticketOrigen.getTienda()) || ticketOrigen.getId_ticket() != Long.valueOf(t_factura.getText())) {
                res = true;
            }

        }
        return res;
    }

    private void buscarTicket() {
        String idTicket = "";
        try {

            idTicket = t_local.getText() + t_caja.getText() + t_factura.getText();
            byte[] xmlTicket = TicketService.consultarXmlTicket(Long.parseLong(t_factura.getText()), t_caja.getText(), t_local.getText());
            ticketOrigen = TicketOrigen.getTicketOrigen(new XMLDocument(xmlTicket));
            t_fecha.setText(ticketOrigen.getFecha().getStringHora());
            /*if (modo == MODO_GARANTIA) {
                Fecha fechaMaxGarantia = new Fecha(ticketOrigen.getFecha().getDate());
                fechaMaxGarantia.sumaAños(1);
                if (fechaMaxGarantia.antes(new Fecha()) || fechaMaxGarantia.equalsFecha(new Fecha())){
                    addError(new ValidationFormException("La fecha de factura ya no permite la compra de garantía."));
                    iniciaVista();
                    return;
                }
            }*/
        }
        catch (XMLDocumentException ex) {
            log.error("Error parseando ticket " + idTicket);
            addError(new ValidationFormException("No se pudo consultar el ticket"));
        }
        catch (TicketException ex) {
            log.error("buscarTicket() Error: " + ex.getMessage(), ex);
            addError(new ValidationFormException(ex.getMessage()));
        }
        catch (NoResultException ex) {
            log.debug("No se encontró el ticket " + idTicket);
            addError(new ValidationFormException("No existe la factura indicada o la factura está anulada."));
        }
        catch (Exception ex) {
            log.error("buscarTicket() Error: " + ex.getMessage(), ex);
            addError(new ValidationFormException("No se pudo consultar el ticket"));
        }

    }

    private void validarFormulario() throws ValidationFormException {
        t_local.validar();
        t_caja.validar();
        t_factura.validar();
    }

    private void accionBuscarTicket() {
        try {
            validarFormulario();
            if (puedeRealizarseBusqueda()) {
                buscarTicket();
            }
        }
        catch (ValidationFormException ex) {
            addError(ex);
        }
    }

    public static TicketOrigen getTicketOrigen() {
        return ticketOrigen;
    }
}
