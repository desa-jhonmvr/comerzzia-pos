/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * JLecturaTarjetaManual.java
 *
 * Created on 06-sep-2012, 11:42:33
 */
package com.comerzzia.jpos.gui.bancos;

import com.comerzzia.jpos.gui.JPrincipal;
import com.comerzzia.jpos.gui.components.JVentanaDialogo;
import com.comerzzia.jpos.gui.validation.IValidableForm;
import com.comerzzia.jpos.gui.validation.IViewerValidationFormError;
import com.comerzzia.jpos.gui.validation.ValidadorBigInteger;
import com.comerzzia.jpos.gui.validation.ValidadorObligatoriedad;
import com.comerzzia.jpos.gui.validation.ValidadorTexto;
import com.comerzzia.jpos.gui.validation.ValidationFormException;
import com.comerzzia.jpos.persistencia.mediospagos.MedioPagoBean;
import com.comerzzia.jpos.servicios.core.permisos.SinPermisosException;
import com.comerzzia.jpos.servicios.mediospago.MedioPagoException;
import com.comerzzia.jpos.servicios.mediospago.MediosPago;
import com.comerzzia.jpos.servicios.mediospago.tarjetas.TarjetaCredito;
import com.comerzzia.jpos.servicios.tramas.ParserTramaException;
import es.mpsistemas.util.log.Logger;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.KeyStroke;

/**
 *
 * @author MGRI
 */
public class JLecturaTarjetaAfiliado extends JVentanaDialogo implements IViewerValidationFormError {

    private static final Logger log = Logger.getMLogger(JLecturaTarjetaAfiliado.class);
    private static final long serialVersionUID = 1L;
    private String tarjetaLeida = "";
    private String caducidad;
    private String cvv;
    private List<IValidableForm> formularioFacturacion;
    private boolean esCreditoDirecto;
    private boolean esLecturaDesdeCedula;
    JPrincipal ventana_padre = null;
    private String mpAfiliado = null;
    private String tarjeta = null;

    /**
     * Creates new form JLecturaTarjetaManual
     */
    public JLecturaTarjetaAfiliado() {
        initComponents();
        addFunctionsKeys();
        registraEventoEnterBoton();
        inicializaValidacion();
        creaFormularioCliente();
    }

    public void iniciaVista(boolean esTarjetaSukasa) {
        this.esCreditoDirecto = esTarjetaSukasa;
        this.esLecturaDesdeCedula = false;

        limpiarFormulario();
//        estableceElementosActivos(esTarjetaSukasa);        
//        if (Sesion.config.isModoDesarrollo()) {
////           t_fecha_caducidad.setText("1712");
//            if (!esTarjetaSukasa) {
        t_tarjeta_credito.setText("");
//                t_cod_seguridad.setText("123");
//            } else {
//                t_tarjeta_credito.setText("1992102539681017");
//            }
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        t_tarjeta_credito = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        b_cancelar = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_ok = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        lb_error = new javax.swing.JLabel();

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD, jLabel1.getFont().getSize()+2));
        jLabel1.setText("Tarjeta para empleados Corporación Favorita S.A. (Filiales)");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("<html>Corporación Favorita S.A. (Filiales):</html>");

        t_tarjeta_credito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_tarjeta_creditoActionPerformed(evt);
            }
        });
        t_tarjeta_credito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_tarjeta_creditoKeyPressed(evt);
            }
        });

        b_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/cancelar.png"))); // NOI18N
        b_cancelar.setText("Cancelar");
        b_cancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        b_ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/aceptar.png"))); // NOI18N
        b_ok.setMnemonic('a');
        b_ok.setText("Aceptar");
        b_ok.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_okActionPerformed(evt);
            }
        });

        lb_error.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb_error, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(b_ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(61, 61, 61))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_tarjeta_credito, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_error, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_tarjeta_credito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(b_ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        cerrarVentana();
    }//GEN-LAST:event_b_cancelarActionPerformed

    private void b_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_okActionPerformed
//        if (validarFormulario()) {
//                     this.ventana_padre.showView("ventas");
        contenedor.setVisible(false);
//        }
    }//GEN-LAST:event_b_okActionPerformed

    private void t_tarjeta_creditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_tarjeta_creditoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_tarjeta_creditoActionPerformed

    private void t_tarjeta_creditoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_tarjeta_creditoKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            if (t_tarjeta_credito.getText().length() >= 16) {
                tarjeta = eventoLecturaTarjetaEmpleados(t_tarjeta_credito.getText());
                if (tarjeta == null){
                     lb_error.setText("Tarjeta no valida");
                }
                t_tarjeta_credito.setText(tarjeta);
                b_ok.requestFocus();
                try {
                    validarFormulario(tarjeta);
                } catch (MedioPagoException ex) {
//                        java.util.logging.Logger.getLogger(JLecturaTarjetaAfiliado.class.getName()).log(Level.SEVERE, null, ex);
                    lb_error.setText("Tarjeta no valida");
                }
            } else {
                 lb_error.setText("Tarjeta no valida");
            }

        } catch (ParserTramaException ex) {
            log.debug("Error parseando la trama de la tarjeta");
            lb_error.setText("El número de tarjeta no es válido");
        }
//        }
    }//GEN-LAST:event_t_tarjeta_creditoKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_cancelar;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_ok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lb_error;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_tarjeta_credito;
    // End of variables declaration//GEN-END:variables

    public String getTarjetaLeida() {
        return tarjetaLeida;
    }

    public void setTarjetaLeida(String tarjetaLeida) {
        this.tarjetaLeida = tarjetaLeida;
    }

    @Override
    public void accionAceptar() {
        contenedor.setVisible(false);
    }

    @Override
    public void limpiarFormulario() {
        for (IValidableForm e : formularioFacturacion) {
            e.setValidacionHabilitada(false);
        }
        tarjetaLeida = null;
        lb_error.setText("");
        t_tarjeta_credito.setText("");

        iniciaFoco();
        for (IValidableForm e : formularioFacturacion) {
            e.setValidacionHabilitada(true);
        }
    }

    public void iniciaFoco() {
        t_tarjeta_credito.requestFocus();
    }

    private void addFunctionsKeys() {
        KeyStroke esc = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        Action listeneresc = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                accionCancelar();
            }
        };
        addHotKey(esc, "IdentClientesc", listeneresc);
        // Acción de acceso a Tabla
    }

    public String getCaducidad() {
        return caducidad;
    }

    public void setCaducidad(String caducidad) {
        this.caducidad = caducidad;
    }

    public String getCvv() {
        return cvv;
    }

    public void setCvv(String cvv) {
        this.cvv = cvv;
    }

    @Override
    public void addError(ValidationFormException e) {
        lb_error.setText(e.getMessage());
    }

    @Override
    public void clearError() {
        lb_error.setText("");
    }

    private void inicializaValidacion() {
        t_tarjeta_credito.addValidador(new ValidadorObligatoriedad(), this);
        t_tarjeta_credito.addValidador(new ValidadorTexto(14, 16), this);
        t_tarjeta_credito.addValidador(new ValidadorBigInteger(), this);
    }

    private void creaFormularioCliente() {
        formularioFacturacion = new LinkedList<IValidableForm>();
        formularioFacturacion.add(t_tarjeta_credito);
//        formularioFacturacion.add(t_fecha_caducidad);
//        formularioFacturacion.add(t_cod_seguridad);
    }

    private boolean validarFormulario(String tarjeta) throws MedioPagoException {
        boolean valido = false;
        String codMedioPago = "239";
        MedioPagoBean mp;
//            tarjetaLeida = t_tarjeta_credito.getText().trim();
        mp = MediosPago.getEmpleadosAfiliado(codMedioPago, tarjeta);
        if (mp == null) {
            valido = false;
        } else {
            valido = true;
        }
        return valido;
    }

    public String autenticacionExitosa() throws SinPermisosException, MedioPagoException {
        if (validarFormulario(tarjeta)) {
            mpAfiliado = "Aprobado";
        } else {
            mpAfiliado = null;
        }
        return mpAfiliado;
    }

    private String eventoLecturaTarjetaEmpleados(String tarjetaLeida) throws ParserTramaException {

        String tarjeta = TarjetaCredito.getBINPagoBanda(tarjetaLeida);

        return tarjeta;

    }

    @Override
    public void accionLeerTarjetaVD() {
    }

    public boolean isEsLecturaDesdeCedula() {
        return esLecturaDesdeCedula;
    }
}
