/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JBuscarCotizaciones.java
 *
 * Created on 27-mar-2014, 8:42:43
 */
package com.comerzzia.jpos.gui.cotizaciones;

import com.comerzzia.jpos.gui.IVista;
import com.comerzzia.jpos.gui.JPrincipal;
import com.comerzzia.jpos.gui.components.JPanelImagenFondo;
import com.comerzzia.jpos.gui.components.form.JTextFieldForm;
import com.comerzzia.jpos.gui.cotizaciones.modelos.BusquedaCotizacionesCellRenderer;
import com.comerzzia.jpos.gui.cotizaciones.modelos.BusquedaCotizacionesTableModel;
import com.comerzzia.jpos.gui.validation.IValidableForm;
import com.comerzzia.jpos.gui.validation.IViewerValidationFormError;
import com.comerzzia.jpos.gui.validation.ValidadorFecha;
import com.comerzzia.jpos.gui.validation.ValidationFormException;
import com.comerzzia.jpos.persistencia.cotizaciones.CotizacionBean;
import com.comerzzia.jpos.persistencia.print.documentos.DocumentosBean;
import com.comerzzia.jpos.servicios.core.variables.Variables;
import com.comerzzia.jpos.servicios.cotizaciones.CotizacionesService;
import com.comerzzia.jpos.servicios.cotizaciones.ParamBuscarCotizaciones;
import com.comerzzia.jpos.servicios.print.PrintServices;
import com.comerzzia.jpos.servicios.print.documentos.DocumentoException;
import com.comerzzia.jpos.servicios.print.documentos.DocumentosService;
import com.comerzzia.util.swing.acciones.Acciones;
import es.mpsistemas.util.fechas.Fecha;
import es.mpsistemas.util.log.Logger;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.net.URL;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;

/**
 *
 * @author SMLM
 */
public class JBuscarCotizaciones extends JPanelImagenFondo implements IVista,IViewerValidationFormError {
    
    List<IValidableForm> formulario;
    private static Logger log = Logger.getMLogger(JBuscarCotizaciones.class);
    private JPrincipal ventana_padre = null; 
    private List<CotizacionBean> lista;
    
    /** Creates new form JBuscarCotizaciones */
    public JBuscarCotizaciones() {
        super();
        try{
            try {
                String prefijo = Variables.getVariable(Variables.POS_UI_SKIN);
                URL myurl = this.getClass().getResource("/skin/" + prefijo + "/" + prefijo + "_consulta_clientes.png");

                this.setImagenFondo((Image) ImageIO.read(new File(myurl.getPath())));
            }
            catch (Exception ex) {
            }            
            formulario = new LinkedList<IValidableForm>(); 
            lista = new ArrayList<CotizacionBean>();
            initComponents();
            iniciaVista();
            crearFormulario();
            registraEventoEnterBoton();
            addFunctionKeys();
            
        }catch(Exception e){}
    }
    
    /** Creates new form JBuscarCotizaciones */
    public JBuscarCotizaciones(JPrincipal principal) {
        super();
        try{
            try {
                String prefijo = Variables.getVariable(Variables.POS_UI_SKIN);
                URL myurl = this.getClass().getResource("/skin/" + prefijo + "/" + prefijo + "_consulta_clientes.png");

                this.setImagenFondo((Image) ImageIO.read(new File(myurl.getPath())));
            }
            catch (Exception ex) {
            }              
            formulario = new LinkedList<IValidableForm>(); 
            lista = new ArrayList<CotizacionBean>();
            ventana_padre = principal;
            initComponents();
            iniciaVista();
            crearFormulario();
            registraEventoEnterBoton();
            addFunctionKeys();
            
        }catch(Exception e){}
    }    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        t_fechaDesde = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        jLabel3 = new javax.swing.JLabel();
        t_fechaHasta = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_cotizaciones = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        t_documento = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        jLabel5 = new javax.swing.JLabel();
        t_vendedor = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        c_estado = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        lb_error = new javax.swing.JLabel();
        b_menu_ppal = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_reimprimir = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_nuevaCotizacion = new com.comerzzia.jpos.gui.components.form.JButtonForm();

        jLabel1.setFont(jLabel1.getFont().deriveFont((float)18));
        jLabel1.setText("Búsqueda de Cotizaciones");
        jLabel1.setFocusable(false);

        jLabel2.setDisplayedMnemonic('F');
        jLabel2.setLabelFor(t_fechaDesde);
        jLabel2.setText("Fecha Desde:");

        t_fechaDesde.setPreferredSize(new java.awt.Dimension(8, 27));
        t_fechaDesde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_fechaDesdeKeyTyped(evt);
            }
        });

        jLabel3.setDisplayedMnemonic('H');
        jLabel3.setLabelFor(t_fechaHasta);
        jLabel3.setText("Fecha Hasta:");

        t_fechaHasta.setPreferredSize(new java.awt.Dimension(8, 27));
        t_fechaHasta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_fechaHastaKeyTyped(evt);
            }
        });

        tb_cotizaciones.setOpaque(false);
        tb_cotizaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tb_cotizacionesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tb_cotizaciones);

        jLabel4.setDisplayedMnemonic('D');
        jLabel4.setLabelFor(t_documento);
        jLabel4.setText("Documento:");

        t_documento.setPreferredSize(new java.awt.Dimension(8, 27));
        t_documento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_documentoKeyTyped(evt);
            }
        });

        jLabel5.setDisplayedMnemonic('V');
        jLabel5.setLabelFor(t_vendedor);
        jLabel5.setText("Vendedor:");

        t_vendedor.setPreferredSize(new java.awt.Dimension(8, 27));
        t_vendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_vendedorKeyTyped(evt);
            }
        });

        c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Caducado" }));
        c_estado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c_estadoKeyTyped(evt);
            }
        });

        jLabel6.setDisplayedMnemonic('E');
        jLabel6.setLabelFor(c_estado);
        jLabel6.setText("Estado:");
        jLabel6.setToolTipText("");

        lb_error.setForeground(new java.awt.Color(-3407872,true));

        b_menu_ppal.setText("<html><center>Menú Principal <br/>F12</center></html>");
        b_menu_ppal.setMargin(new java.awt.Insets(2, 9, 2, 9));
        b_menu_ppal.setNextFocusableComponent(t_fechaDesde);
        b_menu_ppal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_menuPpalActionPerformed(evt);
            }
        });

        b_reimprimir.setText("<html><center>Reimprimir <br/>F6</center></html>");
        b_reimprimir.setMargin(new java.awt.Insets(2, 9, 2, 9));
        b_reimprimir.setNextFocusableComponent(b_menu_ppal);
        b_reimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_reimprimirActionPerformed(evt);
            }
        });

        b_nuevaCotizacion.setText("<html><center>Nueva Cotización <br/>F1</center></html>");
        b_nuevaCotizacion.setMargin(new java.awt.Insets(2, 9, 2, 9));
        b_nuevaCotizacion.setNextFocusableComponent(b_reimprimir);
        b_nuevaCotizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nuevaCotizacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_error, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(t_fechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(t_documento, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(4, 4, 4)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(t_vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(t_fechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(c_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(b_nuevaCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_reimprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_menu_ppal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 982, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addComponent(lb_error, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(t_fechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(t_documento, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(c_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(t_fechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(t_vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_menu_ppal, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_reimprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_nuevaCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void t_fechaDesdeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_fechaDesdeKeyTyped
        accionIntro(evt);
}//GEN-LAST:event_t_fechaDesdeKeyTyped

    private void t_fechaHastaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_fechaHastaKeyTyped
         accionIntro(evt);
    }//GEN-LAST:event_t_fechaHastaKeyTyped

    private void tb_cotizacionesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_cotizacionesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                CotizacionBean cotizacion = lista.get(tb_cotizaciones.getSelectedRow());
                DocumentosBean documento = DocumentosService.consultarDocByUniqueKey(DocumentosBean.COTIZACION, cotizacion.getCodalm(), cotizacion.getCodcaja(), String.valueOf(cotizacion.getIdCotizacion()));
                PrintServices.getInstance().reimpresionCotizacion(documento,true);
            }
            catch (IndexOutOfBoundsException e) {
                ventana_padre.crearError("Debe de realizar una búsqueda antes de visualizar una cotización. ");
            }
            catch (DocumentoException e) {
                log.error("No se ha podido reimprimir la cotización",e);
                ventana_padre.crearError("No se ha podido reimprimir la cotización. ");
            }                    
            catch (Exception e) {
                log.error(e.getMessage(), e);
                ventana_padre.crearError(null);
            }        
        }
        else if (evt.getKeyCode() == KeyEvent.VK_TAB && evt.isShiftDown()) {
            tb_cotizaciones.transferFocusBackward();
        }
        else if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            tb_cotizaciones.transferFocus();
        }
}//GEN-LAST:event_tb_cotizacionesKeyPressed

    private void t_documentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_documentoKeyTyped
         accionIntro(evt);
    }//GEN-LAST:event_t_documentoKeyTyped

    private void t_vendedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_vendedorKeyTyped
         accionIntro(evt);
    }//GEN-LAST:event_t_vendedorKeyTyped

    private void c_estadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c_estadoKeyTyped
         accionIntro(evt);
}//GEN-LAST:event_c_estadoKeyTyped

    private void b_reimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_reimprimirActionPerformed
            try {
                CotizacionBean cotizacion = lista.get(tb_cotizaciones.getSelectedRow());
                DocumentosBean documento = DocumentosService.consultarDocByUniqueKey(DocumentosBean.COTIZACION, cotizacion.getCodalm(), cotizacion.getCodcaja(), String.valueOf(cotizacion.getIdCotizacion()));
                PrintServices.getInstance().reimpresionCotizacion(documento,false);
            }
            catch (IndexOutOfBoundsException e) {
                ventana_padre.crearError("Debe de realizar una búsqueda antes de reimprimir una cotización. ");
            }
            catch (DocumentoException e) {
                log.error("No se ha podido reimprimir la cotización",e);
                ventana_padre.crearError("No se ha podido reimprimir la cotización. ");
            }
            catch (Exception e) {
                log.error(e.getMessage(), e);
                ventana_padre.crearError(null);
            } 
    }//GEN-LAST:event_b_reimprimirActionPerformed

    private void b_nuevaCotizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nuevaCotizacionActionPerformed
        JPrincipal.getInstance().addCotizacionView(new CotizacionBean());
    }//GEN-LAST:event_b_nuevaCotizacionActionPerformed

    private void b_menuPpalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_menuPpalActionPerformed
        if (b_menu_ppal.isEnabled()) {
            log.info("MENÚ PRINCIPAL");
            ventana_padre.mostrarMenu();
        }
    }//GEN-LAST:event_b_menuPpalActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_menu_ppal;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_nuevaCotizacion;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_reimprimir;
    private javax.swing.JComboBox c_estado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_error;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_documento;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_fechaDesde;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_fechaHasta;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_vendedor;
    private javax.swing.JTable tb_cotizaciones;
    // End of variables declaration//GEN-END:variables

    private void realizarBusqueda(KeyEvent evt) throws ValidationFormException{
        if (evt.getKeyChar() == '\n') {
            try{
                validarFormulario();
                ParamBuscarCotizaciones param = new ParamBuscarCotizaciones();
                String fechaDesde = t_fechaDesde.getText();
                Fecha fecha1 = new Fecha(fechaDesde,"dd-MMM-yyyy");
                param.setFechaDesde(fecha1);
                String fechaHasta = t_fechaHasta.getText();
                //Queremos buscar hasta el final del día
                Fecha fecha2 = new Fecha(fechaHasta,"dd-MMM-yyyy");
                if(fechaHasta != null && !fechaHasta.isEmpty()){
                    fecha2.sumaHoras(23);
                    fecha2.sumaMinutos(59);
                }
                if(fecha1!=null && fecha2!=null && fecha1.getDate()!=null && fecha2.getDate()!=null && fecha1.despues(fecha2)){
                    t_fechaHasta.requestFocus();
                    throw new ValidationFormException("La fecha inicial no puede ser posterior a la fecha final");
                }
                param.setFechaHasta(fecha2);
                param.setCodcli(t_documento.getText());
                param.setVendedor(t_vendedor.getText());
                int anulado = c_estado.getSelectedIndex();
                if(anulado==1){param.setEstado('V');}
                if(anulado==2){param.setEstado('C');}
            
                lista = CotizacionesService.consultarCotizaciones(param);
            
                refrescarTablaCotizaciones(new BusquedaCotizacionesTableModel(lista));
                b_reimprimir.setVisible(true);
                
                if (lista.isEmpty()) {
                    ventana_padre.crearAdvertencia("No se han encontrado cotizaciones con los filtros indicados.");
                    b_reimprimir.setVisible(false);
                }
                
                if (tb_cotizaciones.getRowCount() >= 0) {
                    ListSelectionModel selectionModel = tb_cotizaciones.getSelectionModel();
                    selectionModel.setSelectionInterval(0, 0);
                    tb_cotizaciones.requestFocus();
                }            
            } catch (ValidationFormException e){
                throw new ValidationFormException("La fecha final no puede ser posterior a la fecha inicial");
            } catch (Exception ex){
                log.error(ex.getMessage(), ex);
                ventana_padre.crearAdvertencia("Error en la consulta de Cotizaciones");
            }
        }
    }    

    private void refrescarTablaCotizaciones(BusquedaCotizacionesTableModel busquedaCotizacionesTableModel) {
        tb_cotizaciones.setModel(busquedaCotizacionesTableModel);
        tb_cotizaciones.getColumnModel().getColumn(0).setPreferredWidth(50);
        tb_cotizaciones.getColumnModel().getColumn(1).setPreferredWidth(150);
        tb_cotizaciones.getColumnModel().getColumn(2).setPreferredWidth(140);
        tb_cotizaciones.getColumnModel().getColumn(3).setPreferredWidth(380);
        tb_cotizaciones.getColumnModel().getColumn(4).setPreferredWidth(100);
        tb_cotizaciones.getColumnModel().getColumn(5).setPreferredWidth(90);
    }
    
    @Override
    public void iniciaVista() {
        t_fechaDesde.setText("");
        t_fechaHasta.setText("");
        t_vendedor.setText("");
        t_documento.setText("");
        c_estado.setSelectedIndex(0);
        t_fechaDesde.addValidador(new ValidadorFecha(), this);
        t_fechaHasta.addValidador(new ValidadorFecha(), this);
        b_reimprimir.setVisible(false);
        // Borde vacio para tablas, Viewports y scrollpanels
        Border empty = new EmptyBorder(0, 0, 0, 0);
        tb_cotizaciones.setDefaultRenderer(Object.class, new BusquedaCotizacionesCellRenderer());
        refrescarTablaCotizaciones(new BusquedaCotizacionesTableModel(lista));

        jScrollPane1.setViewportBorder(empty);
        tb_cotizaciones.setBorder(empty);
        jScrollPane1.getViewport().setOpaque(false);
        
        t_fechaDesde.requestFocus(true);
    }

    @Override
    public void iniciaFoco() {
    }

    @Override
    public void addError(ValidationFormException e) {
        lb_error.setText(e.getMessage());
    }

    @Override
    public void clearError() {
        lb_error.setText("");
    }
    
    public void limpiarFormulario() {

        for (IValidableForm elem : formulario) {
            elem.setValidacionHabilitada(false);
        }

        for (IValidableForm elem : formulario) {
            elem.setText("");
        }
        
        this.t_fechaDesde.requestFocus();
        b_reimprimir.setVisible(false);

        for (IValidableForm elem : formulario) {
            elem.setValidacionHabilitada(true);
        }
        
        this.lb_error.setText("");        
    }

    private void validarFormulario() throws ValidationFormException {
        for (IValidableForm e : formulario) {
            try {
                e.validar();
            }
            catch (ValidationFormException ex) {
                throw ex;
            }
        }
    }
    
    private void addFunctionKeys() {

        log.info("Función de acciones de teclado");

        KeyStroke f12 = KeyStroke.getKeyStroke(KeyEvent.VK_F12, 0);
        Action listenerf12 = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                b_menuPpalActionPerformed(ae);
            }
        };
        addHotKey(f12, "IdentClientF12", listenerf12);
        
        KeyStroke f1 = KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0);
        Action listenerf1 = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                b_nuevaCotizacionActionPerformed(ae);
            }
        };
        addHotKey(f1, "IdentClientF1", listenerf1);       
        
        KeyStroke f6 = KeyStroke.getKeyStroke(KeyEvent.VK_F6, 0);
        Action listenerf6 = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                b_reimprimirActionPerformed(ae);
            }
        };
        addHotKey(f6, "IdentClientF6", listenerf6);            

        Acciones.crearAccionFocoTabla(this, tb_cotizaciones);
    }  
    
    private void accionIntro(KeyEvent ke) {
        if ((t_fechaDesde.hasFocus() || t_fechaHasta.hasFocus() || t_documento.hasFocus() || t_vendedor.hasFocus() || c_estado.hasFocus()) && ke.getKeyChar() == '\n') {
            try{
                JTextFieldForm focoEn = null;

                if (ke.getComponent() instanceof JTextFieldForm){
                    focoEn = (JTextFieldForm) ke.getComponent();
                }

                realizarBusqueda(ke);

                if (tb_cotizaciones.getRowCount() < 1 && focoEn !=null){
                    focoEn.requestFocus();
                }

                if (tb_cotizaciones.getRowCount() >= 0) {
                    ListSelectionModel selectionModel = tb_cotizaciones.getSelectionModel();
                    selectionModel.setSelectionInterval(0, 0);
                    tb_cotizaciones.requestFocus();
                }
            } catch(ValidationFormException e){
                t_fechaHasta.requestFocus();
                addError(e);
            }
        }
   }
    
    private void crearFormulario() {
        // Elementos del formulario susceptibles de validarse o resetearse 
        formulario.add(t_fechaDesde);
        formulario.add(t_fechaHasta);
    }
}
