/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * JMenu.java
 *
 * Created on 03-ago-2011, 14:17:57
 */
package com.comerzzia.jpos.gui;

import com.comerzzia.jpos.gui.components.JPanelImagenFondo;
import com.comerzzia.jpos.gui.reservaciones.JReservacionesCliente;
import com.comerzzia.jpos.servicios.login.Sesion;
import com.comerzzia.jpos.servicios.core.permisos.Operaciones;
import com.comerzzia.jpos.servicios.core.permisos.SinPermisosException;
import com.comerzzia.jpos.servicios.core.variables.Variables;
import com.comerzzia.jpos.servicios.core.variables.VariablesAlm;
import com.comerzzia.jpos.servicios.login.InvalidLoginException;
import com.comerzzia.jpos.servicios.login.LoginException;
import es.mpsistemas.util.log.Logger;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.KeyStroke;

/**
 *
 * @author MGRI
 */
public class JMenu extends JPanelImagenFondo implements IVista, KeyListener {

    private static final Integer BASE_X = 9;
    private static final Integer BASE_Y = 250;
    private static Logger log = Logger.getMLogger(JMenu.class);
    private JPrincipal ventana_padre = null;
    private JDialog contenedor = null;
    JSolicitarAutorizacionVentana v_dialog_autorizar;
    private static JDialog popupActivo;

    private boolean enAccion = false;

    /**
     * Creates new form JMenu
     */
    public JMenu() {
        super();
        initComponents();
    }

    public JMenu(JPrincipal ventana_padre, JDialog contenedor) {
        super();
        try {
            String prefijo = Variables.getVariable(Variables.POS_UI_SKIN);
            URL myurl = this.getClass().getResource("/skin/" + prefijo + "/" + prefijo + "_menu.png");

            this.setImagenFondo((Image) ImageIO.read(new File(myurl.getPath())));
        } catch (IOException ex) {
        }
        this.ventana_padre = ventana_padre;
        this.contenedor = contenedor;
        initComponents();

        URL myurl;
        myurl = this.getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/iconoTransparente.gif");
        ImageIcon icon = new ImageIcon(myurl);
        v_tickets_aparcados.setIconImage(icon.getImage());

        addFunctionKeys();

        // MODO RESERVA - CAMBIO DE COLOR DE LOS BOTONES
        if (Sesion.getDatosConfiguracion().isModoReserva()) {
            //b_nueva_reservacion.setBackground(new Color(200, 80, 80));
            //b_gestion_reservaciones.setBackground(new Color(200, 80, 80));
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        v_tickets_aparcados = new javax.swing.JDialog();
        p_tickets_aparcados = new JTicketsAparcados(this);
        jLabel8 = new javax.swing.JLabel();
        b_menu = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_menu1 = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_cotizacion = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_recuperarticket = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_clientes = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_cancelar = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_devolucion = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_bloquear = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_recuenocaja = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_salir = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_flashvent = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_gestcajas = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_reimpresion = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_editarCliente = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_nueva_reservacion = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_gestion_reservaciones = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_plan_novios = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_envio_domicilio = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_giftcard = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_credito = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_anulaciones = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_giftcard1 = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_bonos_efectivo = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_sukupon = new com.comerzzia.jpos.gui.components.form.JButtonForm();

        v_tickets_aparcados.setAlwaysOnTop(true);
        v_tickets_aparcados.setMinimumSize(new java.awt.Dimension(470, 270));
        v_tickets_aparcados.setModalExclusionType(java.awt.Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
        v_tickets_aparcados.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);

        javax.swing.GroupLayout v_tickets_aparcadosLayout = new javax.swing.GroupLayout(v_tickets_aparcados.getContentPane());
        v_tickets_aparcados.getContentPane().setLayout(v_tickets_aparcadosLayout);
        v_tickets_aparcadosLayout.setHorizontalGroup(
            v_tickets_aparcadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(v_tickets_aparcadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(p_tickets_aparcados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        v_tickets_aparcadosLayout.setVerticalGroup(
            v_tickets_aparcadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(v_tickets_aparcadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(p_tickets_aparcados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setMaximumSize(new java.awt.Dimension(384, 568));
        setMinimumSize(new java.awt.Dimension(384, 568));
        setPreferredSize(new java.awt.Dimension(384, 568));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(-4144960,true));
        jLabel8.setText("Men√∫");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 2, 70, 20));

        b_menu.setMnemonic('v');
        b_menu.setText("Venta");
        b_menu.setAlignmentY(0.2F);
        b_menu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_menuActionPerformed(evt);
            }
        });
        add(b_menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 29, 355, 35));

        b_menu1.setMnemonic('f');
        b_menu1.setText("Mi Perfil");
        b_menu1.setAlignmentY(0.2F);
        b_menu1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_menu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_menu1ActionPerformed(evt);
            }
        });
        add(b_menu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 176, 35));

        b_cotizacion.setMnemonic('z');
        b_cotizacion.setText("Cotizaciones");
        b_cotizacion.setAlignmentY(0.2F);
        b_cotizacion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_cotizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cotizacionActionPerformed(evt);
            }
        });
        add(b_cotizacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 176, 35));

        b_recuperarticket.setMnemonic('r');
        b_recuperarticket.setText("Recuperar Ticket");
        b_recuperarticket.setAlignmentY(0.2F);
        b_recuperarticket.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_recuperarticket.setMaximumSize(new java.awt.Dimension(161, 31));
        b_recuperarticket.setMinimumSize(new java.awt.Dimension(161, 31));
        b_recuperarticket.setPreferredSize(new java.awt.Dimension(161, 31));
        b_recuperarticket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_recuperarticketActionPerformed(evt);
            }
        });
        add(b_recuperarticket, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 355, 35));

        b_clientes.setMnemonic('l');
        b_clientes.setText("Historial Clientes");
        b_clientes.setAlignmentY(0.2F);
        b_clientes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_clientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_clientesActionPerformed(evt);
            }
        });
        add(b_clientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 430, 176, 35));

        b_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/cancelar.png"))); // NOI18N
        b_cancelar.setText("Cancelar");
        b_cancelar.setAlignmentY(0.2F);
        b_cancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });
        add(b_cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 510, 176, 35));

        b_devolucion.setMnemonic('D');
        b_devolucion.setText("Devoluci√≥n");
        b_devolucion.setAlignmentY(0.2F);
        b_devolucion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_devolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_devolucionActionPerformed(evt);
            }
        });
        add(b_devolucion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 176, 35));

        b_bloquear.setMnemonic('b');
        b_bloquear.setText("Bloquear");
        b_bloquear.setAlignmentY(0.2F);
        b_bloquear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_bloquear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_bloquearActionPerformed(evt);
            }
        });
        add(b_bloquear, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 470, 176, 35));

        b_recuenocaja.setMnemonic('j');
        b_recuenocaja.setText("Recuento de Caja");
        b_recuenocaja.setAlignmentY(0.2F);
        b_recuenocaja.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_recuenocaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_recuenocajaActionPerformed(evt);
            }
        });
        add(b_recuenocaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 176, 35));

        b_salir.setMnemonic('s');
        b_salir.setText("Salir");
        b_salir.setAlignmentY(0.2F);
        b_salir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_salirActionPerformed(evt);
            }
        });
        add(b_salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 176, 35));

        b_flashvent.setMnemonic('h');
        b_flashvent.setText("Flash de Ventas");
        b_flashvent.setAlignmentY(0.2F);
        b_flashvent.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_flashvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_flashventActionPerformed(evt);
            }
        });
        add(b_flashvent, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 176, 35));

        b_gestcajas.setMnemonic('g');
        b_gestcajas.setText("Gesti√≥n de Cajas");
        b_gestcajas.setAlignmentY(0.2F);
        b_gestcajas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_gestcajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_gestcajasActionPerformed(evt);
            }
        });
        add(b_gestcajas, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 176, 35));

        b_reimpresion.setMnemonic('m');
        b_reimpresion.setText("Reimpresiones");
        b_reimpresion.setAlignmentY(0.2F);
        b_reimpresion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_reimpresion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_reimpresionActionPerformed(evt);
            }
        });
        add(b_reimpresion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 176, 35));

        b_editarCliente.setMnemonic('C');
        b_editarCliente.setText("Editar Cliente");
        b_editarCliente.setAlignmentY(0.2F);
        b_editarCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_editarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_editarClienteActionPerformed(evt);
            }
        });
        add(b_editarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 176, 35));

        b_nueva_reservacion.setMnemonic('N');
        b_nueva_reservacion.setText("Nueva Reservaci√≥n");
        b_nueva_reservacion.setAlignmentY(0.2F);
        b_nueva_reservacion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_nueva_reservacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nueva_reservacionActionPerformed(evt);
            }
        });
        add(b_nueva_reservacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 176, 35));

        b_gestion_reservaciones.setMnemonic('e');
        b_gestion_reservaciones.setText("Reservaciones");
        b_gestion_reservaciones.setAlignmentY(0.2F);
        b_gestion_reservaciones.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_gestion_reservaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_gestion_reservacionesActionPerformed(evt);
            }
        });
        add(b_gestion_reservaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 176, 35));

        b_plan_novios.setMnemonic('p');
        b_plan_novios.setText("Plan Novios");
        b_plan_novios.setAlignmentY(0.2F);
        b_plan_novios.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_plan_novios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_plan_noviosActionPerformed(evt);
            }
        });
        add(b_plan_novios, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 176, 35));

        b_envio_domicilio.setMnemonic('o');
        b_envio_domicilio.setText("Entregas Domicilio");
        b_envio_domicilio.setToolTipText("");
        b_envio_domicilio.setAlignmentY(0.2F);
        b_envio_domicilio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_envio_domicilio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_envio_domicilioMouseClicked(evt);
            }
        });
        b_envio_domicilio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_envio_domicilioActionPerformed(evt);
            }
        });
        add(b_envio_domicilio, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 176, 35));

        b_giftcard.setMnemonic('i');
        b_giftcard.setText("Gift Card");
        b_giftcard.setAlignmentY(0.2F);
        b_giftcard.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_giftcard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_giftcardActionPerformed(evt);
            }
        });
        add(b_giftcard, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 176, 35));

        b_credito.setMnemonic('t');
        b_credito.setText("Cr√©dito");
        b_credito.setAlignmentY(0.2F);
        b_credito.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_credito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_creditoActionPerformed(evt);
            }
        });
        add(b_credito, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 176, 35));

        b_anulaciones.setMnemonic('u');
        b_anulaciones.setText("Anulaciones");
        b_anulaciones.setAlignmentY(0.2F);
        b_anulaciones.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_anulaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_anulacionesActionPerformed(evt);
            }
        });
        add(b_anulaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 176, 35));

        b_giftcard1.setMnemonic('x');
        b_giftcard1.setText("Bonos Supermaxi");
        b_giftcard1.setAlignmentY(0.2F);
        b_giftcard1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_giftcard1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_giftcard1ActionPerformed(evt);
            }
        });
        add(b_giftcard1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 176, 35));

        b_bonos_efectivo.setMnemonic('b');
        b_bonos_efectivo.setAlignmentY(0.2F);
        b_bonos_efectivo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_bonos_efectivo.setLabel("Bonos Efectivo");
        b_bonos_efectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_bonos_efectivoActionPerformed(evt);
            }
        });
        add(b_bonos_efectivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 176, 35));

        b_sukupon.setMnemonic('k');
        b_sukupon.setAlignmentY(0.2F);
        b_sukupon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_sukupon.setLabel("Sukupon");
        b_sukupon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_sukuponActionPerformed(evt);
            }
        });
        add(b_sukupon, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, 176, 35));
    }// </editor-fold>//GEN-END:initComponents

    private void b_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_menuActionPerformed
        log.info("MENU: VENTA");
        // Cerramos el Jdialog
        if (!enAccion) {
            enAccion = true; // semaforo

            this.contenedor.setVisible(false);
            enAccion = false;

            ventana_padre.showViewMenuVentas();
        }
}//GEN-LAST:event_b_menuActionPerformed

    private void b_menu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_menu1ActionPerformed
        log.info("MENU: MI PERFIL");
        // Cerramos el Jdialog
        if (!enAccion) {
            enAccion = true; // semaforo

            this.contenedor.setVisible(false);
            enAccion = false;

            ventana_padre.showView("menu-perfil");
        }
    }//GEN-LAST:event_b_menu1ActionPerformed

    private void b_recuperarticketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_recuperarticketActionPerformed
        log.info("MENU: RECUPERAR TICKET");

        if (!enAccion) {
            enAccion = true; // semaforo

            this.contenedor.setVisible(false);
            enAccion = false;

            if (Sesion.getTicket() == null) {
                b_recuperarticket.setEnabled(true);
            } else {
                b_recuperarticket.setEnabled(false);
            }
            // Cerramos el Jdialog
            if (Sesion.existenTicketsAparcados()) {
                p_tickets_aparcados.setContenedor(v_tickets_aparcados);
                p_tickets_aparcados.inicializar();
                v_tickets_aparcados.setLocationRelativeTo(null);
                //this.contenedor.setVisible(true); // Si da problemas la visualizaci√≥n de la tabla de recuperaci√≥n de tickets, descomentar

                JPrincipal.setPopupActivo(v_tickets_aparcados);
                v_tickets_aparcados.setVisible(true);
                JPrincipal.setPopupActivo(null);

            } else {
                ventana_padre.crearInformacion("No existen tickets aplazados.");
            }
        }
    }//GEN-LAST:event_b_recuperarticketActionPerformed

    private void b_clientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_clientesActionPerformed
        log.info("MENU: CLIENTES");

        if (!enAccion) {
            enAccion = true; // semaforo

            this.contenedor.setVisible(false);
            enAccion = false;

            ventana_padre.irBuscarClientes();
        }

    }//GEN-LAST:event_b_clientesActionPerformed

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        log.info("MENU: CANCELAR");
        // Cerramos el Jdialog
        if (!enAccion) {
            enAccion = true; // semaforo

            this.contenedor.setVisible(false);
            enAccion = false;
        }

}//GEN-LAST:event_b_cancelarActionPerformed

    private void b_nueva_reservacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nueva_reservacionActionPerformed
        if (b_nueva_reservacion.isEnabled()) {
            log.info("MENU: NUEVA RESERVACI√ìN");
            // Comprobamos que la caja esta abierta

            if (!enAccion) {
                enAccion = true;

                if (Sesion.getCajaActual().isCajaParcialAbierta() && Sesion.getCajaActual().isCajaAbierta()) {

                    this.contenedor.setVisible(false);
                    enAccion = false;
                    try {
                        ventana_padre.irReservacionesClienteView("");
                    } catch (Exception e) {
                        log.error(" Menu - Error creando pantalla de cliente para reservaciones ", e);
                        ventana_padre.crearError(null);
                    }
                } else {
                    this.contenedor.setVisible(false);
                    ventana_padre.crearAdvertencia("La caja esta cerrada. Ha de abrir la caja para realizar la operaci√≥n");
                }
                enAccion = false;
            }
        }
    }//GEN-LAST:event_b_nueva_reservacionActionPerformed

private void b_gestion_reservacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_gestion_reservacionesActionPerformed

    if (b_gestion_reservaciones.isEnabled()) {

        if (!enAccion) {
            enAccion = true;

            log.info("MENU: GESTI√ìN DE RESERVACIONES");
            // Comprobamos que la caja esta abierta
            if (Sesion.getCajaActual().isCajaParcialAbierta() && Sesion.getCajaActual().isCajaAbierta()) {
                this.contenedor.setVisible(false);
                enAccion = false;
                try {
                    //ventana_padre.irReservacionesClienteView("Abono");
                    ventana_padre.irBuscarReservaciones();
                } catch (Exception e) {
                    ventana_padre.crearError(null);
                }
            } else {
                this.contenedor.setVisible(false);
                ventana_padre.crearAdvertencia("La caja esta cerrada. Ha de abrir la caja para realizar la operaci√≥n");
            }
            enAccion = false;
        }

    }

}//GEN-LAST:event_b_gestion_reservacionesActionPerformed

private void b_devolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_devolucionActionPerformed
    if (b_devolucion.isEnabled()) {
        log.info("MENU: TRAMITAR DEVOLUCI√ìN");

        if (!enAccion) {
            enAccion = true;

            try {
                // Comprobamos que la caja esta abierta
                if (Sesion.getCajaActual().isCajaParcialAbierta() && Sesion.getCajaActual().isCajaAbierta()) {

                    // Tramitar Devoluci√≥n.
                    this.contenedor.setVisible(false);
                    enAccion = false;
                    String autorizador = ventana_padre.compruebaAutorizacion(Operaciones.REALIZAR_DEVOLUCION);
                    Sesion.setAutorizadorDevolucion(autorizador);
                    ventana_padre.crearVentanaDevolucion();
                } else {
                    this.contenedor.setVisible(false);
                    ventana_padre.crearAdvertencia("La caja esta cerrada. Ha de abrir la caja para realizar la operaci√≥n");
                }
            } catch (SinPermisosException ex) {
                ventana_padre.crearSinPermisos("El cajero no tiene permisos para realizar una devoluci√≥n");
            }

            enAccion = false;
        }

    }
}//GEN-LAST:event_b_devolucionActionPerformed

private void b_bloquearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_bloquearActionPerformed
    log.info("MENU: BLOQUEAR");
    if (!enAccion) {
        JDialog v_bloqueo = creaPanelDeBloqueo();
        this.contenedor.setVisible(false);
        v_bloqueo.setVisible(true);
    }

}//GEN-LAST:event_b_bloquearActionPerformed

private void b_recuenocajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_recuenocajaActionPerformed
    //Modificaci√≥n. Si estamos en una pantalla de cajas, salimos a la de ventas

    if (!enAccion) {
        enAccion = true;

        this.contenedor.setVisible(false);
        enAccion = false;
        if (Sesion.getCajaActual().isCajaAbierta() && Sesion.getCajaActual().isCajaParcialAbierta()) {
            if (ventana_padre.isCajaView()) {
                log.info("Recuento de caja desde gesti√≥n de cajas. Redireccion a ventas");
                ventana_padre.showViewMenuVentas();
            }
            ventana_padre.accionAbrirRecuentos();
        } else {
            ventana_padre.crearError("La caja parcial ha de estar abierta para realizar un recuento");
        }
    }

}//GEN-LAST:event_b_recuenocajaActionPerformed

private void b_giftcardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_giftcardActionPerformed

    if (!enAccion) {
        enAccion = true;

        this.contenedor.setVisible(false);
        enAccion = false;
        if (Sesion.getCajaActual().isCajaAbierta() && Sesion.getCajaActual().isCajaParcialAbierta()) {
            log.info("Menu() - VISTA_GIFTCARD");
            ventana_padre.showView(JPrincipal.VISTA_GIFTCARD);
        } else {
            ventana_padre.crearAdvertencia("La caja esta cerrada. Ha de abrir la caja para realizar la operaci√≥n");
        }
    }
}//GEN-LAST:event_b_giftcardActionPerformed

private void b_creditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_creditoActionPerformed

    if (!enAccion) {
        enAccion = true;
        this.contenedor.setVisible(false);
        enAccion = false;

        if (Sesion.getCajaActual().isCajaAbierta() && Sesion.getCajaActual().isCajaParcialAbierta()) {
            log.info("Menu() - VISTA_CREDITO");
            ventana_padre.crearVentanaMenuTarjetas();
        } else {
            ventana_padre.crearAdvertencia("La caja esta cerrada. Ha de abrir la caja para realizar la operaci√≥n");
        }
    }
}//GEN-LAST:event_b_creditoActionPerformed

private void b_plan_noviosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_plan_noviosActionPerformed
    accionMenuPlanNovios();
}//GEN-LAST:event_b_plan_noviosActionPerformed

private void b_envio_domicilioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_envio_domicilioActionPerformed
    log.info("MENU: ENV√çO A DOMICILIO");

    if (!enAccion) {
        enAccion = true; // semaforo

        this.contenedor.setVisible(false);
        enAccion = false;

        ventana_padre.crearVentanaEnvioDomicilio();
    }
}//GEN-LAST:event_b_envio_domicilioActionPerformed

private void b_envio_domicilioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_envio_domicilioMouseClicked
}//GEN-LAST:event_b_envio_domicilioMouseClicked

private void b_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_salirActionPerformed
    log.info("MENU: SALIR");

    if (!enAccion) {
        enAccion = true; // semaforo

        this.contenedor.setVisible(false);
        enAccion = false;

        Sesion.cerrarSesion();

        ventana_padre.showView("login");
    }
}//GEN-LAST:event_b_salirActionPerformed

private void b_flashventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_flashventActionPerformed
    log.info("MENU: FLASH DE VENTAS");

    if (!enAccion) {
        enAccion = true; // semaforo

        this.contenedor.setVisible(false);
        enAccion = false;

        ventana_padre.crearVentanaFlashVentas();
    }
}//GEN-LAST:event_b_flashventActionPerformed

private void b_gestcajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_gestcajasActionPerformed
    log.info("MENU: GESTI√ìN DE CAJAS");
    // Cerramos el Jdialog
    if (!enAccion) {
        enAccion = true; // semaforo

        this.contenedor.setVisible(false);
        enAccion = false;
        try {
            String autorizador = ventana_padre.compruebaAutorizacion(Operaciones.GESTIONAR_CAJA);
            Sesion.setAutorizadorGestionCajas(autorizador);
            ventana_padre.addCierreCajaView();
            ventana_padre.showView("cierre_caja");
        } catch (SinPermisosException e) {
            log.debug("Cajero sin permisos para realizar la operaci√≥n");
            //ventana_padre.crearSinPermisos("No tiene permisos para realizar la operaci√≥n");
        } catch (Exception e) {
            ventana_padre.crearError(null);
            log.error("Error en al navegaci√≥n", e);
        }
    }
}//GEN-LAST:event_b_gestcajasActionPerformed

private void b_reimpresionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_reimpresionActionPerformed
    log.info("MENU: REIMPRESIONES");

    if (!enAccion) {
        enAccion = true; // semaforo

        this.contenedor.setVisible(false);
        enAccion = false;

        ventana_padre.crearVentanaMenuReimpresion();
    }
}//GEN-LAST:event_b_reimpresionActionPerformed

private void b_cotizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cotizacionActionPerformed
    log.info("MENU: COTIZACIONES");

    if (!enAccion) {
        enAccion = true; // semaforo

        this.contenedor.setVisible(false);
        enAccion = false;

        ventana_padre.irBuscarCotizacion();
    }
}//GEN-LAST:event_b_cotizacionActionPerformed

private void b_editarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_editarClienteActionPerformed
    log.info("MENU: EDITAR CLIENTE");
    if (!enAccion) {
        enAccion = true; // semaforo

        this.contenedor.setVisible(false);
        enAccion = false;
        JPrincipal.getInstance().irReservacionesClienteView(JReservacionesCliente.OPERACIONEDITARCLIENTE);
    }
}//GEN-LAST:event_b_editarClienteActionPerformed

    private void b_anulacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_anulacionesActionPerformed
        log.info("MENU: ANULACIONES");
        if (!enAccion) {
            enAccion = true; // semaforo

            this.contenedor.setVisible(false);
            enAccion = false;
            JPrincipal.getInstance().crearVentanaAnulaciones();
        }
    }//GEN-LAST:event_b_anulacionesActionPerformed

    private void b_giftcard1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_giftcard1ActionPerformed

        if (!enAccion) {
            enAccion = true;

            this.contenedor.setVisible(false);
            enAccion = false;
            if (Sesion.getCajaActual().isCajaAbierta() && Sesion.getCajaActual().isCajaParcialAbierta()) {
                log.info("Menu() - VISTA_BONOSUPER");
                ventana_padre.showView(JPrincipal.VISTA_BONOSUPER);
            } else {
                ventana_padre.crearAdvertencia("La caja esta cerrada. Ha de abrir la caja para realizar la operaci√≥n");
            }
        }
    }//GEN-LAST:event_b_giftcard1ActionPerformed

    private void b_bonos_efectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_bonos_efectivoActionPerformed
//        cerrarVentana();
//        crearVentanaConsultaBonoEfectivo();
        log.info("MENU: BONOS EFECTIVO");

        if (!enAccion) {
            enAccion = true; // semaforo

            this.contenedor.setVisible(false);
            enAccion = false;

            ventana_padre.crearVentanaConsultaBonosEfectivo();
        }
    }//GEN-LAST:event_b_bonos_efectivoActionPerformed

    private void b_sukuponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_sukuponActionPerformed
//        cerrarVentana();
//      try{ 
//        String compruebaAutorizacion = compruebaAutorizacion(Operaciones.PERMITE_CONSULTAR_SUKUPON);
//        if (compruebaAutorizacion != null) {
//            crearVentanaConsultaSukupon();
//        } else {
//           crearVentanaAutorizacion(Operaciones.PERMITE_CONSULTAR_SUKUPON);
//        }
//        
//            } catch (SinPermisosException e) {
////            // El usuario no tiene permisos para sukupon
//        }
//      
        log.info("MENU: SUKUPON");

        if (!enAccion) {
            enAccion = true; // semaforo

            this.contenedor.setVisible(false);
            enAccion = false;

            ventana_padre.crearVentanaConsultaSukupon();
        }
        /*    if (!enAccion) {
            enAccion = true;

            this.contenedor.setVisible(false);
            enAccion = false;
            if (Sesion.getCajaActual().isCajaAbierta() && Sesion.getCajaActual().isCajaParcialAbierta()) {
                log.info("Menu() - VISTA_BONOSUPER");
                try {
                    String compruebaAutorizacion = compruebaAutorizacion(Operaciones.PERMITE_CONSULTAR_SUKUPON);
                    ventana_padre.showView(JPrincipal.VISTA_SUKUPON);
                } catch (SinPermisosException e) {
                    // El usuario no tiene permisos para reimprimr
                }
            } else {
                ventana_padre.crearAdvertencia("La caja esta cerrada. Ha de abrir la caja para realizar la operaci√≥n");
            }
        }*/

    }//GEN-LAST:event_b_sukuponActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_anulaciones;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_bloquear;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_bonos_efectivo;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_cancelar;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_clientes;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_cotizacion;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_credito;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_devolucion;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_editarCliente;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_envio_domicilio;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_flashvent;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_gestcajas;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_gestion_reservaciones;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_giftcard;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_giftcard1;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_menu;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_menu1;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_nueva_reservacion;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_plan_novios;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_recuenocaja;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_recuperarticket;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_reimpresion;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_salir;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_sukupon;
    private javax.swing.JLabel jLabel8;
    private com.comerzzia.jpos.gui.JTicketsAparcados p_tickets_aparcados;
    private javax.swing.JDialog v_tickets_aparcados;
    // End of variables declaration//GEN-END:variables

    @Override
    public void iniciaVista() {
        enAccion = false; //Reseteamos el semaforo por seguridad 
        String usu = null;

        if (Sesion.getTicket() == null) {
            b_recuperarticket.setEnabled(true);
        } else {
            b_recuperarticket.setEnabled(false);
        }

        if (Sesion.getUsuario().isClaveCaducada() || Sesion.getUsuario().isClaveCortaCaducada() || Sesion.getUsuario().isPrimerAcceso()) {
            b_menu.setEnabled(false);
            b_menu1.setEnabled(false);
            b_cotizacion.setEnabled(false);
            b_recuperarticket.setEnabled(false);

            //foco
            b_clientes.requestFocus();

        } else {
            b_menu.setEnabled(true);
            b_menu1.setEnabled(true);
            b_cotizacion.setEnabled(true);
            b_recuperarticket.setEnabled(true);
            try {
                usu = Sesion.autenticaOperacion(Sesion.getUsuario().getIdUsuario(), Operaciones.PERFIL_CAJERO);
                if (usu != null) {
                    b_anulaciones.setEnabled(false);
                    b_gestion_reservaciones.setEnabled(false);
                    b_nueva_reservacion.setEnabled(false);
                    b_plan_novios.setEnabled(false);
                    b_credito.setEnabled(false);
                    b_bonos_efectivo.setEnabled(false);
                    b_sukupon.setEnabled(false);
                    b_clientes.setEnabled(false);
                    b_reimpresion.setEnabled(true);
                    //foco
                    b_menu.requestFocus();
                } else {
                    b_anulaciones.setEnabled(true);
                    b_gestion_reservaciones.setEnabled(true);
                    b_nueva_reservacion.setEnabled(true);
                    b_plan_novios.setEnabled(true);
                    b_credito.setEnabled(true);
                    b_bonos_efectivo.setEnabled(true);
                    b_sukupon.setEnabled(true);
                    b_clientes.setEnabled(true);
                    b_reimpresion.setEnabled(true);
                    //foco
                    b_menu.requestFocus();
                }
            } catch (InvalidLoginException | LoginException | SinPermisosException ex) {
                b_anulaciones.setEnabled(true);
                b_gestion_reservaciones.setEnabled(true);
                b_nueva_reservacion.setEnabled(true);
                b_plan_novios.setEnabled(true);
                b_credito.setEnabled(true);
                b_bonos_efectivo.setEnabled(true);
                b_sukupon.setEnabled(true);
                b_clientes.setEnabled(true);
                b_reimpresion.setEnabled(true);
                //foco
                b_menu.requestFocus();
                java.util.logging.Logger.getLogger(JMenu.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        if (!Sesion.getTienda().getCajaActiva().isEmiteNotaCredito()) {
            b_devolucion.setEnabled(false);
        }

        // Prohibimos accesos a secciones seg√∫n emisiones de caja
        if (!Sesion.getTienda().getCajaActiva().isEmiteFactura()) { // Si el pos emite facturas
            b_nueva_reservacion.setEnabled(false);
            b_plan_novios.setEnabled(false);
            b_gestion_reservaciones.setEnabled(false);

        }

        if (Sesion.getDatosConfiguracion().isModoReserva()) {
            //b_gestion_reservaciones.setEnabled(false);
            //b_nueva_reservacion.setEnabled(false);
        }
        if (!VariablesAlm.getVariableAsBoolean(VariablesAlm.POS_CONFIG_FUNC_PLAN_NOVIOS)) {
            b_plan_novios.setEnabled(false);
        } else {
            if (usu != null) {
                b_plan_novios.setEnabled(false);
            } else {
                b_plan_novios.setEnabled(true);
            }
        }
    }

    /**
     * Este metodo a√±ade componentes de manera din√°mica al men√∫. S√≠mula una
     * matriz de n filas y 2 columnas a partir de unas cordenadas
     * correspondientes a la posici√≥n 0,0, determinado por las constantes BASE_X
     * y BASE_Y.
     *
     * @param comp Componente para insertar
     * @param posXRejilla Valor 0 para un boton en la posici√≥ (0,Y). Valor 1
     * para un boton en la posici√≥ (1,Y). Valor 2 para un boton doble que ocupe
     * la posici√≥n (0,Y) y (1,Y)
     * @param posYRejilla Indica la posici√≥n Y del elemento (x, posYRejilla)
     */
    private void addComponent(Component comp, int posXRejilla, int posYRejilla) {

        Integer x = BASE_X;
        Integer y = BASE_Y;

        if (posXRejilla == 1) {
            x += 180 + 5;//Desplazamiento en eje X y margen de separaci√≥n
        }

        y += 45 * posYRejilla;
        if (posXRejilla < 2) {
            add(comp, new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, 176, 40));
        } else if (posXRejilla == 2) {
            add(comp, new org.netbeans.lib.awtextra.AbsoluteConstraints(x, y, 362, 40));
        }

    }

    @Override
    public void keyTyped(KeyEvent ke) {
    }

    @Override
    public void keyPressed(KeyEvent ke) {
    }

    @Override
    public void keyReleased(KeyEvent ke) {
    }

    private void addFunctionKeys() {
        // ENTER EN LOS BOTONES
        addHotKey(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "EnterBotones", listenerEnter);

        KeyStroke esc = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        Action listeneresc = new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                b_cancelarActionPerformed(ae);
            }
        };
        addHotKey(esc, "IdentClientesc", listeneresc);

    }

    public JPrincipal getVentana_padre() {
        return ventana_padre;
    }

    public JDialog getContenedor() {
        return contenedor;
    }

    @Override
    public void iniciaFoco() {
        log.info("Iniciando Foco");
        b_menu.requestFocus();
    }

    public void cerrarVentana() {
        limpiarFormulario();
        contenedor.setVisible(false);
    }

    public void limpiarFormulario() {
    }

    public String compruebaAutorizacion(Byte operacion) throws SinPermisosException {
        log.debug("PERMISOS Combrobando Autorizaci√≥n ");
        if (Sesion.permisos.isPuede(operacion)) {
            return Sesion.getUsuario().getUsuario();
        } else {
            return crearVentanaAutorizacion(operacion);
        }
    }

    public String crearVentanaAutorizacion(Byte operacion) throws SinPermisosException {
        log.info("PERMISOS: Creando Pantalla de Autorizaci√≥n");
        preparaDimensionVentanaAutorizacion();
        v_dialog_autorizar.setLocationRelativeTo(null);
        v_dialog_autorizar.setOperacionAAutorizar(operacion);
        v_dialog_autorizar.setMensajeDefault();
        v_dialog_autorizar.setFocoInicial();
        popupActivo = v_dialog_autorizar;
        v_dialog_autorizar.setVisible(true);
        popupActivo = null;
        //  Aqui esperamos a que termine la ventana modal

        return v_dialog_autorizar.autenticacionExitosa();

    }

    public void preparaDimensionVentanaAutorizacion() {
        v_dialog_autorizar.setMinimumSize(new java.awt.Dimension(370, 360)); //442
        v_dialog_autorizar.setMaximumSize(new java.awt.Dimension(370, 360));
        v_dialog_autorizar.setPreferredSize(new java.awt.Dimension(370, 360));
    }

    private void accionMenuTarjetas() {

        if (!enAccion) {
            enAccion = true;

            this.contenedor.setVisible(false);
            enAccion = false;
            if (Sesion.getCajaActual().isCajaAbierta() && Sesion.getCajaActual().isCajaParcialAbierta()) {
                log.info("Menu() - VISTA_MENU_TARJETAS");
                ventana_padre.crearVentanaMenuTarjetas();
            } else {
                ventana_padre.crearAdvertencia("La caja esta cerrada. Ha de abrir la caja para realizar la operaci√≥n");
            }
        }
    }

    private void accionMenuPlanNovios() {
        if (b_plan_novios.isEnabled()) {
            if (!enAccion) {
                enAccion = true;
                this.contenedor.setVisible(false);
                enAccion = false;
                if (Sesion.getCajaActual().isCajaAbierta() && Sesion.getCajaActual().isCajaParcialAbierta()) {
                    log.info("Menu() - VISTA_GESTION_PLANES_NOVIOS");

                    ventana_padre.irBuscarPlanesNovio();
                } else {
                    ventana_padre.crearAdvertencia("La caja esta cerrada. Ha de abrir la caja para realizar la operaci√≥n");
                }
            }
        }
    }
}
