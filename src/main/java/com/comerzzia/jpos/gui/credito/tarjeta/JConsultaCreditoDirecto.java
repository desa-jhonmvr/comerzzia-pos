package com.comerzzia.jpos.gui.credito.tarjeta;

import com.comerzzia.jpos.gui.JPrincipal;
import com.comerzzia.jpos.gui.validation.ValidationFormException;
import com.comerzzia.jpos.servicios.credito.CreditoDirectoBean;
import com.comerzzia.jpos.gui.components.JVentanaDialogo;
import com.comerzzia.jpos.gui.credito.JOperacionesTarjeta;
import com.comerzzia.jpos.gui.validation.IFormTipoIdentificacion;
import com.comerzzia.jpos.gui.validation.IViewerValidationFormError;
import com.comerzzia.jpos.gui.validation.ValidadorBigInteger;
import com.comerzzia.jpos.gui.validation.ValidadorCedulaRuc;
import com.comerzzia.jpos.gui.validation.ValidadorTexto;
import com.comerzzia.jpos.servicios.credito.CreditoException;
import com.comerzzia.jpos.servicios.credito.CreditoNotFoundException;
import com.comerzzia.jpos.servicios.credito.CreditoServices;
import com.comerzzia.jpos.servicios.login.Sesion;
import com.comerzzia.jpos.servicios.mediospago.tarjetas.TarjetaCreditoSK;
import com.comerzzia.jpos.servicios.mediospago.tarjetas.TarjetaInvalidaException;
import es.mpsistemas.util.log.Logger;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.logging.Level;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.KeyStroke;

/**
 *
 * @author MGRI
 */
public class JConsultaCreditoDirecto extends JVentanaDialogo implements IViewerValidationFormError, IFormTipoIdentificacion {

    private static Logger log = Logger.getMLogger(JConsultaCreditoDirecto.class);
    private static final byte BUSCAR_POR_CLIENTE = 1;
    private static final byte BUSCAR_POR_TARJETA = 2;
    private static final long serialVersionUID = 1L;
    private CreditoDirectoBean credito;

    /** Creates new form JConsultaCreditoDirecto */
    public JConsultaCreditoDirecto() {
        initComponents();
        registrarEventoLeerTarjeta();
        registraEventoEnterBoton();
        addFunctionKeys();
        inicializaValidacion();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        l_total_a_pagarL = new javax.swing.JLabel();
        l_cupo_disponibleL = new javax.swing.JLabel();
        l_fecha_de_corteL = new javax.swing.JLabel();
        l_total_a_pagar = new javax.swing.JLabel();
        l_cupo_disponible = new javax.swing.JLabel();
        l_fecha_de_corte = new javax.swing.JLabel();
        l_fecha = new javax.swing.JLabel();
        l_nombre = new javax.swing.JLabel();
        t_numero_tarjeta = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_numero_cedula = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        lb_error = new javax.swing.JLabel();
        l_nombreL = new javax.swing.JLabel();
        l_status = new javax.swing.JLabel();
        l_fin_validez = new javax.swing.JLabel();
        l_fecha_fin_validez = new javax.swing.JLabel();
        lb_estado_tarjeta = new com.comerzzia.jpos.gui.components.JMultilineLabel();
        jLabel1 = new javax.swing.JLabel();
        b_volver = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_pagar = new com.comerzzia.jpos.gui.components.form.JButtonForm();

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Nombre:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Fecha:");

        jLabel3.setDisplayedMnemonic('I');
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setLabelFor(t_numero_tarjeta);
        jLabel3.setText("Tarjeta de Identificación:");

        jLabel4.setDisplayedMnemonic('c');
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setLabelFor(t_numero_cedula);
        jLabel4.setText("Nro. Cédula:");

        l_total_a_pagarL.setFont(l_total_a_pagarL.getFont().deriveFont(l_total_a_pagarL.getFont().getStyle() | java.awt.Font.BOLD, l_total_a_pagarL.getFont().getSize()+7));
        l_total_a_pagarL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        l_total_a_pagarL.setText("Total a Pagar:");

        l_cupo_disponibleL.setFont(l_cupo_disponibleL.getFont().deriveFont(l_cupo_disponibleL.getFont().getSize()+7f));
        l_cupo_disponibleL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        l_cupo_disponibleL.setText("Cupo Disponible:");

        l_fecha_de_corteL.setFont(l_fecha_de_corteL.getFont().deriveFont(l_fecha_de_corteL.getFont().getSize()+2f));
        l_fecha_de_corteL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        l_fecha_de_corteL.setText("Fecha de corte:");

        l_total_a_pagar.setFont(l_total_a_pagar.getFont().deriveFont(l_total_a_pagar.getFont().getStyle() | java.awt.Font.BOLD, l_total_a_pagar.getFont().getSize()+7));
        l_total_a_pagar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        l_total_a_pagar.setText("$ 19.90");

        l_cupo_disponible.setFont(l_cupo_disponible.getFont().deriveFont(l_cupo_disponible.getFont().getSize()+7f));
        l_cupo_disponible.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        l_cupo_disponible.setText("$ 680.10");

        l_fecha_de_corte.setFont(l_fecha_de_corte.getFont().deriveFont(l_fecha_de_corte.getFont().getSize()+2f));
        l_fecha_de_corte.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        l_fecha_de_corte.setText("30 de cada mes");

        l_fecha.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        l_fecha.setText("27-AGO-2012");

        l_nombre.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        l_nombre.setText("Gabriela Gavilanes");

        t_numero_tarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_numero_tarjetaActionPerformed(evt);
            }
        });
        t_numero_tarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_numero_tarjetaKeyTyped(evt);
            }
        });

        t_numero_cedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_numero_cedulaActionPerformed(evt);
            }
        });
        t_numero_cedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_numero_cedulaKeyTyped(evt);
            }
        });

        lb_error.setForeground(new java.awt.Color(255, 0, 0));
        lb_error.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_error.setText("Tarjeta de identificación incorrecta");
        lb_error.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        l_nombreL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        l_nombreL.setText("Nombre:");

        l_status.setFont(l_status.getFont().deriveFont(l_status.getFont().getStyle() | java.awt.Font.BOLD, l_status.getFont().getSize()+2));
        l_status.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        l_status.setText("Estado:");

        l_fin_validez.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        l_fin_validez.setText("Fecha de Caducidad:");

        l_fecha_fin_validez.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        l_fecha_fin_validez.setText("12/12/2015");

        lb_estado_tarjeta.setBackground(new java.awt.Color(0, 0, 0));
        lb_estado_tarjeta.setForeground(new java.awt.Color(255, 51, 0));
        lb_estado_tarjeta.setFocusable(false);
        lb_estado_tarjeta.setFont(lb_estado_tarjeta.getFont().deriveFont(lb_estado_tarjeta.getFont().getStyle() | java.awt.Font.BOLD, lb_estado_tarjeta.getFont().getSize()+1));
        lb_estado_tarjeta.setMaximumSize(new java.awt.Dimension(200, 70));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_error, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(l_fin_validez, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(l_nombreL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l_fecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(l_nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(l_fecha_fin_validez, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(t_numero_tarjeta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                                        .addComponent(t_numero_cedula, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(l_total_a_pagarL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(l_cupo_disponibleL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(l_fecha_de_corteL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(l_status, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_fecha_de_corte, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(l_total_a_pagar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(l_cupo_disponible, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                                    .addComponent(lb_estado_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(l_fecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(t_numero_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_numero_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_nombre)
                    .addComponent(l_nombreL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_fin_validez)
                    .addComponent(l_fecha_fin_validez))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb_error, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_total_a_pagarL)
                    .addComponent(l_total_a_pagar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_cupo_disponibleL)
                    .addComponent(l_cupo_disponible))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_fecha_de_corteL)
                    .addComponent(l_fecha_de_corte))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_status)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lb_estado_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD, jLabel1.getFont().getSize()+7));
        jLabel1.setText("CONSULTA DE SALDO DE CRÉDITO DIRECTO");

        b_volver.setText("<html><center>Volver <br/>F2</center></html>");
        b_volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_volverActionPerformed(evt);
            }
        });

        b_pagar.setText("<html><center>Pagar <br/>F9</center></html>");
        b_pagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_pagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(b_volver, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_pagar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_volver, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_pagar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void t_numero_tarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_numero_tarjetaActionPerformed
    }//GEN-LAST:event_t_numero_tarjetaActionPerformed

    private void b_volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_volverActionPerformed
        if (b_volver.isEnabled()) {
            cerrarVentana();
            JPrincipal.getInstance().crearVentanaMenuTarjetas();
        }

}//GEN-LAST:event_b_volverActionPerformed

    private void b_pagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_pagarActionPerformed
        accionAceptar();
    }//GEN-LAST:event_b_pagarActionPerformed

    private void t_numero_cedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_numero_cedulaKeyTyped
        if (evt.getKeyChar() == '\n') {
            accionBuscar(BUSCAR_POR_CLIENTE);
        }
    }//GEN-LAST:event_t_numero_cedulaKeyTyped

    private void t_numero_tarjetaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_numero_tarjetaKeyTyped
        if (evt.getKeyChar() == '\n') {
            accionBuscar(BUSCAR_POR_TARJETA);
        }
    }//GEN-LAST:event_t_numero_tarjetaKeyTyped

    private void t_numero_cedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_numero_cedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_numero_cedulaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_pagar;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_volver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel l_cupo_disponible;
    private javax.swing.JLabel l_cupo_disponibleL;
    private javax.swing.JLabel l_fecha;
    private javax.swing.JLabel l_fecha_de_corte;
    private javax.swing.JLabel l_fecha_de_corteL;
    private javax.swing.JLabel l_fecha_fin_validez;
    private javax.swing.JLabel l_fin_validez;
    private javax.swing.JLabel l_nombre;
    private javax.swing.JLabel l_nombreL;
    private javax.swing.JLabel l_status;
    private javax.swing.JLabel l_total_a_pagar;
    private javax.swing.JLabel l_total_a_pagarL;
    private javax.swing.JLabel lb_error;
    private com.comerzzia.jpos.gui.components.JMultilineLabel lb_estado_tarjeta;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_numero_cedula;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_numero_tarjeta;
    // End of variables declaration//GEN-END:variables

    @Override
    public void accionAceptar() {
        if (b_pagar.isEnabled()) {
            if (credito != null) {
                contenedor.setVisible(false);
                JOperacionesTarjeta.crearVentanaPagarCreditoDirecto(credito);
                limpiarFormulario();
            }
        }
    }

    @Override
    public void limpiarFormulario() {
        // Ponemos la fecha 
        l_fecha.setText(formateadorFechaCorta.format(new Date()));

        t_numero_cedula.setText("");
        t_numero_tarjeta.setText("");
        lb_error.setText("");
        limpiarFormularioDatosCliente();

    }

    public void iniciaVista() {
        limpiarFormulario();
        iniciaFoco();
    }

    public void iniciaFoco() {
        t_numero_tarjeta.requestFocus();
    }

    @Override
    public void accionLeerTarjetaVD() {
        try{
            TarjetaCreditoSK tarjeta;
            // Esta ventana de dialogo tiene implementada la opción de lectura de tarjeta        
            if (this.getTramaTarjeta() != null) {
                    log.debug("(accionLeerTarjetaVD) - Se ha leido la trama de la tarjeta: " + this.getTramaTarjeta());
                    tarjeta = new TarjetaCreditoSK(this.getTramaTarjeta());
                    try {
                        tarjeta.validaTarjetaCredito();
                    }
                    catch (TarjetaInvalidaException ex) {
                        lb_error.setText(ex.getMessage());
                        log.debug("(accionLeerTarjetaVD) - " + ex.getMessage());
                        return;
                    }
                    if (tarjeta !=null && !tarjeta.isErrorLecturaTarjeta()){
                        t_numero_tarjeta.setText(tarjeta.getNumero());               
                        accionBuscar(BUSCAR_POR_TARJETA);           
                    }
                    else{            
                        lb_error.setText("Ha fallado la lectura de la tarjeta");
                        log.debug("(accionLeerTarjetaVD) - Trama de tarjeta incorrecta");
                    }
            }
            else {
                lb_error.setText("Ha fallado la lectura de la tarjeta");
                log.debug("(accionLeerTarjetaVD) - No se ha leido la trama de la tarjeta");
            }
        } catch (Exception e){
            log.error("accionLeerTarjetaVD() - Error leyendo la tarjeta: "+e.getMessage(),e);
            JPrincipal.getInstance().crearError("Error leyendo banda magnética de la tarjeta, introduzca manualmente.");
        }
    }

    private void limpiarFormularioDatosCliente() {
        // Limpiamos los datos del formulario de busqueda
        credito = null;
        l_nombre.setVisible(false);
        l_nombre.setText("");
        l_nombreL.setVisible(false);
        l_fecha_fin_validez.setVisible(false);
        l_fin_validez.setVisible(false);
        l_status.setVisible(false);
        lb_estado_tarjeta.setVisible(false);
        l_cupo_disponible.setVisible(false);
        l_cupo_disponible.setText("");
        l_cupo_disponibleL.setVisible(false);
        l_fecha_de_corte.setVisible(false);
        l_fecha_de_corte.setText("");
        l_fecha_de_corteL.setVisible(false);
        l_total_a_pagar.setVisible(false);
        l_total_a_pagar.setText("");
        l_total_a_pagarL.setVisible(false);
        b_pagar.setEnabled(false);
    }

    private void accionBuscar(int tipo) {
        try {
            credito = null;
            b_pagar.setEnabled(false);
            limpiarFormularioDatosCliente();
            lb_error.setText("");

            String cedulaCliente = null;
            String numeroTarjeta = null;

            // Validamos el numero de tarjeta 16 digitos y numérico
            //if 

            if (tipo == BUSCAR_POR_CLIENTE) {
                t_numero_tarjeta.setText("");
                cedulaCliente = t_numero_cedula.getText();

                if (!Sesion.config.isModoDesarrollo()) {
                    t_numero_cedula.validar();
                }

                if (cedulaCliente.isEmpty()) {
                    lb_error.setText("Debe ingresar una cédula de cliente.");
                    return;
                }
            }
            else { // POR NUMERO TARJETA
                numeroTarjeta = t_numero_tarjeta.getText();
                t_numero_cedula.setText("");
                t_numero_tarjeta.validar();
                if (numeroTarjeta.isEmpty()) {
                    lb_error.setText("Debe ingresar un número de tarjeta.");
                    return;
                }
            }

            credito = CreditoServices.consultarCreditoDirecto(numeroTarjeta, cedulaCliente);

            // Si se identificó mediante cédulo se podrá realizar en local                                
            // Si no se lo indicamos por pantalla               
            if ((credito.getTotalAPagar() == null || credito.getFechaDeCorte() <= 0)) {
                contenedor.setAlwaysOnTop(false);
                contenedor.setModal(false);
                if (!JPrincipal.getInstance().crearVentanaConfirmacion("Cliente no encontrado por falla en la comunicación. Consulte con Atención al Cliente. Presione Aceptar para continuar con el pago.")) {
                    contenedor.setAlwaysOnTop(true);
                    contenedor.setModal(true);
                    return;
                }
                contenedor.setAlwaysOnTop(true);
                contenedor.setModal(true);
            }

            muestraEnformularioCliente(credito);
            b_pagar.setEnabled(true);
        }
        catch (ValidationFormException e) {
            lb_error.setText(e.getMessage());
            return;
        }
        catch (CreditoNotFoundException ex) {
            lb_error.setText(ex.getMessage());
        }
        catch (CreditoException e) {
            lb_error.setText("Se ha producido un error intentando recuperar los datos del sistema de crédito.");
        }
        catch (Exception ex) {
            lb_error.setText("Se ha producido un error intentando recuperar los datos del sistema de crédito.");
            log.error("accionBuscar() - Error inesperado obteniendo datos de crédito: " + ex.getMessage(), ex);
        }
    }

    private void muestraEnformularioCliente(CreditoDirectoBean credito) {
        l_nombre.setVisible(true);
        l_nombre.setText(credito.getPlastico().getCliente().getNombreYApellidos());
        l_nombreL.setVisible(true);
        l_fecha_fin_validez.setVisible(true);
        l_fecha_fin_validez.setText(credito.getPlastico().getFechaCaducidad().getString());
        l_fin_validez.setVisible(true);
        l_cupo_disponible.setVisible(true);
        l_cupo_disponible.setText("$ " + credito.getPlastico().getCupo().getCupo());
        l_cupo_disponibleL.setVisible(true);
        l_fecha_de_corte.setVisible(true);
        if (credito.getFechaDeCorte() > 0) {
            l_fecha_de_corte.setText("" + credito.getFechaDeCorte() + " de cada mes");
        }
        else {
            l_fecha_de_corte.setText("---");
        }
        l_fecha_de_corteL.setVisible(true);
        l_total_a_pagar.setVisible(true);
        if (credito.getTotalAPagar() != null) {
            l_total_a_pagar.setText("$ " + credito.getTotalAPagar().toString());
        }
        else {
            l_total_a_pagar.setText("---");
        }
        l_total_a_pagarL.setVisible(true);
        l_status.setVisible(true);
//        l_estado_tarjeta.setVisible(true);
        lb_estado_tarjeta.setVisible(true);
        if(credito.getPlastico().getEstado() != null){
//            l_estado_tarjeta.setText(credito.getPlastico().getEstado().getEstadoCta());
            lb_estado_tarjeta.setText(credito.getPlastico().getEstado().getEstadoCta());
        }
        
        t_numero_tarjeta.setText(credito.getPlastico().getNumeroTarjeta());
        t_numero_cedula.setText(credito.getPlastico().getCedulaCliente());
    }

    private void addFunctionKeys() {
        KeyStroke f9 = KeyStroke.getKeyStroke(KeyEvent.VK_F9, 0);
        Action listenerf9 = new AbstractAction() {

            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent ae) {
                accionAceptar();
            }
        };
        addHotKey(f9, "IdentClientF9", listenerf9);

        KeyStroke f2 = KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0);
        Action listenerf2 = new AbstractAction() {

            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent ae) {
                b_volverActionPerformed(ae);
            }
        };
        addHotKey(f2, "IdentClientF12", listenerf2);
    }

    private void inicializaValidacion() {

        t_numero_cedula.addValidador(new ValidadorCedulaRuc(this), this);
        t_numero_tarjeta.addValidador(new ValidadorTexto(16, 16), this);
        t_numero_tarjeta.addValidador(new ValidadorBigInteger(), this);
    }

    @Override
    public void addError(ValidationFormException e) {
        lb_error.setText(e.getMessage());
    }

    @Override
    public void clearError() {
    }

    @Override
    public String getTipoIdentificacion() {
        return "CED";
    }

    public void consultaPorCredito(CreditoDirectoBean datosCredito) {
        t_numero_tarjeta.setText(datosCredito.getPlastico().getNumeroTarjeta());       
        accionBuscar(BUSCAR_POR_TARJETA);
    }
}
