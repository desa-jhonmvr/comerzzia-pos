/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * JReimpresionFactura.java
 *
 * Created on 11-mar-2014, 16:47:03
 */
package com.comerzzia.jpos.gui.reimpresion.tipos;

import com.comerzzia.jpos.gui.JPrincipal;
import com.comerzzia.jpos.gui.components.JVentanaDialogo;
import com.comerzzia.jpos.gui.validation.IValidableForm;
import com.comerzzia.jpos.gui.validation.IViewerValidationFormError;
import com.comerzzia.jpos.gui.validation.ValidadorObligatoriedad;
import com.comerzzia.jpos.gui.validation.ValidadorTexto;
import com.comerzzia.jpos.gui.validation.ValidationFormException;
import com.comerzzia.jpos.persistencia.print.documentos.DocumentosBean;
import com.comerzzia.jpos.persistencia.reservaciones.reserva.ReservaBean;
import com.comerzzia.jpos.servicios.core.contadores.ServicioContadores;
import com.comerzzia.jpos.servicios.core.variables.VariablesAlm;
import com.comerzzia.jpos.servicios.login.Sesion;
import com.comerzzia.jpos.servicios.print.PrintServices;
import com.comerzzia.jpos.servicios.print.documentos.DocumentoException;
import com.comerzzia.jpos.servicios.print.documentos.DocumentosService;
import com.comerzzia.jpos.servicios.reservaciones.ReservaNotFoundException;
import com.comerzzia.jpos.servicios.reservaciones.ReservacionesServicios;
import com.comerzzia.jpos.servicios.reservaciones.ReservasException;
import com.comerzzia.jpos.servicios.reservaciones.plannovio.PlanNovioServices;
import es.mpsistemas.util.log.Logger;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;

/**
 *
 * @author SMLM
 */
public class JReimpresionDocumentoConAbono extends JVentanaDialogo implements IViewerValidationFormError {

    private static Logger log = Logger.getMLogger(JReimpresionDocumentoConAbono.class);
    List<IValidableForm> formulario;
    String tipo = null;

    /**
     * Creates new form JReimpresionFactura
     */
    public JReimpresionDocumentoConAbono() {
        super();

        try {
            formulario = new LinkedList<IValidableForm>();
            initComponents();

            //creamos la validación
            inicializaValidacion();
            //creamos el formulario
            crearFormulario();

            t_factura1.setText(VariablesAlm.getVariable(VariablesAlm.COD_ALMACEN));
            registraEventoEnterBoton();
        } catch (Exception e) {

        }
    }

    /**
     * Creates new form JReimpresionFactura
     */
    public JReimpresionDocumentoConAbono(String tipo) {
        super();
        this.tipo = tipo;
        try {
            formulario = new LinkedList<IValidableForm>();
            initComponents();

            //creamos la validación
            inicializaValidacion();
            //creamos el formulario
            crearFormulario();

            if (tipo.equals(DocumentosBean.ABONO_RESERVA)) {
                l_documento.setText("Abono de Reserva: ");
            }
            if (tipo.equals(DocumentosBean.ABONO_PLAN_NOVIO)) {
                l_documento.setText("Abono de Plan Novio: ");
            }

            t_factura1.setText(VariablesAlm.getVariable(VariablesAlm.COD_ALMACEN));
            registraEventoEnterBoton();
        } catch (Exception e) {

        }
    }

    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sesion1 = new com.comerzzia.jpos.servicios.login.Sesion();
        l_documento = new javax.swing.JLabel();
        t_factura1 = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_factura3 = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        b_cancelar = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_previsualizar = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        lb_error = new javax.swing.JLabel();
        b_aceptar1 = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        jLabel7 = new javax.swing.JLabel();
        t_factura4 = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        l_factura_cabecera1 = new javax.swing.JLabel();
        factura = new javax.swing.JLabel();
        chkVoucher = new javax.swing.JCheckBox();

        setMaximumSize(new java.awt.Dimension(520,270));
        setMinimumSize(new java.awt.Dimension(520,270));

        l_documento.setDisplayedMnemonic('f');
        l_documento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        t_factura1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        t_factura3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_factura3.setNextFocusableComponent(t_factura4);
        t_factura3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_factura3ActionPerformed(evt);
            }
        });

        jLabel4.setText("-");

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel6.setText("REIMPRESIÓN");

        b_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/cancelar.png"))); // NOI18N
        b_cancelar.setText("Cancelar");
        b_cancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_cancelar.setNextFocusableComponent(t_factura1);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        b_previsualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/aceptar.png"))); // NOI18N
        b_previsualizar.setMnemonic('P');
        b_previsualizar.setText("Previsualizar");
        b_previsualizar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_previsualizar.setNextFocusableComponent(b_aceptar1);
        b_previsualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_previsualizarActionPerformed(evt);
            }
        });

        lb_error.setForeground(new java.awt.Color(204, 0, 0));

        b_aceptar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/aceptar.png"))); // NOI18N
        b_aceptar1.setMnemonic('a');
        b_aceptar1.setText("Aceptar");
        b_aceptar1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        b_aceptar1.setNextFocusableComponent(b_cancelar);
        b_aceptar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_aceptar1ActionPerformed(evt);
            }
        });

        jLabel7.setText("/");

        t_factura4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_factura4.setNextFocusableComponent(b_previsualizar);

        l_factura_cabecera1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        l_factura_cabecera1.setText("Última Documento:");
        l_factura_cabecera1.setFocusable(false);

        factura.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        factura.setForeground(new java.awt.Color(0, 0, 204));
        factura.setText("ID");
        factura.setFocusable(false);

        chkVoucher.setText("VOUCHER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(l_factura_cabecera1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(factura, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_error, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(b_previsualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(b_aceptar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 41, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(l_documento, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkVoucher)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(t_factura1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_factura3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_factura4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_factura_cabecera1)
                    .addComponent(factura, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(lb_error, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(l_documento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(t_factura3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(t_factura4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(t_factura1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(chkVoucher)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_previsualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_aceptar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        accionCancelar();
}//GEN-LAST:event_b_cancelarActionPerformed

    private void b_previsualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_previsualizarActionPerformed
        accionPrevisualizar();
}//GEN-LAST:event_b_previsualizarActionPerformed

    private void b_aceptar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_aceptar1ActionPerformed
        accionAceptar();
    }//GEN-LAST:event_b_aceptar1ActionPerformed

    private void t_factura3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_factura3ActionPerformed
        if (tipo.equals(DocumentosBean.ABONO_RESERVA)) {
            try {

                ReservaBean respuesta = ReservacionesServicios.consultaById(new BigDecimal(t_factura3.getText()).toBigInteger());
                Long valorfinal = ReservacionesServicios.consultaSiguienteIdAbono(respuesta.getUidReservacion(), true);
                if (valorfinal > 0) {
                    valorfinal = valorfinal - 1;
                }

                factura.setText(Sesion.getTienda().getCodalm() + "-" + respuesta.getCodReservacion() + "-" + valorfinal);
                l_documento.setText("Abono de Reserva: ");
            } catch (ReservasException ex) {
                java.util.logging.Logger.getLogger(JReimpresionDocumentoConAbono.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ReservaNotFoundException ex) {
                factura.setText("");
                java.util.logging.Logger.getLogger(JReimpresionDocumentoConAbono.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (tipo.equals(DocumentosBean.ABONO_PLAN_NOVIO)) {
            try {

                BigInteger parametro = new BigInteger(t_factura3.getText().trim());

                String result = getIdPNAbono(parametro);
                factura.setText(result);
                if (result != "-") {
                    t_factura4.setText(result.split("-")[2]);
                }

                l_documento.setText("Abono de Plan Novio: ");
            } catch (Exception ex) {
                factura.setText("-");
                java.util.logging.Logger.getLogger(JReimpresionDocumentoConAbono.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_t_factura3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_aceptar1;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_cancelar;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_previsualizar;
    private javax.swing.JCheckBox chkVoucher;
    private javax.swing.JLabel factura;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel l_documento;
    private javax.swing.JLabel l_factura_cabecera1;
    private javax.swing.JLabel lb_error;
    private com.comerzzia.jpos.servicios.login.Sesion sesion1;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_factura1;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_factura3;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_factura4;
    // End of variables declaration//GEN-END:variables

    @Override
    public void accionAceptar() {
        try {
            validarFormulario();
            DocumentosBean documentoBean = DocumentosService.consultarDocByUniqueKey(this.tipo, t_factura1.getText(), DocumentosBean.CODCAJA, t_factura3.getText().trim() + "/" + t_factura4.getText().trim());
            if (documentoBean != null) {
                if (tipo.equals(DocumentosBean.ABONO_RESERVA) || tipo.equals(DocumentosBean.ABONO_PLAN_NOVIO)) {
                    PrintServices.getInstance().reimpresionComprobanteAbono(documentoBean, false, chkVoucher.isSelected());
                }
            } else {
                this.contenedor.setVisible(false);
                JPrincipal.getInstance().crearAdvertencia("No se han encontrado tickets para los datos introducidos.");
                this.contenedor.setVisible(true);
            }
        } catch (ValidationFormException ex) {
            addError(ex);
        } catch (DocumentoException ex) {
            addError(ex);
        }
    }

    public void accionPrevisualizar() {
        try {
            validarFormulario();
            DocumentosBean documentoBean = DocumentosService.consultarDocByUniqueKey(this.tipo, t_factura1.getText(), DocumentosBean.CODCAJA, t_factura3.getText().trim() + "/" + t_factura4.getText().trim());
            if (documentoBean != null) {
                if (tipo.equals(DocumentosBean.ABONO_RESERVA) || tipo.equals(DocumentosBean.ABONO_PLAN_NOVIO)) {
                    PrintServices.getInstance().reimpresionComprobanteAbono(documentoBean, true, chkVoucher.isSelected());
                }
            } else {
                this.contenedor.setVisible(false);
                JPrincipal.getInstance().crearAdvertencia("No se han encontrado tickets para los datos introducidos.");
                this.contenedor.setVisible(true);
            }
        } catch (ValidationFormException ex) {
            addError(ex);
        } catch (DocumentoException ex) {
            addError(ex);
        }
    }

    @Override
    public void limpiarFormulario() {

        for (IValidableForm elem : formulario) {
            elem.setValidacionHabilitada(false);
        }

        for (IValidableForm elem : formulario) {
            elem.setText("");
        }

        this.t_factura3.requestFocus();

        for (IValidableForm elem : formulario) {
            elem.setValidacionHabilitada(true);
        }

        this.lb_error.setText("");
    }

    private void crearFormulario() {
        // Elementos del formulario susceptibles de validarse o resetearse 
        formulario.add(t_factura3);
        formulario.add(t_factura4);
    }

    @Override
    public void addError(ValidationFormException e) {
        lb_error.setText(e.getMessage());
    }

    public void addError(DocumentoException e) {
        lb_error.setText(e.getMessage());
    }

    @Override
    public void clearError() {
        lb_error.setText("");
    }

    private void inicializaValidacion() {
        t_factura1.addValidador(new ValidadorObligatoriedad(), this);
        t_factura1.addValidador(new ValidadorTexto(3, true), this);
        t_factura3.addValidador(new ValidadorObligatoriedad(), this);
        t_factura4.addValidador(new ValidadorObligatoriedad(), this);

    }

    private void validarFormulario() throws ValidationFormException {
        for (IValidableForm e : formulario) {
            try {
                e.validar();
            } catch (ValidationFormException ex) {
                throw ex;
            }
        }
    }

    public String getIdPNAbono(BigInteger idPlan) {
        String result = Sesion.getTienda().getCodalm() + "-" + idPlan + "-";
        try {
            if (PlanNovioServices.consultaMaximoIdAbonoPorPlan(idPlan) == new BigInteger("0")) {
                result = "-";
            } else {
                result += String.valueOf(PlanNovioServices.consultaMaximoIdAbonoPorPlan(idPlan));
            }

        } catch (Exception e) {
        }
        return result;
    }

    public void iniciaVista() {
        limpiarFormulario();
        t_factura3.requestFocus();

        if (tipo.equals(DocumentosBean.ABONO_RESERVA)) {
            try {
                Long valor = ServicioContadores.obtenercontadorReimpresion(ServicioContadores.CONTADOR_RESERVA);
                ReservaBean respuesta = ReservacionesServicios.consultaById(new BigDecimal(valor).toBigInteger());
                Long valorfinal = ReservacionesServicios.consultaSiguienteIdAbono(respuesta.getUidReservacion(), true);
                valorfinal = valorfinal - 1;
                factura.setText(Sesion.getTienda().getCodalm() + "-" + valor + "-" + valorfinal);
                l_documento.setText("Abono de Reserva: ");
            } catch (ReservasException ex) {
                java.util.logging.Logger.getLogger(JReimpresionDocumentoConAbono.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ReservaNotFoundException ex) {
                java.util.logging.Logger.getLogger(JReimpresionDocumentoConAbono.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tipo.equals(DocumentosBean.ABONO_PLAN_NOVIO)) {
            l_documento.setText("Abono de Plan Novio: ");

            if (t_factura3.getText().trim() != "") {

                try {
                    BigInteger parametro = null;
                    parametro = new BigInteger(t_factura3.getText().trim());
                    String result = getIdPNAbono(parametro);
                    factura.setText(result);
                    if (result != "-") {
                        t_factura4.setText(result.split("-")[2]);
                    }
                } catch (Exception e) {
                    factura.setText("-");
                }

            }

        }

        t_factura1.setText(VariablesAlm.getVariable(VariablesAlm.COD_ALMACEN));

        b_previsualizar.setVisible(false);
    }

    @Override
    public void accionLeerTarjetaVD() {
    }

}
