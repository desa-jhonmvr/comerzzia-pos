/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * JSolicitarInformaciónPanel.java
 *
 * Created on 12-ago-2011, 12:53:47
 */
package com.comerzzia.jpos.gui;

import com.comerzzia.jpos.gui.components.JPanelImagenFondo;
import com.comerzzia.jpos.servicios.login.PrimeraFirmaException;
import com.comerzzia.jpos.servicios.login.InvalidLoginException;
import com.comerzzia.jpos.servicios.login.LoginException;
import com.comerzzia.jpos.servicios.login.Sesion;
import com.comerzzia.jpos.servicios.core.permisos.SinPermisosException;
import com.comerzzia.jpos.servicios.tramas.ParserTramaException;
import com.comerzzia.jpos.servicios.tramas.TramaTarjetaIdentificacion;
import es.mpsistemas.util.log.Logger;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 *
 * @author MGRI
 */
public class JSolicitarInformaciónPanel extends JPanelImagenFondo {

    private static final Logger log = Logger.getMLogger(JSolicitarInformaciónPanel.class);
    private byte operacionAAutorizar;
    private boolean resultado = false;
    private String usuarioAutorizador = "";
    private JSolicitarAutorizacionVentana contenedor;

    /**
     * Creates new form JSolicitarInformaciónPanel
     */
    public JSolicitarInformaciónPanel() {
        super();
        initComponents();
        addFuntionKeys();
        registraEventoEnterBoton();
        registrarEventoLeerTarjeta();
        registrarEventoFinLeerTarjeta();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        l_error1 = new javax.swing.JLabel();
        l_mensaje = new javax.swing.JLabel();
        l_error3 = new javax.swing.JLabel();
        i_error = new javax.swing.JLabel();
        t_usuario = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        l_error2 = new javax.swing.JLabel();
        b_ok = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        b_cancelar = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        l_error = new javax.swing.JLabel();
        t_password = new com.comerzzia.jpos.gui.components.form.JPasswordFieldForm();
        t_identificarUsuario = new javax.swing.JTextField();

        setMaximumSize(new java.awt.Dimension(350, 320));
        setMinimumSize(new java.awt.Dimension(350, 320));
        setPreferredSize(new java.awt.Dimension(350, 320));

        l_error1.setBackground(new java.awt.Color(204, 255, 255));
        l_error1.setFont(new java.awt.Font("Comic Sans MS", 0, 14));
        l_error1.setText("Introduzca Usuario Autorizado :");

        l_mensaje.setBackground(new java.awt.Color(204, 255, 255));
        l_mensaje.setText("No tiene Permisos para realizar la operación");

        l_error3.setBackground(new java.awt.Color(204, 255, 255));
        l_error3.setDisplayedMnemonic('u');
        l_error3.setLabelFor(t_usuario);
        l_error3.setText("Usuario :");

        i_error.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/mensajes/sinPermisos_p.png"))); // NOI18N

        t_usuario.setFont(new java.awt.Font("sansserif", 0, 14));
        t_usuario.setName("user"); // NOI18N
        t_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_usuarioActionPerformed(evt);
            }
        });

        l_error2.setBackground(new java.awt.Color(204, 255, 255));
        l_error2.setDisplayedMnemonic('c');
        l_error2.setLabelFor(t_password);
        l_error2.setText("Contraseña :");

        b_ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/aceptar.png"))); // NOI18N
        b_ok.setMnemonic('a');
        b_ok.setText("Aceptar");
        b_ok.setFont(new java.awt.Font("Tahoma", 0, 18));
        b_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_okActionPerformed(evt);
            }
        });

        b_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/comerzzia/jpos/imagenes/iconos/cancelar.png"))); // NOI18N
        b_cancelar.setText("Cancelar");
        b_cancelar.setFont(new java.awt.Font("Tahoma", 0, 18));
        b_cancelar.setNextFocusableComponent(t_usuario);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        l_error.setForeground(new java.awt.Color(255, 51, 51));
        l_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        t_password.setMinimumSize(new java.awt.Dimension(8, 27));
        t_password.setPreferredSize(new java.awt.Dimension(8, 27));
        t_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_passwordActionPerformed(evt);
            }
        });

        t_identificarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_identificarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(i_error)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_mensaje, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                    .addComponent(l_error1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(l_error, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l_error2)
                                    .addComponent(l_error3))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(t_password, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(t_usuario, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(t_identificarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(b_ok, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(i_error, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(l_mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(l_error1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_error3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_error2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(l_error, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(131, 131, 131)
                .addComponent(t_identificarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_okActionPerformed

        try {
            l_error.setText("");
            Sesion.autenticaOperacion(t_usuario.getText(), t_password.getText(), operacionAAutorizar);
            resultado = true;
            usuarioAutorizador = t_usuario.getText();
            getContenedor().setVisible(false);
            t_usuario.setText("");
            t_password.setText("");
        } catch (PrimeraFirmaException ex) {
            l_error.setText("Usuario ya tiene la primera Firma o la primera Firma no es de un Administrador ");
        } catch (InvalidLoginException ex) {
            l_error.setText("Autenticación no valida");
        } catch (LoginException ex) {
            l_error.setText("No se pudo realizar la autenticación");
        } catch (SinPermisosException ex) {
            l_error.setText("<html>El usuario logueado no tiene permisos <P>para realizar la operación</html>");
        }

}//GEN-LAST:event_b_okActionPerformed

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        this.listenerList = null;
        l_error.setText("");
        t_usuario.setText("");
        t_password.setText("");
        resultado = false;
        getContenedor().setVisible(false);
}//GEN-LAST:event_b_cancelarActionPerformed

private void t_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_usuarioActionPerformed
    b_okActionPerformed(evt);
}//GEN-LAST:event_t_usuarioActionPerformed

private void t_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_passwordActionPerformed
    b_okActionPerformed(evt);
}//GEN-LAST:event_t_passwordActionPerformed

private void t_identificarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_identificarUsuarioActionPerformed

}//GEN-LAST:event_t_identificarUsuarioActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_cancelar;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_ok;
    private javax.swing.JLabel i_error;
    private javax.swing.JLabel l_error;
    private javax.swing.JLabel l_error1;
    private javax.swing.JLabel l_error2;
    private javax.swing.JLabel l_error3;
    private javax.swing.JLabel l_mensaje;
    private javax.swing.JTextField t_identificarUsuario;
    private com.comerzzia.jpos.gui.components.form.JPasswordFieldForm t_password;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_usuario;
    // End of variables declaration//GEN-END:variables

    public void b_cancelar(java.awt.event.ActionEvent evt) {
        this.b_cancelarActionPerformed(evt);
    }

    public byte getOperacionAAutorizar() {
        return operacionAAutorizar;
    }

    public void setOperacionAAutorizar(byte operacionAAutorizar) {
        this.operacionAAutorizar = operacionAAutorizar;
        resultado = false;
    }

    public boolean isResultado() {
        return resultado;
    }

    public String getUsuarioAutorizador() {
        return usuarioAutorizador;
    }

    public JSolicitarAutorizacionVentana getContenedor() {
        return contenedor;
    }

    public void setContenedor(JSolicitarAutorizacionVentana contenedor) {
        this.contenedor = contenedor;
    }

    @Override
    protected void addHotKey(KeyStroke keyStroke, String inputActionKey, Action listener) {
        ActionMap actionMap = this.getActionMap();
        InputMap inputMap = this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(keyStroke, inputActionKey);
        actionMap.put(inputActionKey, listener);
    }

    private void addFuntionKeys() {
        KeyStroke esc = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        Action listeneresc = new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                b_cancelarActionPerformed(ae);
            }
        };
        addHotKey(esc, "IdentClientesc", listeneresc);
    }

    public void setFocoInicial() {
        t_usuario.requestFocus();
    }

    private void accionLeerTarjetaUsu() {
        t_identificarUsuario.requestFocus();
    }

    private void accionFinLecturaTarjetaUsu() {
        try {
            // LEER LA TARJETA
            TramaTarjetaIdentificacion tident = new TramaTarjetaIdentificacion(t_identificarUsuario.getText());
            t_identificarUsuario.setText("");
            t_identificarUsuario.requestFocus();
            accionLoginTarjeta(tident);
        } catch (ParserTramaException ex) {
            t_identificarUsuario.setText("");
            t_identificarUsuario.requestFocus();
            log.error(ex.getMessage());
            l_error.setText("Error leyendo tarjeta");
            t_usuario.requestFocus();
        }
    }

    public Action listenerTarjeta = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent act) {
            accionLeerTarjetaUsu();
        }
    };

    public Action listenerFinLecturaTarjeta = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent act) {
            accionFinLecturaTarjetaUsu();
        }
    };

    public void registrarEventoLeerTarjeta() {
        KeyStroke keyEnter = KeyStroke.getKeyStroke(KeyEvent.VK_5, InputEvent.SHIFT_DOWN_MASK); //% es SHIFT + 5
        addHotKey(keyEnter, "LecturaTarjeta", listenerTarjeta);
    }

    public void registrarEventoFinLeerTarjeta() {
        KeyStroke keyEnter = KeyStroke.getKeyStroke(KeyEvent.VK_Y, InputEvent.ALT_DOWN_MASK); //10 es CTRL + ALT
        addHotKey(keyEnter, "finLecturaTarjeta", listenerFinLecturaTarjeta);
    }

    private void accionLoginTarjeta(TramaTarjetaIdentificacion tident) {
        try {
            l_error.setText("");
            usuarioAutorizador = Sesion.autenticaOperacion(tident.getIdUsuario(), operacionAAutorizar);
            resultado = true;
            getContenedor().setVisible(false);
            t_usuario.setText("");
            t_password.setText("");
        } catch (NullPointerException ex) {
            //contenedor.
        } catch (InvalidLoginException ex) {
            l_error.setText("Autenticación no valida");
        } catch (LoginException ex) {
            l_error.setText("No se pudo realizar la autenticación");
        } catch (SinPermisosException ex) {
            l_error.setText("<html>El usuario logueado no tiene permisos <P>para realizar la operación</html>");
        }
    }

    void setMensajeDefault() {
        l_mensaje.setText("No tiene Permisos para realizar la operación");
        l_mensaje.setForeground(Color.BLACK);
    }

    void setMensaje(String mensaje) {
        l_mensaje.setText(mensaje);
        l_mensaje.setForeground(Color.RED);
    }

}
