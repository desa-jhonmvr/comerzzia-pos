/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JMostrarCliente.java
 *
 * Created on 06-mar-2014, 11:50:19
 */
package com.comerzzia.jpos.gui.clientes;

import com.comerzzia.jpos.entity.db.Cliente;
import com.comerzzia.jpos.gui.IVista;
import com.comerzzia.jpos.gui.JPrincipal;
import com.comerzzia.jpos.gui.clientes.modelos.BonoClientesCellRenderer;
import com.comerzzia.jpos.gui.clientes.modelos.BonoClientesTableModel;
import com.comerzzia.jpos.gui.clientes.modelos.FacturaClientesCellRenderer;
import com.comerzzia.jpos.gui.clientes.modelos.FacturaClientesTableModel;
import com.comerzzia.jpos.gui.clientes.modelos.GiftCardClientesCellRenderer;
import com.comerzzia.jpos.gui.clientes.modelos.GiftCardClientesTableModel;
import com.comerzzia.jpos.gui.clientes.modelos.NotaCreditoClientesCellRenderer;
import com.comerzzia.jpos.gui.clientes.modelos.NotaCreditoClientesTableModel;
import com.comerzzia.jpos.gui.clientes.modelos.ReciboClientesCellRenderer;
import com.comerzzia.jpos.gui.clientes.modelos.ReciboClientesTableModel;
import com.comerzzia.jpos.gui.clientes.modelos.ReservaClientesCellRenderer;
import com.comerzzia.jpos.gui.clientes.modelos.ReservaClientesTableModel;
import com.comerzzia.jpos.gui.components.JPanelImagenFondo;
import com.comerzzia.jpos.gui.components.form.JTextFieldForm;
import com.comerzzia.jpos.gui.validation.IViewerValidationFormError;
import com.comerzzia.jpos.gui.validation.ValidadorDecimal;
import com.comerzzia.jpos.gui.validation.ValidadorFecha;
import com.comerzzia.jpos.gui.validation.ValidadorNumTransaccion;
import com.comerzzia.jpos.gui.validation.ValidadorTexto;
import com.comerzzia.jpos.gui.validation.ValidationFormException;
import com.comerzzia.jpos.persistencia.print.documentos.DocumentosBean;
import com.comerzzia.jpos.persistencia.print.documentos.impresos.DocumentosImpresosBean;
import com.comerzzia.jpos.servicios.core.variables.Variables;
import com.comerzzia.jpos.servicios.print.PrintServices;
import com.comerzzia.jpos.servicios.print.documentos.DocumentoException;
import com.comerzzia.jpos.servicios.print.documentos.DocumentosService;
import com.comerzzia.jpos.servicios.print.documentos.ParametrosDocumentos;
import com.comerzzia.util.numeros.bigdecimal.Numero;
import com.comerzzia.util.swing.acciones.Acciones;
import es.mpsistemas.util.fechas.Fecha;
import es.mpsistemas.util.log.Logger;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.math.BigDecimal;
import java.net.URL;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;

/**
 *
 * @author SMLM
 */
public class JMostrarCliente extends JPanelImagenFondo implements IVista, IViewerValidationFormError {
    
    private static Logger log = Logger.getMLogger(JMostrarCliente.class);
    private JPrincipal ventana_padre;
    private Cliente cliente;
    private List<DocumentosBean> lista;

    public JMostrarCliente(Cliente cliente){
        this.cliente=cliente;
        ventana_padre = JPrincipal.getInstance();
        try {
            String prefijo = Variables.getVariable(Variables.POS_UI_SKIN);
            URL myurl = this.getClass().getResource("/skin/" + prefijo + "/" + prefijo + "_consulta_clientes.png");

            this.setImagenFondo((Image) ImageIO.read(new File(myurl.getPath())));
        }
        catch (Exception ex) {
        }
        initComponents();
        iniciaVista();
        t_fecha_inicial.addValidador(new ValidadorFecha(), this);
        t_fecha_final.addValidador(new ValidadorFecha(), this);
        t_observaciones.addValidador(new ValidadorTexto(255), this);
        t_monto.addValidador(new ValidadorDecimal(new BigDecimal(Integer.MAX_VALUE), BigDecimal.ZERO, 2), this);
        lista = new ArrayList<DocumentosBean>();
        t_num_transaccion.addValidador(new ValidadorNumTransaccion((String) c_tipo.getSelectedItem()), this);
        crearLabelFormato();
        
        addFunctionKeys();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        l_RUC = new javax.swing.JLabel();
        l_nombre = new javax.swing.JLabel();
        l_apellido = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        l_dirdom = new javax.swing.JLabel();
        l_teldom = new javax.swing.JLabel();
        l_dirtra = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        l_email = new javax.swing.JLabel();
        l_teltra = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        l_celular = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        b_Consultar = new javax.swing.JButton();
        c_estado = new javax.swing.JComboBox();
        t_vendedor = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_monto = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_fecha_inicial = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        t_fecha_final = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_observaciones = new com.comerzzia.jpos.gui.components.form.JTextAreaForm();
        c_operacion = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        c_tipo = new javax.swing.JComboBox();
        b_menu_ppal = new com.comerzzia.jpos.gui.components.form.JButtonForm();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_table = new javax.swing.JTable();
        t_numeroEnc = new javax.swing.JLabel();
        t_promedio = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        t_num_transaccion = new com.comerzzia.jpos.gui.components.form.JTextFieldForm();
        l_formato = new javax.swing.JLabel();
        lb_error = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(32767, 25000));

        jLabel1.setFont(jLabel1.getFont().deriveFont((float)18));
        jLabel1.setText("Historial Clientes");
        jLabel1.setFocusable(false);

        jPanel1.setOpaque(false);

        l_RUC.setFont(l_RUC.getFont());
        l_RUC.setForeground(new java.awt.Color(51, 153, 255));

        l_nombre.setFont(l_nombre.getFont());
        l_nombre.setForeground(new java.awt.Color(51, 153, 255));

        l_apellido.setForeground(new java.awt.Color(51, 153, 255));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Apellidos:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Nombres:");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("CC/RUC/Pasaporte:");

        l_dirdom.setFont(l_dirdom.getFont());
        l_dirdom.setForeground(new java.awt.Color(51, 153, 255));

        l_teldom.setFont(l_teldom.getFont());
        l_teldom.setForeground(new java.awt.Color(51, 153, 255));

        l_dirtra.setFont(l_dirtra.getFont());
        l_dirtra.setForeground(new java.awt.Color(51, 153, 255));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Dirección Trabajo:");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Tlfno Domicilio:");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Dirección Domicilio:");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Email:");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Celular:");

        l_email.setFont(l_email.getFont().deriveFont(l_email.getFont().getSize()-1f));
        l_email.setForeground(new java.awt.Color(51, 153, 255));

        l_teltra.setFont(l_teltra.getFont());
        l_teltra.setForeground(new java.awt.Color(51, 153, 255));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Tlfno Trabajo:");

        l_celular.setFont(l_celular.getFont());
        l_celular.setForeground(new java.awt.Color(51, 153, 255));

        jPanel2.setOpaque(false);

        jLabel13.setDisplayedMnemonic('I');
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setLabelFor(t_fecha_inicial);
        jLabel13.setText("Fecha Inicial:");

        jLabel14.setDisplayedMnemonic('V');
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setLabelFor(t_vendedor);
        jLabel14.setText("Vendedor:");

        jLabel15.setDisplayedMnemonic('M');
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setLabelFor(t_monto);
        jLabel15.setText("Monto:");

        jLabel16.setDisplayedMnemonic('F');
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setLabelFor(t_fecha_final);
        jLabel16.setText("Fecha Final:");

        jLabel17.setDisplayedMnemonic('E');
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setLabelFor(c_estado);
        jLabel17.setText("Estado:");

        jLabel18.setDisplayedMnemonic('O');
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setLabelFor(t_observaciones);
        jLabel18.setText("Observación:");

        b_Consultar.setMnemonic('C');
        b_Consultar.setText("Consultar");
        b_Consultar.setNextFocusableComponent(t_table);
        b_Consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_ConsultarActionPerformed(evt);
            }
        });

        c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Anulado" }));
        c_estado.setSelectedItem(' ');
        c_estado.setNextFocusableComponent(t_observaciones);
        c_estado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c_estadoKeyTyped(evt);
            }
        });

        t_vendedor.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        t_vendedor.setNextFocusableComponent(t_monto);
        t_vendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_vendedorKeyTyped(evt);
            }
        });

        t_monto.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        t_monto.setNextFocusableComponent(c_operacion);
        t_monto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_montoKeyTyped(evt);
            }
        });

        t_fecha_inicial.setNextFocusableComponent(t_fecha_final);
        t_fecha_inicial.setPreferredSize(new java.awt.Dimension(8, 27));
        t_fecha_inicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_fecha_inicialKeyTyped(evt);
            }
        });

        t_fecha_final.setNextFocusableComponent(t_vendedor);
        t_fecha_final.setPreferredSize(new java.awt.Dimension(8, 27));
        t_fecha_final.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_fecha_finalKeyTyped(evt);
            }
        });

        t_observaciones.setColumns(20);
        t_observaciones.setRows(5);
        t_observaciones.setNextFocusableComponent(t_num_transaccion);
        t_observaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_observacionesKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(t_observaciones);

        c_operacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "%", "<=", "<", ">", ">=" }));
        c_operacion.setNextFocusableComponent(c_tipo);
        c_operacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c_operacionesKeyTyped(evt);
            }
        });

        jLabel2.setDisplayedMnemonic('D');
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setLabelFor(c_tipo);
        jLabel2.setText("Tipo Documento:");

        c_tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Factura", "Notas de Crédito", "Pagos de Créditos Directos", "Pagos de Créditos Temporales", "Reservaciones", "Plan Novio", "Recibo de Abono de Reservación", "Recibo de Abono de Plan Novio", "GiftCard", "Bono Efectivo" }));
        c_tipo.setNextFocusableComponent(c_estado);
        c_tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_tipoActionPerformed(evt);
            }
        });
        c_tipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c_tipoKeyTyped(evt);
            }
        });

        b_menu_ppal.setText("<html><center>Menú Principal <br/>F12</center></html>");
        b_menu_ppal.setMargin(new java.awt.Insets(2, 9, 2, 9));
        b_menu_ppal.setNextFocusableComponent(t_fecha_inicial);
        b_menu_ppal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_menu_ppalActionPerformed(evt);
            }
        });

        t_table.setNextFocusableComponent(b_menu_ppal);
        t_table.setOpaque(false);
        t_table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        t_table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_tableKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(t_table);

        jLabel19.setDisplayedMnemonic('N');
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setLabelFor(t_num_transaccion);
        jLabel19.setText("Num Transaccón:");

        t_num_transaccion.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        t_num_transaccion.setNextFocusableComponent(b_Consultar);
        t_num_transaccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_num_transaccionKeyTyped(evt);
            }
        });

        l_formato.setForeground(new java.awt.Color(51, 153, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addGap(32, 32, 32)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(28, 28, 28)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(t_vendedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(t_fecha_inicial, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(t_monto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(t_fecha_final, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                                .addGap(9, 9, 9)
                                .addComponent(c_operacion, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(c_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(c_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(b_menu_ppal, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(574, 574, 574))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 28, Short.MAX_VALUE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_num_transaccion, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(l_formato, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169)))
                .addGap(40, 40, 40)
                .addComponent(b_Consultar)
                .addGap(178, 178, 178))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_numeroEnc, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_promedio, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(t_fecha_inicial, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(t_fecha_final, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(t_vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(t_monto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(c_operacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(c_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(c_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l_formato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(t_num_transaccion, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(22, 22, 22))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(b_Consultar)
                        .addGap(78, 78, 78)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(t_numeroEnc, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(t_promedio, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(b_menu_ppal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l_nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 944, Short.MAX_VALUE)
                                    .addComponent(l_dirdom, javax.swing.GroupLayout.DEFAULT_SIZE, 944, Short.MAX_VALUE)
                                    .addComponent(l_apellido, javax.swing.GroupLayout.DEFAULT_SIZE, 944, Short.MAX_VALUE)
                                    .addComponent(l_RUC, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l_dirtra, javax.swing.GroupLayout.DEFAULT_SIZE, 948, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(l_teldom, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(l_teltra, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(l_celular, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(l_email, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_RUC, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(l_dirdom, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_dirtra, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_teldom, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_teltra, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_celular, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_email, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        lb_error.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_error, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_menu_ppalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_menu_ppalActionPerformed
        if (b_menu_ppal.isEnabled()) {
            log.info("MENÚ PRINCIPAL");
            ventana_padre.mostrarMenu();
        }
}//GEN-LAST:event_b_menu_ppalActionPerformed

    // Si se presiona Enter en la tabla, tiene que mostrarnos el documento que está seleccionado
    private void t_tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_tableKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB && evt.isShiftDown()) {
            t_table.transferFocusBackward();
        } else if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            t_table.transferFocus();
        }
}//GEN-LAST:event_t_tableKeyPressed

    private void t_fecha_inicialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_fecha_inicialKeyTyped
        accionIntro(evt);
    }//GEN-LAST:event_t_fecha_inicialKeyTyped

    private void t_fecha_finalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_fecha_finalKeyTyped
        accionIntro(evt);
    }//GEN-LAST:event_t_fecha_finalKeyTyped

    private void t_vendedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_vendedorKeyTyped
        accionIntro(evt);
    }//GEN-LAST:event_t_vendedorKeyTyped

    private void t_montoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_montoKeyTyped
        accionIntro(evt);
    }//GEN-LAST:event_t_montoKeyTyped

    private void t_observacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_observacionesKeyTyped
        accionIntro(evt);
    }//GEN-LAST:event_t_observacionesKeyTyped

    private void c_estadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c_estadoKeyTyped
        accionIntro(evt);
    }//GEN-LAST:event_c_estadoKeyTyped

    private void b_ConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_ConsultarActionPerformed
        accionBuscar();
    }//GEN-LAST:event_b_ConsultarActionPerformed

    private void c_operacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c_operacionesKeyTyped
        accionIntro(evt);
    }//GEN-LAST:event_c_operacionesKeyTyped

    private void c_tipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c_tipoKeyTyped
        accionIntro(evt);
    }//GEN-LAST:event_c_tipoKeyTyped

    private void t_num_transaccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_num_transaccionKeyTyped
        accionIntro(evt);
    }//GEN-LAST:event_t_num_transaccionKeyTyped

    private void c_tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_tipoActionPerformed
        crearLabelFormato();
    }//GEN-LAST:event_c_tipoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_Consultar;
    private com.comerzzia.jpos.gui.components.form.JButtonForm b_menu_ppal;
    private javax.swing.JComboBox c_estado;
    private javax.swing.JComboBox c_operacion;
    private javax.swing.JComboBox c_tipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel l_RUC;
    private javax.swing.JLabel l_apellido;
    private javax.swing.JLabel l_celular;
    private javax.swing.JLabel l_dirdom;
    private javax.swing.JLabel l_dirtra;
    private javax.swing.JLabel l_email;
    private javax.swing.JLabel l_formato;
    private javax.swing.JLabel l_nombre;
    private javax.swing.JLabel l_teldom;
    private javax.swing.JLabel l_teltra;
    private javax.swing.JLabel lb_error;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_fecha_final;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_fecha_inicial;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_monto;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_num_transaccion;
    private javax.swing.JLabel t_numeroEnc;
    private com.comerzzia.jpos.gui.components.form.JTextAreaForm t_observaciones;
    private javax.swing.JLabel t_promedio;
    private javax.swing.JTable t_table;
    private com.comerzzia.jpos.gui.components.form.JTextFieldForm t_vendedor;
    // End of variables declaration//GEN-END:variables

    @Override
    public void iniciaVista() {
        log.debug("iniciaVista()");
        l_RUC.setText(cliente.getIdentificacion());
        l_nombre.setText(cliente.getNombre());
        l_apellido.setText(cliente.getApellido());
        if(cliente.getDireccion()!=null && cliente.getDireccion().length()>110){
         l_dirdom.setText("<html>"+cliente.getDireccion().substring(0, 110)+"<br>"+cliente.getDireccion().substring(110)+"</html>");   
        } else {
            l_dirdom.setText(cliente.getDireccion());
        }
        l_teldom.setText(cliente.getTelefonoParticular());
        if(cliente.getDireccionTrabajo()!=null && cliente.getDireccionTrabajo().length()>110){
            l_dirtra.setText("<html>"+cliente.getDireccionTrabajo().substring(0, 110)+"<br>"+cliente.getDireccionTrabajo().substring(110)+"</html>");  
        } else {
            l_dirtra.setText(cliente.getDireccionTrabajo());
        }
        l_teltra.setText(cliente.getTelefonoTrabajo());
        l_celular.setText(cliente.getTelefonoMovil());
        l_email.setText(cliente.getEmail());
        
        t_fecha_inicial.requestFocus(true);
        
        t_observaciones.setLineWrap(true);
        t_observaciones.setWrapStyleWord(true);
        
        Border empty = new EmptyBorder(0, 0, 0, 0);
        
        jScrollPane2.setViewportBorder(empty);
        t_table.setBorder(empty);
        jScrollPane2.getViewport().setOpaque(false);
    }

    @Override
    public void iniciaFoco() {
        //
    }
    
    private void addFunctionKeys() {

        log.info("Función de acciones de teclado");

        KeyStroke f12 = KeyStroke.getKeyStroke(KeyEvent.VK_F12, 0);
        Action listenerf12 = new AbstractAction() {

            public void actionPerformed(ActionEvent ae) {
                b_menu_ppalActionPerformed(ae);
            }
        };
        addHotKey(f12, "IdentClientF12", listenerf12);
        
        t_table.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "Enter");
            t_table.getActionMap().put("Enter", new AbstractAction() {
                @Override
                public void actionPerformed(ActionEvent ae) {
                    try {
                        DocumentosBean docu = lista.get(t_table.getSelectedRow());
                        docu = DocumentosService.consultarDoc(docu.getTipo(), docu.getCodAlmacen(), docu.getCodCaja(), docu.getIdDocumento());
                        if(docu.getTipo().equals(DocumentosBean.FACTURA)){
                            //Para factura solo imprimimos aquellas de tipo factura (no pago, ni cupon, ni bono,...)
                            Iterator it = docu.getImpresos().iterator();                    
                            while(it.hasNext()){
                                DocumentosImpresosBean docImpr = (DocumentosImpresosBean)it.next();
                                if(!docImpr.getTipoImpreso().equals(DocumentosImpresosBean.TIPO_FACTURA)){
                                    it.remove();
                                }
                            }
                            PrintServices.getInstance().reimprimirDocuCliente(docu,true);
                        }
                        if(docu.getTipo().equals(DocumentosBean.NOTA_CREDITO)){
                            /**
                             * Rd Se agrega el campo Observacion
                             */
                            PrintServices.getInstance().reimpresionNotaCredito(docu,true,"Pantalla Historial Cliente");
                        }
                        if(docu.getTipo().equals(DocumentosBean.CREDITO_ABONO)){
                            /**
                             * Rd Se agrega el campo Observacion
                             */
                            PrintServices.getInstance().reimpresionCreditoAbono(docu, true,"Pantalla Historial Cliente");
                        }
                        if(docu.getTipo().equals(DocumentosBean.LETRA_ABONO)){
                            /**
                             * Rd Se agrega el campo Observacion
                             */
                            PrintServices.getInstance().reimpresionLetraAbono(docu, true,"Pantalla Historial Cliente");
                        }
                        if(docu.getTipo().equals(DocumentosBean.RESERVACION) || docu.getTipo().equals(DocumentosBean.PLAN_NOVIO)){
                            PrintServices.getInstance().reimpresionReservacion(docu, true);
                        }
                        if(docu.getTipo().equals(DocumentosBean.ABONO_RESERVA) || docu.getTipo().equals(DocumentosBean.ABONO_PLAN_NOVIO)){
                            PrintServices.getInstance().reimpresionComprobanteAbono(docu,true,Boolean.FALSE);
                        }
                        if(docu.getTipo().equals(DocumentosBean.GIFTCARD)){
                            /**
                             * Rd Se agrega el campo Observacion
                             */
                            PrintServices.getInstance().reimpresionGiftCard(docu, true,"Pantalla Historial Cliente",Boolean.FALSE);
                        } 
                        if(docu.getTipo().equals(DocumentosBean.BONO) || docu.getTipo().equals(DocumentosBean.BONO_RESERVA)){
                            PrintServices.getInstance().reimpresionBonoReserva(docu, true);
                        } 
                    } catch (IndexOutOfBoundsException e) {
                        ventana_padre.crearError("Debe de realizar una búsqueda antes de consultar un documento. ");
                    } catch (Exception e) {
                        log.error(e.getMessage(), e);
                        ventana_padre.crearError("Error reimprimiendo el documento. ");
                    }
                }
            });      
        
        Acciones.crearAccionFocoTabla(this, t_table);
    }

    @Override
    public void addError(ValidationFormException e) {
        lb_error.setText(e.getMessage());
    }

    public void addError(DocumentoException e) {
        lb_error.setText(e.getMessage());
    }
    
    private void crearAdvertencia(String msg) {
        ventana_padre.crearAdvertencia(msg);
    }   
      
    @Override
    public void clearError() {
        lb_error.setText("");
    }

    //Acción que busca los documentos y los muestra en la tabla
    private void accionBuscar() {
        try {
            t_fecha_inicial.validar();
            t_fecha_final.validar();  
            t_num_transaccion.validar();
            t_promedio.setText("");
            
            String tipo = (String) c_tipo.getSelectedItem();
     
            ParametrosDocumentos paramDocumentos = crearParametrosBusca();
            lista = DocumentosService.consultarDocumentos(paramDocumentos);
            if (lista.isEmpty()) {
                crearAdvertencia("No se han encontrado tickets con los filtros indicados.");
            }            
            
            if(tipo.equals("Factura")){
                //Crear la tabla de la clase FacturaClientesTableModel
                t_numeroEnc.setText("Nro. Factura Encontradas: "+lista.size());
                calcularPromedio();
                refrescarTablaFactura(new FacturaClientesTableModel(lista));
            }
            if(tipo.equals("Notas de Crédito")){
                //Crear la tabla de la clase NotaCreditoClientesTableModel
                t_numeroEnc.setText("Nro. NC encontrados: "+lista.size());
                refrescarTablaNotaCredito(new NotaCreditoClientesTableModel(lista));
            }
            if(tipo.equals("Pagos de Créditos Directos") || tipo.equals("Pagos de Créditos Temporales") || tipo.equals("Plan Novio")
                    || tipo.equals("Recibo de Abono de Reservación") || tipo.equals("Recibo de Abono de Plan Novio")){
                //Crear la tabla de la clase ReciboClientesTableModel
                t_numeroEnc.setText("Nro. Recibos: "+lista.size());
                refrescarTablaRecibo(new ReciboClientesTableModel(lista));                
            }
            if(tipo.equals("GiftCard")) {
                //Crear la tabla de la clase GiftCardClientesTableModel
                t_numeroEnc.setText("Nro. Recibos: "+lista.size());
                refrescarTablaGiftCard(new GiftCardClientesTableModel(lista));
            }
            if(tipo.equals("Bono Efectivo")) {
                //Crear la tabla de la clase BonoClienteTableModel
                t_numeroEnc.setText("Nro. Recibos: "+lista.size());
                refrescarTablaBono(new BonoClientesTableModel(lista));
            }
            if(tipo.equals("Reservaciones")) {
                //Crear la tabla de la clase ReservaTableModel
                t_numeroEnc.setText("Nro. Recibos: "+lista.size());
                refrescarTablaReserva(new ReservaClientesTableModel(lista));                
            }
            
            if (t_table.getRowCount() >= 0) {
                t_table.setVisible(true);
                ListSelectionModel selectionModel = t_table.getSelectionModel();
                selectionModel.setSelectionInterval(0, 0);
                t_table.requestFocus();
            }             
            
        } catch (ValidationFormException ex) {
            addError(ex);
        } catch (DocumentoException ex) {
            addError(ex);
        }
    }
    
    //Crea un objeto ParametrosDocumento que nos va a servir para filtrar la búsqueda de documentos
    private ParametrosDocumentos crearParametrosBusca() throws DocumentoException {
        String tipo = (String) c_tipo.getSelectedItem();
        ParametrosDocumentos paramDocumentos = new ParametrosDocumentos();
        paramDocumentos.setCodCli(cliente.getCodcli());
        try{
            if(t_fecha_inicial.getText() != null && !t_fecha_inicial.getText().isEmpty()){
                paramDocumentos.setFechaIni(new Fecha(formateadorFechaCorta.parse(t_fecha_inicial.getText())));
            }
            if(t_fecha_final.getText() != null && !t_fecha_final.getText().isEmpty()){
                //Para poder buscar la fecha hasta las 24:00 del día
                Fecha hasta = new Fecha(formateadorFechaCorta.parse(t_fecha_final.getText()));
                hasta.sumaDias(1);
                paramDocumentos.setFechaFin(hasta);
            }
        } catch (ParseException pe){
            log.error("Error en el parseado de la fecha, no se filtrará por fecha");
        }
        if(t_vendedor.getText() != null && !t_vendedor.getText().isEmpty()){
            paramDocumentos.setUsuario(t_vendedor.getText());
        }
        if(t_monto.getText() != null && !t_monto.getText().isEmpty()){
            paramDocumentos.setMonto(new BigDecimal(t_monto.getText().replace(',', '.')));
            paramDocumentos.setOperacion((String)c_operacion.getSelectedItem());
        }
        if(t_observaciones.getText() != null && !t_observaciones.getText().trim().isEmpty()){
            paramDocumentos.setObservaciones(t_observaciones.getText().trim());
        }
        if(t_num_transaccion.getText() != null && !t_num_transaccion.getText().trim().isEmpty()){
            String[] numTransaccion = t_num_transaccion.getText().trim().split("-");
            for(int i=0;i<numTransaccion.length-1;i++){
                numTransaccion[i] = Numero.completaconCeros(numTransaccion[i], 3);
            }
            if("Factura".equals(tipo) || "Notas de Crédito".equals(tipo)){
                numTransaccion[2] = Numero.completaconCeros(numTransaccion[2],9);
            }
            String trans=numTransaccion[0];
            for(int i=1;i<numTransaccion.length;i++){
                trans=trans+"-"+numTransaccion[i];
            }
            t_num_transaccion.setText(trans);
            paramDocumentos.setNumTransaccion(trans);
        }
        
        String estado = (String) c_estado.getSelectedItem();
        if(estado.equals("Vigente")){
            paramDocumentos.setEstado("V");
            paramDocumentos.setEstados(new ArrayList<String>());
            paramDocumentos.getEstados().add("V");
            paramDocumentos.getEstados().add("U");
        }else if(estado.equals("Anulado")){
            paramDocumentos.setEstado("A");
            paramDocumentos.setEstados(new ArrayList<String>());
            paramDocumentos.getEstados().add("A");
        } else if(estado.equals("Liquidado")){
            paramDocumentos.setEstado("L");
            paramDocumentos.setEstados(new ArrayList<String>());
            paramDocumentos.getEstados().add("L");            
        } else if(estado.equals("Caducado")){
            paramDocumentos.setFechaCaducidad(new Fecha());
            paramDocumentos.setEstado("V");
            paramDocumentos.setEstados(new ArrayList<String>());
            paramDocumentos.getEstados().add("V");
            paramDocumentos.getEstados().add("U");
        }
        
        if(tipo.equals("Factura")){
            paramDocumentos.setTipo(DocumentosBean.FACTURA);
        }
        if(tipo.equals("Notas de Crédito")){
            paramDocumentos.setTipo(DocumentosBean.NOTA_CREDITO);
        }          
        if(tipo.equals("Pagos de Créditos Directos")){
            paramDocumentos.setTipo(DocumentosBean.CREDITO_ABONO);
        }
        if(tipo.equals("Pagos de Créditos Temporales")){
            paramDocumentos.setTipo(DocumentosBean.LETRA_ABONO);
        }  
        if(tipo.equals("Reservaciones")){
            paramDocumentos.setTipo(DocumentosBean.RESERVACION);
        }
        if(tipo.equals("Plan Novio")){
            paramDocumentos.setTipo(DocumentosBean.PLAN_NOVIO);
        }  
        if(tipo.equals("Recibo de Abono de Reservación")){
            paramDocumentos.setTipo(DocumentosBean.ABONO_RESERVA);
        }
        if(tipo.equals("Recibo de Abono de Plan Novio")){
            paramDocumentos.setTipo(DocumentosBean.ABONO_PLAN_NOVIO);
        }  
        if(tipo.equals("GiftCard")){
            paramDocumentos.setTipo(DocumentosBean.GIFTCARD);
        }
        if(tipo.equals("Bono Efectivo")){
            paramDocumentos.setTipo(DocumentosBean.BONO);
        }         
        return paramDocumentos;
    }
    
    private void calcularPromedio(){
        if(lista != null && !lista.isEmpty()){
            BigDecimal promedio = new BigDecimal(0);
            for(DocumentosBean doc:lista){
                promedio = promedio.add(doc.getMonto());
            }
            promedio = promedio.divide(new BigDecimal(lista.size()),2);
            t_promedio.setText("Promedio Compra: $"+promedio.toString());
        }
    }
    
    //Creamos una tabla del tipo Factura
    private void refrescarTablaFactura(FacturaClientesTableModel facturaClientesTableModel) {
        t_table.setDefaultRenderer(Object.class, new FacturaClientesCellRenderer());
        t_table.setModel(facturaClientesTableModel);
        t_table.getColumnModel().getColumn(0).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(1).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(2).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(3).setPreferredWidth(300);
    }    
    
    //Creamos una tabla del tipo nota de crédito
    private void refrescarTablaNotaCredito(NotaCreditoClientesTableModel notaCreditosClientesTableModel) {
        t_table.setDefaultRenderer(Object.class, new NotaCreditoClientesCellRenderer());
        t_table.setModel(notaCreditosClientesTableModel);
        t_table.getColumnModel().getColumn(0).setPreferredWidth(330);
        t_table.getColumnModel().getColumn(1).setPreferredWidth(330);
        t_table.getColumnModel().getColumn(2).setPreferredWidth(330);   
        t_table.getColumnModel().getColumn(3).setPreferredWidth(270);
        t_table.getColumnModel().getColumn(4).setPreferredWidth(270);
        t_table.getColumnModel().getColumn(5).setPreferredWidth(270);
    }   
    
    //Creamos una tabla del tipo recibo
    private void refrescarTablaRecibo(ReciboClientesTableModel reciboClientesTableModel) {
        t_table.setDefaultRenderer(Object.class, new ReciboClientesCellRenderer());
        t_table.setModel(reciboClientesTableModel);
        t_table.getColumnModel().getColumn(0).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(1).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(2).setPreferredWidth(300);   
        t_table.getColumnModel().getColumn(3).setPreferredWidth(300);
    }
    
    //Creamos una tabla del tipo GiftCard
    private void refrescarTablaGiftCard(GiftCardClientesTableModel giftCardClientesTableModel) {
        t_table.setDefaultRenderer(Object.class, new GiftCardClientesCellRenderer());
        t_table.setModel(giftCardClientesTableModel);
        t_table.getColumnModel().getColumn(0).setPreferredWidth(330);
        t_table.getColumnModel().getColumn(1).setPreferredWidth(330);
        t_table.getColumnModel().getColumn(2).setPreferredWidth(330);   
        t_table.getColumnModel().getColumn(3).setPreferredWidth(270);
        t_table.getColumnModel().getColumn(4).setPreferredWidth(270);
        t_table.getColumnModel().getColumn(5).setPreferredWidth(270);
    }   
    
    //Creamos una tabla del tipo bono
    private void refrescarTablaBono(BonoClientesTableModel bonoClientesTableModel) {
        t_table.setDefaultRenderer(Object.class, new BonoClientesCellRenderer());
        t_table.setModel(bonoClientesTableModel);
        t_table.getColumnModel().getColumn(0).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(1).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(2).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(3).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(4).setPreferredWidth(300);
    }  
    
    //Creamos una tabla del tipo reserva
    private void refrescarTablaReserva(ReservaClientesTableModel reservaClientesTableModel) {
        t_table.setDefaultRenderer(Object.class, new ReservaClientesCellRenderer());
        t_table.setModel(reservaClientesTableModel);
        t_table.getColumnModel().getColumn(0).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(1).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(2).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(3).setPreferredWidth(300);
        t_table.getColumnModel().getColumn(4).setPreferredWidth(300);
    }      
    
    //Si se ha pulsado enter en el formulario de búsqueda, llamamos a accionBuscar que buscará en la tabla correspondiente
    private void accionIntro(KeyEvent ke) {
        if ((t_fecha_inicial.hasFocus() || t_fecha_final.hasFocus() || t_vendedor.hasFocus() || t_monto.hasFocus() || t_observaciones.hasFocus() || t_num_transaccion.hasFocus()  
                || c_operacion.hasFocus() || c_estado.hasFocus() || c_tipo.hasFocus() ) && ke.getKeyChar() == '\n') {
            
            JTextFieldForm focoEn = null;
            
            if (ke.getComponent() instanceof JTextFieldForm){
                focoEn = (JTextFieldForm) ke.getComponent();
            }
            accionBuscar();
            
            if (t_table.getRowCount() < 1 && focoEn !=null){
                focoEn.requestFocus();
            }
            
            if (t_table.getRowCount() >= 0) {
                ListSelectionModel selectionModel = t_table.getSelectionModel();
                selectionModel.setSelectionInterval(0, 0);
                t_table.requestFocus();
            }
        }        
    }

    private void crearLabelFormato() {
        String tipo = (String) c_tipo.getSelectedItem();
            if(tipo.equals("Factura")){
                l_formato.setText("Formato:TTT-CCC-XXXXXXXXX");
                c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Anulado" }));
            }
            if(tipo.equals("Notas de Crédito")){
                l_formato.setText("Formato:TTT-CCC-XXXXXXXXX");
                c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Anulado", "Caducado" }));                
            }
            if(tipo.equals("Pagos de Créditos Directos")) {
                l_formato.setText("Formato:TTT-CCC-DDDD");
                c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Anulado" }));
            }
            if(tipo.equals("Pagos de Créditos Temporales")) {
                l_formato.setText("Formato:TTT-CCC-LLLL");
                c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Anulado" }));
            }
            if (tipo.equals("Reservaciones")){
                l_formato.setText("Formato:TTT-RRRR");
                c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Anulado", "Liquidado", "Caducado" }));
            }
            if (tipo.equals("Plan Novio")) {   
                l_formato.setText("Formato:TTT-PPPP");
                c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Anulado", "Liquidado", "Caducado" }));                
            }
            if (tipo.equals("Recibo de Abono de Reservación")){
                l_formato.setText("Formato:TTT-RRRR/A");
                c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Anulado" }));                
            }
            if (tipo.equals("Recibo de Abono de Plan Novio")){
                l_formato.setText("Formato:TTT-PPPP/A");
                c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Anulado" }));                
            }
            if (tipo.equals("Bono Efectivo")){     
                l_formato.setText("Formato:TTT-BBBBBBBB");
                c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Anulado" }));                
            }
            if (tipo.equals("GiftCard")) {
                l_formato.setText("Formato:TTT-CCC-GGGG");
                c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Vigente", "Anulado" }));                
            }   
            t_num_transaccion.removeValidadores();
            t_num_transaccion.addValidador(new ValidadorNumTransaccion(tipo), this);
    }
}
